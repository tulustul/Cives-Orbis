{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/core.worker.ts","./src/app/api/change-handlers.ts","./src/app/api/city-details.ts","./src/app/api/city.ts","./src/app/api/game.ts","./src/app/api/index.ts","./src/app/api/internal/changes.ts","./src/app/api/internal/commander.ts","./src/app/api/internal/listener.ts","./src/app/api/internal/worker.ts","./src/app/api/map.ts","./src/app/api/player.ts","./src/app/api/saving.ts","./src/app/api/state.ts","./src/app/api/tracked-player.ts","./src/app/api/unit-details.ts","./src/app/api/unit.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/controls.ts","./src/app/core/area.ts","./src/app/core/areas-manager.ts","./src/app/core/buildings.ts","./src/app/core/cities-manager.ts","./src/app/core/city.ts","./src/app/core/collector.ts","./src/app/core/debug.ts","./src/app/core/game.ts","./src/app/core/idle-product.ts","./src/app/core/product.ts","./src/app/core/serialization/channel.ts","./src/app/core/tile-improvements.ts","./src/app/core/unit-actions.ts","./src/app/core/unit-manager.ts","./src/app/core/unit.ts","./src/app/core/yields.ts","./src/app/data/buildings.ts","./src/app/data/idle-products.ts","./src/app/data/units.ts","./src/app/game-canvas/game-canvas.component.ts","./src/app/game-canvas/game-canvas.component.html","./src/app/map-generators/utils.ts","./src/app/renderer/animation.ts","./src/app/renderer/area.ts","./src/app/renderer/camera.ts","./src/app/renderer/constants.ts","./src/app/renderer/map.ts","./src/app/renderer/minimap.ts","./src/app/renderer/overlays.ts","./src/app/renderer/path.ts","./src/app/renderer/politics.ts","./src/app/renderer/renderer.ts","./src/app/renderer/tile-container.ts","./src/app/renderer/tile/city.ts","./src/app/renderer/tile/river.ts","./src/app/renderer/tile/terrain.ts","./src/app/renderer/tile/unit.ts","./src/app/renderer/tile/yields.ts","./src/app/renderer/utils.ts","./src/app/shared/hex-math.ts","./src/app/shared/index.ts","./src/app/shared/tile.interface.ts","./src/app/ui/bonuses/bonuses.component.ts","./src/app/ui/bonuses/bonuses.component.html","./src/app/ui/button.directive.ts","./src/app/ui/cities-layer/cities-layer.component.ts","./src/app/ui/cities-layer/cities-layer.component.html","./src/app/ui/cities-layer/city-info/city-info.component.ts","./src/app/ui/cities-layer/city-info/city-info.component.html","./src/app/ui/city-view/city-view.component.ts","./src/app/ui/city-view/city-view.component.html","./src/app/ui/city-view/work-tiles/work-tiles.component.ts","./src/app/ui/city-view/work-tiles/work-tiles.component.html","./src/app/ui/debug/debug.component.ts","./src/app/ui/debug/debug.component.html","./src/app/ui/editor/city-editor/city-editor.component.ts","./src/app/ui/editor/city-editor/city-editor.component.html","./src/app/ui/editor/constants.ts","./src/app/ui/editor/editor.component.ts","./src/app/ui/editor/editor.component.html","./src/app/ui/editor/players-editor/players-editor.component.ts","./src/app/ui/editor/players-editor/players-editor.component.html","./src/app/ui/editor/tile-editor/tile-editor.component.ts","./src/app/ui/editor/tile-editor/tile-editor.component.html","./src/app/ui/editor/tile-painting/tile-painting.component.ts","./src/app/ui/editor/tile-painting/tile-painting.component.html","./src/app/ui/editor/unit-editor/unit-editor.component.ts","./src/app/ui/editor/unit-editor/unit-editor.component.html","./src/app/ui/game-info/game-info.component.ts","./src/app/ui/game-info/game-info.component.html","./src/app/ui/game-menu/game-menu.component.ts","./src/app/ui/game-menu/game-menu.component.html","./src/app/ui/game-menu/load-view/load-view.component.ts","./src/app/ui/game-menu/load-view/load-view.component.html","./src/app/ui/game-menu/main-menu-view/main-menu-view.component.ts","./src/app/ui/game-menu/main-menu-view/main-menu-view.component.html","./src/app/ui/game-menu/new-game-view/new-game-view.component.ts","./src/app/ui/game-menu/new-game-view/new-game-view.component.html","./src/app/ui/game-menu/save-view/save-view.component.ts","./src/app/ui/game-menu/save-view/save-view.component.html","./src/app/ui/game-menu/saves-list/saves-list.component.ts","./src/app/ui/game-menu/saves-list/saves-list.component.html","./src/app/ui/map-ui.ts","./src/app/ui/minimap/minimap.component.ts","./src/app/ui/minimap/minimap.component.html","./src/app/ui/next-turn-button/next-turn-button.component.ts","./src/app/ui/next-turn-button/next-turn-button.component.html","./src/app/ui/next-turn.service.ts","./src/app/ui/percent-bonus.pipe.ts","./src/app/ui/player-yields/player-yields.component.ts","./src/app/ui/player-yields/player-yields.component.html","./src/app/ui/product-requirements/product-requirements.component.ts","./src/app/ui/product-requirements/product-requirements.component.html","./src/app/ui/turn-counter/turn-counter.component.ts","./src/app/ui/turn-counter/turn-counter.component.html","./src/app/ui/turns.pipe.ts","./src/app/ui/ui-state.ts","./src/app/ui/unit-action-requirements/unit-action-requirements.component.ts","./src/app/ui/unit-action-requirements/unit-action-requirements.component.html","./src/app/ui/unit-marker/unit-marker.component.ts","./src/app/ui/unit-marker/unit-marker.component.html","./src/app/ui/unit-panel/unit-panel.component.ts","./src/app/ui/unit-panel/unit-panel.component.html","./src/app/ui/widgets/modal/modal.component.ts","./src/app/ui/widgets/modal/modal.component.html","./src/app/ui/widgets/multiselect/multiselect.component.ts","./src/app/ui/widgets/multiselect/multiselect.component.html","./src/app/ui/widgets/progress-bar/progress-bar.component.ts","./src/app/ui/widgets/progress-bar/progress-bar.component.html","./src/app/ui/widgets/radio/radio.component.ts","./src/app/ui/widgets/radio/radio.component.html","./src/app/ui/widgets/spinner/spinner.component.ts","./src/app/ui/widgets/tabs/index.ts","./src/app/ui/widgets/tabs/tab/tab.component.ts","./src/app/ui/widgets/tabs/tab/tab.component.html","./src/app/ui/widgets/tabs/tabs.component.ts","./src/app/ui/widgets/tabs/tabs.component.html","./src/app/ui/widgets/toggle/toggle.component.ts","./src/app/ui/widgets/toggle/toggle.component.html","./src/app/ui/widgets/tooltip.directive.ts","./src/app/ui/widgets/tooltip/tooltip.component.ts","./src/app/ui/widgets/tooltip/tooltip.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = __webpack_public_path__ + \"0-es2015.worker.js\"","import { Unit } from \"./unit\";\nimport { City } from \"./city\";\nimport { TrackedPlayer } from \"./tracked-player\";\nimport { setChangesHandlers } from \"./internal/changes\";\nimport { GameState } from \"./state\";\nimport {\n  UnitChanneled,\n  CityChanneled,\n  TrackedPlayerChanneled,\n  TileChanneled,\n} from \"../core/serialization/channel\";\nimport { Tile } from \"./tile.interface\";\nimport { PlayerYields } from \"../shared\";\n\nconst HANDLERS = {\n  \"tiles.updated\": onTilesUpdate,\n\n  \"unit.updated\": onUnitUpdate,\n  \"unit.destroyed\": onUnitDestroyed,\n\n  \"city.updated\": onCityUpdate,\n\n  \"game.turn\": onTurn,\n\n  \"area.destroyed\": onAreaDestroyed,\n  \"area.tilesAdded\": onAreaTilesAdded,\n  \"area.tilesRemoved\": onAreaTilesRemoved,\n\n  \"trackedPlayer.set\": onTrackedPlayerSet,\n  \"trackedPlayer.yields\": onPlayerYieldsUpdate,\n  \"trackedPlayer.tilesExplored\": onTilesExplored,\n};\n\nexport function initChangeHandlers() {\n  setChangesHandlers(HANDLERS);\n}\n\nfunction onUnitUpdate(state: GameState, unitChanneled: UnitChanneled) {\n  const unit = state.unitsMap.get(unitChanneled.id);\n  if (unit) {\n    unit.update(state, unitChanneled);\n    state[\"_unitUpdated$\"].next(unit);\n  } else {\n    const newUnit = new Unit(state, unitChanneled);\n    state.units.push(newUnit);\n    state[\"_unitSpawned$\"].next(newUnit);\n  }\n}\n\nfunction onUnitDestroyed(state: GameState, id: number) {\n  const unit = state.unitsMap.get(id);\n  if (unit) {\n    unit.destroy(state);\n    state[\"_unitDestroyed$\"].next(unit);\n  }\n}\n\nfunction onCityUpdate(state: GameState, cityChanneled: CityChanneled) {\n  const city = state.citiesMap.get(cityChanneled.id);\n  if (city) {\n    city.update(cityChanneled);\n    state[\"_cityUpdated$\"].next(city);\n  } else {\n    const newCity = new City(state, cityChanneled);\n    state.cities.push(newCity);\n    state[\"_citySpawned$\"].next(newCity);\n  }\n}\n\nfunction onTurn(state: GameState, turn: number) {\n  state[\"_turn$\"].next(turn);\n}\n\nfunction onAreaDestroyed(state: GameState, turn: number) {\n  state[\"_turn$\"].next(turn);\n}\n\nfunction onAreaTilesAdded(state: GameState, data) {\n  const area = state.areasMap.get(data.id);\n  if (!area) {\n    return;\n  }\n\n  area.addTiles(state.map.getTilesFromIds(data.tiles));\n}\n\nfunction onAreaTilesRemoved(state: GameState, data) {\n  const area = state.areasMap.get(data.id);\n  if (!area) {\n    return;\n  }\n\n  area.removeTiles(state.map.getTilesFromIds(data.tiles));\n}\n\nfunction onPlayerYieldsUpdate(state: GameState, yields: PlayerYields) {\n  state.trackedPlayer.yields = yields;\n}\n\nfunction onTilesExplored(state: GameState, tilesIds: number[]) {\n  const tiles = tilesIds.map((id) => state.map.tilesMap.get(id)!);\n  state.trackedPlayer.exploreTiles(tiles);\n  state[\"_tilesExplored$\"].next(tiles);\n}\n\nfunction onTrackedPlayerSet(\n  state: GameState,\n  trackedPlayer: TrackedPlayerChanneled,\n) {\n  state.trackedPlayer = new TrackedPlayer(state, trackedPlayer);\n  state[\"_trackedPlayer$\"].next(state.trackedPlayer);\n}\n\nfunction onTilesUpdate(state: GameState, tilesChanneled: TileChanneled[]) {\n  const tiles: Tile[] = [];\n  for (const tileChanneled of tilesChanneled) {\n    const tile = state.map.tilesMap.get(tileChanneled.id)!;\n    Object.assign(tile, tileChanneled);\n    if (tileChanneled.areaOf !== null) {\n      tile.areaOf = state.citiesMap.get(tileChanneled.areaOf)!;\n    }\n    if (tileChanneled.cityId !== null) {\n      tile.city = state.citiesMap.get(tileChanneled.cityId)!;\n    }\n    tiles.push(tile);\n  }\n  state[\"_tilesUpdated$\"].next(tiles);\n}\n","import { Player } from \"./player\";\nimport { Product, ProductType } from \"../core/city\";\nimport { Yields } from \"../core/yields\";\nimport { Building, BUILDINGS_MAP } from \"../core/buildings\";\nimport { UnitDefinition } from \"../core/unit.interface\";\nimport { IdleProduct, IDLE_PRODUCTS_MAP } from \"../core/idle-product\";\nimport { GameState } from \"./state\";\nimport { ProductDefinition } from \"../core/product\";\nimport { UNITS_MAP } from \"../core/unit\";\nimport { makeCommand } from \"./internal/commander\";\nimport { CityDetailsChanneled } from \"../core/serialization/channel\";\nimport { Tile } from \"./tile.interface\";\nimport { City } from \"./city\";\n\nexport class CityDetails {\n  id: number;\n  name: string;\n  size: number;\n  tile: Tile;\n  player: Player;\n\n  totalFood: number;\n  foodToGrow: number;\n  turnsToGrow: number;\n\n  totalProduction: number;\n  turnsToProductionEnd: number | null;\n\n  product: Product | null;\n\n  foodConsumed: number;\n\n  totalCulture: number;\n  cultureToExpand: number;\n\n  tileYields: Yields;\n  yields: Yields;\n  perTurn: Yields;\n\n  buildings: Building[];\n  buildingsIds: Set<string>;\n\n  tiles: Set<Tile>;\n\n  workedTiles: Set<Tile>;\n\n  availableBuildings: Building[];\n\n  disabledBuildings: Set<Building>;\n\n  availableUnits: UnitDefinition[];\n  disabledUnits: Set<UnitDefinition>;\n\n  availableIdleProducts: IdleProduct[];\n  disabledIdleProducts: Set<IdleProduct>;\n\n  citySimple: City;\n\n  constructor(private game: GameState, city: CityDetailsChanneled) {\n    this.id = city.id;\n    this.update(city);\n    this.citySimple = game.citiesMap.get(city.id)!;\n  }\n\n  private update(city: CityDetailsChanneled) {\n    this.name = city.name;\n    this.size = city.size;\n    this.tile = this.game.map.tilesMap.get(city.tileId)!;\n    this.player = this.game.playersMap.get(city.playerId)!;\n\n    this.totalFood = city.totalFood;\n    this.foodToGrow = city.foodToGrow;\n    this.turnsToGrow = city.turnsToGrow;\n\n    this.totalProduction = city.totalProduction;\n    this.turnsToProductionEnd = city.turnsToProductionEnd;\n\n    this.product = null;\n    if (city.productId && city.productType) {\n      let defition: ProductDefinition;\n      if (city.productType === \"building\") {\n        defition = BUILDINGS_MAP.get(city.productId)!;\n      } else if (city.productType === \"unit\") {\n        defition = UNITS_MAP.get(city.productId)!;\n      } else {\n        defition = IDLE_PRODUCTS_MAP.get(city.productId)!;\n      }\n      this.product = {\n        type: city.productType,\n        productDefinition: defition,\n      };\n    }\n\n    this.foodConsumed = city.foodConsumed;\n\n    this.totalCulture = city.totalCulture;\n    this.cultureToExpand = city.cultureToExpand;\n\n    this.tileYields = city.tileYields;\n    this.yields = city.yields;\n    this.perTurn = city.perTurn;\n\n    this.buildings = city.buildingsIds.map((id) => BUILDINGS_MAP.get(id)!);\n    this.buildingsIds = new Set(city.buildingsIds);\n\n    this.tiles = new Set(\n      city.tiles.map((id) => this.game.map.tilesMap.get(id)!),\n    );\n    this.workedTiles = new Set(\n      city.workedTiles.map((id) => this.game.map.tilesMap.get(id)!),\n    );\n\n    this.availableBuildings = city.availableBuildings.map(\n      (id) => BUILDINGS_MAP.get(id)!,\n    );\n    this.availableIdleProducts = city.availableIdleProducts.map(\n      (id) => IDLE_PRODUCTS_MAP.get(id)!,\n    );\n    this.availableUnits = city.availableUnits.map((id) => UNITS_MAP.get(id)!);\n\n    this.disabledBuildings = new Set(\n      city.disabledBuildings.map((id) => BUILDINGS_MAP.get(id)!),\n    );\n    this.disabledUnits = new Set(\n      city.disabledUnits.map((id) => UNITS_MAP.get(id)!),\n    );\n    this.disabledIdleProducts = new Set(\n      city.disabledIdleProducts.map((id) => IDLE_PRODUCTS_MAP.get(id)!),\n    );\n  }\n\n  getTurnsToProduce(product: ProductDefinition) {\n    return Math.ceil(product.productionCost / this.yields.production);\n  }\n\n  get turnsToExpand() {\n    const remainingCulture = this.cultureToExpand - this.totalCulture;\n    return Math.ceil(remainingCulture / this.perTurn.culture);\n  }\n\n  async workTile(tile: Tile) {\n    const cityData = await makeCommand<CityDetailsChanneled>(\"city.workTile\", {\n      cityId: this.id,\n      tileId: tile.id,\n    });\n\n    this.update(cityData);\n  }\n\n  async unworkTile(tile: Tile) {\n    const cityData = await makeCommand<CityDetailsChanneled>(\n      \"city.unworkTile\",\n      {\n        cityId: this.id,\n        tileId: tile.id,\n      },\n    );\n\n    this.update(cityData);\n  }\n\n  async produceBuilding(building: Building) {\n    const cityData = await makeCommand<CityDetailsChanneled>(\"city.produce\", {\n      cityId: this.id,\n      type: \"building\" as ProductType,\n      productId: building.id,\n    });\n    this.update(cityData);\n  }\n\n  async produceUnit(unit: UnitDefinition) {\n    const cityData = await makeCommand<CityDetailsChanneled>(\"city.produce\", {\n      cityId: this.id,\n      type: \"unit\" as ProductType,\n      productId: unit.id,\n    });\n    this.update(cityData);\n  }\n\n  async workOnIdleProduct(idleProduct: IdleProduct) {\n    const cityData = await makeCommand<CityDetailsChanneled>(\"city.produce\", {\n      cityId: this.id,\n      type: \"idleProduct\" as ProductType,\n      productId: idleProduct.id,\n    });\n    this.update(cityData);\n  }\n\n  async optimizeYields() {\n    const cityData = await makeCommand<CityDetailsChanneled>(\n      \"city.optimizeYields\",\n      this.id,\n    );\n    this.update(cityData);\n  }\n\n  getNotWorkedTiles() {\n    const notWorkedTiles: Tile[] = [];\n    for (const tile of this.tiles) {\n      if (!this.workedTiles.has(tile)) {\n        notWorkedTiles.push(tile);\n      }\n    }\n    return notWorkedTiles;\n  }\n}\n","import { GameState } from \"./state\";\nimport { Player } from \"./player\";\nimport { CityChanneled } from \"../core/serialization/channel\";\nimport { makeCommand } from \"./internal/commander\";\nimport { Tile } from \"./tile.interface\";\n\nexport class City {\n  id: number;\n  player: Player;\n  tile: Tile;\n\n  name: string;\n  size: number;\n\n  totalFood: number;\n  foodToGrow: number;\n  foodPerTurn: number;\n  turnsToGrow: number;\n\n  totalProduction: number;\n  productionRequired: number | null;\n  productionPerTurn: number;\n  turnsToProductionEnd: number | null;\n  productName: string | null;\n\n  constructor(private game: GameState, city: CityChanneled) {\n    this.id = city.id;\n    this.tile = game.map.tilesMap.get(city.tileId)!;\n\n    this.tile.city = this;\n\n    this.update(city);\n\n    game.citiesMap.set(this.id, this);\n  }\n\n  update(city: CityChanneled) {\n    this.name = city.name;\n    this.size = city.size;\n\n    this.player = this.game.playersMap.get(city.playerId)!;\n\n    this.totalFood = city.totalFood;\n    this.foodToGrow = city.foodToGrow;\n    this.foodPerTurn = city.foodPerTurn;\n    this.turnsToGrow = city.turnsToGrow;\n\n    this.totalProduction = city.totalProduction;\n    this.productionRequired = city.productionRequired;\n    this.productionPerTurn = city.productionPerTurn;\n    this.turnsToProductionEnd = city.turnsToProductionEnd;\n    this.productName = city.productName;\n  }\n\n  async getRange() {\n    const ids = await makeCommand<number[]>(\"city.getRange\", this.id);\n    return ids.map((id) => this.game.map.tilesMap.get(id)!);\n  }\n\n  async getWorkTiles() {\n    const data = await makeCommand<{\n      workedTiles: number[];\n      notWorkedTiles: number[];\n    }>(\"city.getWorkTiles\", this.id);\n\n    return {\n      workedTiles: data.workedTiles.map(\n        (id) => this.game.map.tilesMap.get(id)!,\n      ),\n      notWorkedTiles: data.notWorkedTiles.map(\n        (id) => this.game.map.tilesMap.get(id)!,\n      ),\n    };\n  }\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\nimport { filter, skip } from \"rxjs/operators\";\n\nimport { MapGeneratorOptions } from \"./game.interface\";\nimport { makeCommand } from \"./internal/commander\";\nimport { GameState } from \"./state\";\nimport { GameChanneled } from \"../core/serialization/channel\";\nimport { PlayerTask } from \"../shared\";\n\nexport class GameApi {\n  private _state$ = new BehaviorSubject<GameState | null>(null);\n  state$ = this._state$.asObservable();\n\n  init$ = this.state$.pipe(filter((state) => !!state)) as Observable<GameState>;\n\n  stop$ = this.state$.pipe(\n    filter((state) => !state),\n    skip(1),\n  );\n\n  private _nextTask$ = new BehaviorSubject<PlayerTask | null>(null);\n  nextTask$ = this._nextTask$.asObservable();\n\n  async newGame(mapGeneratorOptions: MapGeneratorOptions): Promise<GameState> {\n    if (this.state) {\n      this._state$.next(null);\n    }\n\n    const gameChanneled = await makeCommand<GameChanneled>(\n      \"game.new\",\n      mapGeneratorOptions,\n    );\n\n    this._state$.next(new GameState(gameChanneled));\n    return this._state$.value as GameState;\n  }\n\n  async loadGame(data: string): Promise<GameState | null> {\n    if (this.state) {\n      this._state$.next(null);\n    }\n\n    const gameChanneled = await makeCommand<GameChanneled>(\n      \"game.loadDump\",\n      data,\n    );\n\n    this._state$.next(new GameState(gameChanneled));\n    return this._state$.value;\n  }\n\n  saveGame() {\n    return makeCommand<string>(\"game.saveDump\");\n  }\n\n  nextPlayer() {\n    return makeCommand(\"game.nextPlayer\");\n  }\n\n  get state() {\n    return this._state$.value;\n  }\n\n  get nextTask() {\n    return this._nextTask$.value;\n  }\n}\n\nexport const gameApi = new GameApi();\n","import { initWorkerListeners } from \"./internal/listener\";\nimport { initChangeHandlers } from \"./change-handlers\";\n\nexport * from \"./game\";\nexport * from \"./game.interface\";\n\ninitWorkerListeners();\ninitChangeHandlers();\n","import { GameState } from \"../state\";\n\nexport type ChangeHandler = (state: GameState, data: any) => void;\n\nexport const changeHandlers = new Map<string, ChangeHandler>();\n\nexport function setChangesHandlers(handlers: { [key: string]: ChangeHandler }) {\n  for (const [changeType, handler] of Object.entries(handlers)) {\n    changeHandlers.set(changeType, handler);\n  }\n}\n","import { awaitingExecutors, worker } from \"./worker\";\n\nexport function makeCommand<T>(command: string, data: any = {}) {\n  return new Promise<T>((resolve, reject) => {\n    awaitingExecutors.push(resolve);\n    worker.postMessage({ command, data });\n  });\n}\n","import { worker, awaitingExecutors } from \"./worker\";\nimport { changeHandlers } from \"./changes\";\nimport { gameApi } from \"../game\";\n\nexport function initWorkerListeners() {\n  worker.addEventListener(\"error\", onError, false);\n  worker.addEventListener(\"message\", onMessage, false);\n}\n\nfunction onMessage(event: MessageEvent) {\n  const executor = awaitingExecutors.shift();\n  if (!executor) {\n    console.error(\"No awaiting executors but message received.\");\n    return;\n  }\n\n  if (event.data.changes.length && !gameApi.state) {\n    console.error(\"Received change events but state is not instantiated yet.\");\n  } else {\n    for (const change of event.data.changes) {\n      console.debug(`change received: ${change.type}`);\n      const handler = changeHandlers.get(change.type);\n      if (!handler) {\n        console.error(`No handler for change with type \"${change.type}\"`);\n        continue;\n      }\n\n      handler(gameApi.state!, change.data);\n    }\n  }\n\n  executor(event.data.result);\n\n  gameApi[\"_nextTask$\"].next(event.data.nextTask);\n}\n\nfunction onError(error: any) {\n  console.error(`Webworker error: ${error.message}`);\n}\n","export const worker = new Worker(\"../../core.worker\", { type: \"module\" });\n\nexport const awaitingExecutors: ((value: any) => void)[] = [];\n","import { getTileNeighbours, getTileFullNeighbours } from \"../shared/hex-math\";\nimport { MapChanneled } from \"../core/serialization/channel\";\nimport { GameState } from \"./state\";\nimport { Tile } from \"./tile.interface\";\n\nexport class TilesMap {\n  width = 0;\n  height = 0;\n  tiles: Tile[][] = [];\n  tilesMap = new Map<number, Tile>();\n\n  constructor(map: MapChanneled) {\n    this.width = map.width;\n    this.height = map.height;\n    this.tiles = (map.tiles as unknown) as Tile[][];\n\n    for (let x = 0; x < this.width; x++) {\n      for (let y = 0; y < this.height; y++) {\n        const tile: Tile = this.tiles[x][y];\n        this.tilesMap.set(tile.id, tile);\n        tile.neighbours = getTileNeighbours(this.tiles, x, y);\n        tile.fullNeighbours = getTileFullNeighbours(this.tiles, x, y);\n        tile.units = [];\n      }\n    }\n  }\n\n  preprocess(game: GameState) {\n    for (let x = 0; x < this.width; x++) {\n      for (let y = 0; y < this.height; y++) {\n        const tile: Tile = this.tiles[x][y];\n        if (tile.areaOf !== null) {\n          tile.areaOf = game.citiesMap.get(tile.areaOf as any)!;\n        }\n      }\n    }\n  }\n\n  get(x: number, y: number): Tile | null {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return null;\n    }\n    return this.tiles[x][y];\n  }\n\n  getTilesFromIds(ids: number[]): Tile[] {\n    return ids.map((id) => this.tilesMap.get(id)!);\n  }\n}\n","import { PlayerChanneled } from \"../core/serialization/channel\";\n\nexport class Player {\n  id: number;\n  color: number;\n  cssColor: string;\n  vec4Color: number[];\n\n  areaId: number;\n\n  constructor(player: PlayerChanneled) {\n    this.id = player.id;\n    this.color = player.color;\n    this.cssColor = \"#\" + this.color.toString(16).padStart(6, \"0\");\n    this.vec4Color = [\n      parseInt(this.cssColor[1] + this.cssColor[2], 16) / 255,\n      parseInt(this.cssColor[3] + this.cssColor[4], 16) / 255,\n      parseInt(this.cssColor[5] + this.cssColor[6], 16) / 255,\n      1,\n    ];\n\n    this.areaId = player.areaId;\n  }\n}\n","const savesKeyPrefix = \"saves:\";\nconst listKey = \"savesList\";\n\nexport function saveGameData(data: string, saveName: string) {\n  storeData(saveName, data);\n}\n\nexport function loadGameData(saveName: string): string | null {\n  const data = getSave(saveName);\n  if (!data) {\n    console.error(`No save with name ${saveName}`);\n    return null;\n  }\n  return data;\n}\n\nexport function deleteSaveGame(saveName: string) {\n  const saveGames = listSaveGames();\n  if (!saveGames.includes(saveName)) {\n    console.error(`No save with name ${saveName}`);\n    return;\n  }\n\n  localStorage.removeItem(`${savesKeyPrefix}${saveName}`);\n\n  const index = saveGames.indexOf(saveName);\n  saveGames.splice(index, 1);\n  saveList(saveGames);\n}\n\nexport function listSaveGames(): string[] {\n  const data = localStorage.getItem(listKey);\n  if (!data) {\n    return [];\n  }\n  return JSON.parse(data) || [];\n}\n\nexport function exportSave(saveName: string) {\n  const data = getSave(saveName);\n  if (!data) {\n    return;\n  }\n  const blob = new Blob([data], { type: \"text/plain\" });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = `${saveName}.json`;\n  a.click();\n}\n\nexport async function importSave(file: File) {\n  const extension = \".json\";\n  let filename = file.name;\n\n  if (!filename.endsWith(extension)) {\n    return;\n  }\n\n  const originalName = filename.slice(0, -extension.length);\n  let name = originalName;\n\n  const saves = listSaveGames();\n\n  let i = 1;\n  while (saves.includes(name)) {\n    name = `${originalName}_${i++}`;\n  }\n\n  const data = await readFile(file);\n  storeData(name, data);\n}\n\n// private functions below\n\nasync function readFile(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = () => {\n      if (reader.result) {\n        resolve(reader.result as string);\n      } else {\n        reject();\n      }\n    };\n  });\n}\n\nfunction storeData(saveName: string, data: string) {\n  localStorage.setItem(`${savesKeyPrefix}${saveName}`, data);\n  const saveGames = listSaveGames();\n  if (!saveGames.includes(saveName)) {\n    saveGames.push(saveName);\n  }\n  saveList(saveGames);\n}\n\nfunction getSave(saveName: string): string | null {\n  return localStorage.getItem(`${savesKeyPrefix}${saveName}`);\n}\n\nfunction saveList(saveGames: string[]) {\n  localStorage.setItem(listKey, JSON.stringify(saveGames));\n}\n","import { TilesMap } from \"./map\";\nimport { Unit } from \"./unit\";\nimport { City } from \"./city\";\nimport { TrackedPlayer } from \"./tracked-player\";\nimport { makeCommand } from \"./internal/commander\";\nimport { Subject, BehaviorSubject } from \"rxjs\";\nimport { Area } from \"../renderer/area\";\nimport { BaseTile } from \"../shared\";\nimport { Player } from \"./player\";\nimport {\n  GameChanneled,\n  TrackedPlayerChanneled,\n  UnitDetailsChanneled,\n  CityDetailsChanneled,\n} from \"../core/serialization/channel\";\nimport { Tile } from \"./tile.interface\";\n\nexport class GameState {\n  private _turn$ = new BehaviorSubject<number>(0);\n  turn$ = this._turn$.asObservable();\n\n  map: TilesMap;\n  players: Player[] = [];\n  trackedPlayer: TrackedPlayer;\n  units: Unit[] = [];\n  cities: City[] = [];\n\n  unitsMap = new Map<number, Unit>();\n  citiesMap = new Map<number, City>();\n  areasMap = new Map<number, Area>();\n\n  playersMap = new Map<number, Player>();\n\n  private _tilesUpdated$ = new Subject<Tile[]>();\n  tilesUpdated$ = this._tilesUpdated$.asObservable();\n\n  private _unitSpawned$ = new Subject<Unit>();\n  unitSpawned$ = this._unitSpawned$.asObservable();\n\n  private _unitUpdated$ = new Subject<Unit>();\n  unitUpdated$ = this._unitUpdated$.asObservable();\n\n  private _unitDestroyed$ = new Subject<Unit>();\n  unitDestroyed$ = this._unitDestroyed$.asObservable();\n\n  private _citySpawned$ = new Subject<City>();\n  citySpawned$ = this._citySpawned$.asObservable();\n\n  private _cityUpdated$ = new Subject<City>();\n  cityUpdated$ = this._cityUpdated$.asObservable();\n\n  private _cityDestroyed$ = new Subject<City>();\n  cityDestroyed$ = this._cityDestroyed$.asObservable();\n\n  private _areaSpawned$ = new Subject<Area>();\n  areaSpawned$ = this._areaSpawned$.asObservable();\n\n  private _areaUpdated$ = new Subject<Area>();\n  areaUpdated$ = this._areaUpdated$.asObservable();\n\n  private _areaDestroyed$ = new Subject<Area>();\n  areaDestroyed$ = this._areaDestroyed$.asObservable();\n\n  private _tilesExplored$ = new Subject<Tile[]>();\n  tilesExplored$ = this._tilesExplored$.asObservable();\n\n  private _trackedPlayer$ = new Subject<TrackedPlayer>();\n  trackedPlayer$ = this._trackedPlayer$.asObservable();\n\n  constructor(game: GameChanneled) {\n    this._turn$.next(game.turn);\n    this.map = new TilesMap(game.map);\n\n    this.players = this.restorePlayers(game);\n    for (const player of this.players) {\n      this.playersMap.set(player.id, player);\n    }\n\n    this.units = this.restoreUnits(game);\n    this.cities = this.restoreCities(game);\n\n    this.trackedPlayer = new TrackedPlayer(this, game.trackedPlayer);\n\n    this.map.preprocess(this);\n  }\n\n  private restorePlayers(game: GameChanneled): Player[] {\n    return game.players.map((player) => new Player(player));\n  }\n\n  private restoreUnits(game: GameChanneled): Unit[] {\n    return game.units.map((unit) => new Unit(this, unit));\n  }\n\n  private restoreCities(game: GameChanneled): City[] {\n    return game.cities.map((city) => new City(this, city));\n  }\n\n  async setTrackedPlayer(playerId: number) {\n    const data = await makeCommand<TrackedPlayerChanneled>(\n      \"trackedPlayer.set\",\n      playerId,\n    );\n    this.trackedPlayer = new TrackedPlayer(this, data);\n    this._trackedPlayer$.next(this.trackedPlayer);\n  }\n\n  getUnitDetails(unitId: number): Promise<UnitDetailsChanneled | null> {\n    return makeCommand<UnitDetailsChanneled | null>(\"unit.getDetails\", unitId);\n  }\n\n  updateTile(tile: Tile) {\n    return makeCommand(\"tile.update\", this.serializeTileToUpdate(tile));\n  }\n\n  private serializeTileToUpdate(tile: Tile) {\n    return {\n      id: tile.id,\n      climate: tile.climate,\n      landForm: tile.landForm,\n      seaLevel: tile.seaLevel,\n      riverParts: tile.riverParts,\n      forest: tile.forest,\n      wetlands: tile.wetlands,\n      improvement: tile.improvement,\n      road: tile.road,\n    } as Partial<BaseTile>;\n  }\n\n  updateTiles(tiles: Tile[]) {\n    const data = tiles.map((t) => this.serializeTileToUpdate(t));\n    return makeCommand(\"tile.bulkUpdate\", data);\n  }\n\n  getCityDetails(cityId: number) {\n    return makeCommand<CityDetailsChanneled>(\"city.getDetails\", cityId);\n  }\n\n  async getAreaTiles(areaId: number) {\n    const tileIds = await makeCommand<number[]>(\"area.getTiles\", areaId);\n    return tileIds.map((id) => this.map.tilesMap.get(id)!);\n  }\n\n  updateUnit(unitId: number) {\n    this._unitUpdated$.next(this.unitsMap.get(unitId));\n  }\n}\n","import { GameState } from \"./state\";\nimport { makeCommand } from \"./internal/commander\";\nimport { Unit } from \"./unit\";\nimport { City } from \"./city\";\nimport { TrackedPlayerChanneled } from \"../core/serialization/channel\";\nimport { Tile } from \"./tile.interface\";\nimport { PlayerYields } from \"../shared\";\n\nexport class TrackedPlayer {\n  id: number;\n  color: number;\n  exploredTiles = new Set<Tile>();\n\n  units: Unit[] = [];\n  cities: City[] = [];\n\n  yields: PlayerYields;\n\n  constructor(game: GameState, player: TrackedPlayerChanneled) {\n    this.id = player.id;\n    this.color = player.color;\n    this.exploredTiles = new Set(\n      player.exploredTiles.map((id) => game.map.tilesMap.get(id)!),\n    );\n\n    this.units = player.units.map((id) => game.unitsMap.get(id)!);\n    this.cities = player.cities.map((id) => game.citiesMap.get(id)!);\n\n    this.yields = player.yields;\n  }\n\n  exploreTiles(tiles: Tile[]) {\n    for (const tile of tiles) {\n      this.exploredTiles.add(tile);\n    }\n  }\n\n  revealWorld() {\n    return makeCommand(\"trackedPlayer.revealWorld\");\n  }\n}\n","import { UnitAction } from \"../core/unit-actions\";\nimport { UnitOrder, UNITS_MAP } from \"../core/unit\";\nimport { GameState } from \"./state\";\nimport { UnitDefinition } from \"../core/unit.interface\";\nimport { Player } from \"./player\";\nimport { makeCommand } from \"./internal/commander\";\nimport { UnitDetailsChanneled } from \"../core/serialization/channel\";\nimport { Tile } from \"./tile.interface\";\n\nexport class UnitDetails {\n  id: number;\n  tile: Tile;\n  definition: UnitDefinition;\n  player: Player;\n  actionPointsLeft: number;\n  path: Tile[][] | null = null;\n  order: UnitOrder;\n\n  constructor(private game: GameState, unit: UnitDetailsChanneled) {\n    this.id = unit.id;\n    this.definition = UNITS_MAP.get(unit.definitionId)!;\n    this.update(unit);\n  }\n\n  private update(unit: UnitDetailsChanneled) {\n    this.tile = this.game.map.tilesMap.get(unit.tileId)!;\n    this.player = this.game.playersMap.get(unit.playerId)!;\n    this.actionPointsLeft = unit.actionPointsLeft;\n    this.order = unit.order;\n\n    this.path = null;\n    if (unit.path) {\n      this.path = unit.path.map((turn) =>\n        turn.map((id) => this.game.map.tilesMap.get(id)!),\n      );\n    }\n  }\n\n  async doAction(action: UnitAction) {\n    const data = await makeCommand<UnitDetailsChanneled>(\"unit.doAction\", {\n      unitId: this.id,\n      action,\n    });\n    this.update(data);\n  }\n\n  canDoAction(action: UnitAction): boolean {\n    return true;\n  }\n\n  async setOrder(order: UnitOrder) {\n    const data = await makeCommand<UnitDetailsChanneled>(\"unit.setOrder\", {\n      unitId: this.id,\n      order,\n    });\n    this.update(data);\n  }\n\n  disband() {\n    return makeCommand(\"unit.disband\", this.id);\n  }\n\n  async findPath(destination: Tile) {\n    const data = await makeCommand<UnitDetailsChanneled>(\"unit.findPath\", {\n      unitId: this.id,\n      destinationId: destination.id,\n    });\n    this.update(data);\n  }\n\n  async moveAlongPath() {\n    const data = await makeCommand<UnitDetailsChanneled>(\n      \"unit.moveAlongPath\",\n      this.id,\n    );\n    this.update(data);\n  }\n\n  async getRange(): Promise<Tile[]> {\n    const ids = await makeCommand<number[]>(\"unit.getRange\", this.id);\n    return ids.map((tileId) => this.game.map.tilesMap.get(tileId)!);\n  }\n\n  getFailedActionRequirements(action: UnitAction) {\n    // Returns failed requirements.\n    return makeCommand<UnitAction[]>(\"unit.getFailedActionRequirements\", {\n      unitId: this.id,\n      action,\n    });\n  }\n\n  async refresh() {\n    const data = await makeCommand<UnitDetailsChanneled>(\n      \"unit.getDetails\",\n      this.id,\n    );\n    this.update(data);\n  }\n}\n","import { UnitDefinition } from \"../core/unit.interface\";\nimport { GameState } from \"./state\";\nimport { UNITS_MAP } from \"../core/unit\";\nimport { Player } from \"./player\";\nimport { UnitChanneled } from \"../core/serialization/channel\";\nimport { Tile } from \"./tile.interface\";\n\nexport class Unit {\n  id: number;\n  definition: UnitDefinition;\n  player: Player;\n  tile: Tile;\n\n  constructor(game: GameState, unit: UnitChanneled) {\n    this.id = unit.id;\n    this.tile = game.map.tilesMap.get(unit.tileId)!;\n    this.player = game.playersMap.get(unit.playerId)!;\n    this.definition = UNITS_MAP.get(unit.definitionId)!;\n\n    this.tile.units.push(this);\n    game.unitsMap.set(this.id, this);\n  }\n\n  update(game: GameState, unit: UnitChanneled) {\n    const index = this.tile.units.indexOf(this);\n    if (index !== -1) {\n      this.tile.units.splice(index, 1);\n    }\n\n    this.tile = game.map.tilesMap.get(unit.tileId)!;\n    this.tile.units.push(this);\n  }\n\n  destroy(game: GameState) {\n    const index = this.tile.units.indexOf(this);\n    if (index !== -1) {\n      this.tile.units.splice(index, 1);\n    }\n\n    game.unitsMap.delete(this.id);\n  }\n}\n","import { Component, ChangeDetectionStrategy } from \"@angular/core\";\n\nimport { UIState } from \"./ui/ui-state\";\nimport { MapUi } from \"./ui/map-ui\";\nimport { GameApi } from \"./api\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  title = \"civ\";\n\n  constructor(\n    public game: GameApi,\n    public uiState: UIState,\n    public mapUi: MapUi,\n  ) {}\n}\n","<app-game-menu *ngIf=\"uiState.menuVisible$ | async\"></app-game-menu>\n\n<app-game-canvas></app-game-canvas>\n\n<ng-container *ngIf=\"game.state$ | async\">\n  <app-editor\n    class=\"panel\"\n    *ngIf=\"uiState.editorEnabled$ | async; else gameUiTmpl\"\n  ></app-editor>\n</ng-container>\n\n<ng-template #gameUiTmpl>\n  <app-cities-layer *ngIf=\"mapUi.cityLabelsVisible$ | async\"></app-cities-layer>\n  <app-turn-counter></app-turn-counter>\n\n  <app-city-view\n    *ngIf=\"uiState.selectedCity$ | async as city\"\n    [city]=\"city\"\n  ></app-city-view>\n\n  <div [class.hidden]=\"uiState.selectedCity$ | async\">\n    <app-unit-panel></app-unit-panel>\n    <app-game-info class=\"panel panel-bottom-left-corner\"></app-game-info>\n    <app-player-yields\n      class=\"panel panel-bottom-right-corner\"\n    ></app-player-yields>\n\n    <div class=\"panel panel-top-left-corner\">\n      <app-next-turn-button></app-next-turn-button>\n      <app-minimap></app-minimap>\n    </div>\n  </div>\n</ng-template>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\n\nimport { AppComponent } from \"./app.component\";\nimport { GameCanvasComponent } from \"./game-canvas/game-canvas.component\";\nimport { UnitPanelComponent } from \"./ui/unit-panel/unit-panel.component\";\nimport { NextTurnButtonComponent } from \"./ui/next-turn-button/next-turn-button.component\";\nimport { GameInfoComponent } from \"./ui/game-info/game-info.component\";\nimport { DebugComponent } from \"./ui/debug/debug.component\";\nimport { TurnCounterComponent } from \"./ui/turn-counter/turn-counter.component\";\nimport { EditorComponent } from \"./ui/editor/editor.component\";\nimport { UIState } from \"./ui/ui-state\";\nimport { TabsComponent, TabComponent } from \"./ui/widgets/tabs\";\nimport { TileEditorComponent } from \"./ui/editor/tile-editor/tile-editor.component\";\nimport { RadioComponent } from \"./ui/widgets/radio/radio.component\";\nimport { MultiselectComponent } from \"./ui/widgets/multiselect/multiselect.component\";\nimport { ToggleComponent } from \"./ui/widgets/toggle/toggle.component\";\nimport { TilePaintingComponent } from \"./ui/editor/tile-painting/tile-painting.component\";\nimport { GameMenuComponent } from \"./ui/game-menu/game-menu.component\";\nimport { SavesListComponent } from \"./ui/game-menu/saves-list/saves-list.component\";\nimport { SaveViewComponent } from \"./ui/game-menu/save-view/save-view.component\";\nimport { LoadViewComponent } from \"./ui/game-menu/load-view/load-view.component\";\nimport { MainMenuViewComponent } from \"./ui/game-menu/main-menu-view/main-menu-view.component\";\nimport { NewGameViewComponent } from \"./ui/game-menu/new-game-view/new-game-view.component\";\nimport { UnitEditorComponent } from \"./ui/editor/unit-editor/unit-editor.component\";\nimport { CityEditorComponent } from \"./ui/editor/city-editor/city-editor.component\";\nimport { CitiesLayerComponent } from \"./ui/cities-layer/cities-layer.component\";\nimport { CityInfoComponent } from \"./ui/cities-layer/city-info/city-info.component\";\nimport { CityViewComponent } from \"./ui/city-view/city-view.component\";\nimport { TurnsPipe } from \"./ui/turns.pipe\";\nimport { WorkTilesComponent } from \"./ui/city-view/work-tiles/work-tiles.component\";\nimport { ProgressBarComponent } from \"./ui/widgets/progress-bar/progress-bar.component\";\nimport { ButtonDirective } from \"./ui/button.directive\";\nimport { MinimapComponent } from \"./ui/minimap/minimap.component\";\nimport { TooltipDirective } from \"./ui/widgets/tooltip.directive\";\nimport { TooltipComponent } from \"./ui/widgets/tooltip/tooltip.component\";\nimport { BonusesComponent } from \"./ui/bonuses/bonuses.component\";\nimport { PercentBonusPipe } from \"./ui/percent-bonus.pipe\";\nimport { ProductRequirementsComponent } from \"./ui/product-requirements/product-requirements.component\";\nimport { PlayerYieldsComponent } from \"./ui/player-yields/player-yields.component\";\nimport { Controls } from \"./controls\";\nimport { NextTurnService } from \"./ui/next-turn.service\";\nimport { GameRenderer } from \"./renderer/renderer\";\nimport { MapUi } from \"./ui/map-ui\";\nimport { UnitActionRequirementsComponent } from \"./ui/unit-action-requirements/unit-action-requirements.component\";\nimport { GameApi, gameApi } from \"./api/game\";\nimport { Game } from \"./core/game\";\nimport { Camera } from \"./renderer/camera\";\nimport { PlayersEditorComponent } from './ui/editor/players-editor/players-editor.component';\nimport { SpinnerComponent } from './ui/widgets/spinner/spinner.component';\nimport { ModalComponent } from './ui/widgets/modal/modal.component';\nimport { UnitMarkerComponent } from './ui/unit-marker/unit-marker.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameCanvasComponent,\n    UnitPanelComponent,\n    NextTurnButtonComponent,\n    GameInfoComponent,\n    DebugComponent,\n    TurnCounterComponent,\n    EditorComponent,\n    TabsComponent,\n    TabComponent,\n    TileEditorComponent,\n    RadioComponent,\n    MultiselectComponent,\n    ToggleComponent,\n    TilePaintingComponent,\n    GameMenuComponent,\n    SavesListComponent,\n    SaveViewComponent,\n    LoadViewComponent,\n    MainMenuViewComponent,\n    NewGameViewComponent,\n    UnitEditorComponent,\n    CityEditorComponent,\n    CitiesLayerComponent,\n    CityInfoComponent,\n    CityViewComponent,\n    TurnsPipe,\n    WorkTilesComponent,\n    ProgressBarComponent,\n    ButtonDirective,\n    MinimapComponent,\n    TooltipDirective,\n    TooltipComponent,\n    BonusesComponent,\n    PercentBonusPipe,\n    ProductRequirementsComponent,\n    PlayerYieldsComponent,\n    UnitActionRequirementsComponent,\n    PlayersEditorComponent,\n    SpinnerComponent,\n    ModalComponent,\n    UnitMarkerComponent,\n  ],\n  imports: [BrowserModule, FormsModule, OverlayModule],\n  providers: [\n    Game,\n    { provide: GameApi, useValue: gameApi },\n    UIState,\n    Controls,\n    NextTurnService,\n    GameRenderer,\n    Camera,\n    MapUi,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\n\nimport { BehaviorSubject } from \"rxjs\";\n\nimport { NextTurnService } from \"./ui/next-turn.service\";\nimport { MapUi } from \"./ui/map-ui\";\nimport { UIState } from \"./ui/ui-state\";\nimport { Camera } from \"./renderer/camera\";\nimport { GameApi } from \"./api/game\";\n\n@Injectable()\nexport class Controls {\n  isMousePressed = false;\n\n  private _mouseButton$ = new BehaviorSubject<number | null>(null);\n  mouseButton$ = this._mouseButton$.asObservable();\n\n  constructor(\n    private game: GameApi,\n    private camera: Camera,\n    private nextTurnService: NextTurnService,\n    private mapUi: MapUi,\n    private uiState: UIState,\n  ) {}\n\n  onMouseDown(event: MouseEvent) {\n    this.isMousePressed = true;\n    this._mouseButton$.next(event.button);\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.mapUi.selectedUnit && this.mouseButton === 2) {\n      const tile = this.getTileFromMouseEvent(event);\n      if (tile) {\n        this.mapUi.selectedUnit.findPath(tile).then(() => {\n          if (this.mapUi.selectedUnit) {\n            this.mapUi.setPath(this.mapUi.selectedUnit.path);\n          }\n        });\n      }\n    }\n\n    return false;\n  }\n\n  onClick(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const hoveredTile = this.mapUi.hoveredTile;\n    if (hoveredTile) {\n      this.mapUi.clickTile(hoveredTile);\n    }\n\n    return false;\n  }\n\n  onMouseUp(event: MouseEvent) {\n    const [x, y] = this.camera.screenToGame(event.clientX, event.clientY);\n\n    const selectedUnit = this.mapUi.selectedUnit;\n    if (selectedUnit && this.mouseButton === 2) {\n      const tile = this.game.state!.map.get(x, y);\n      if (tile) {\n        selectedUnit.moveAlongPath().then(async () => {\n          this.mapUi.setPath(selectedUnit.path);\n          // to refresh the ui\n          this.mapUi[\"_selectedUnit$\"].next(selectedUnit);\n          this.mapUi.unitRangeArea.setTiles(await selectedUnit.getRange());\n        });\n      }\n    }\n\n    this.isMousePressed = false;\n    this._mouseButton$.next(null);\n  }\n\n  onMouseMove(event: MouseEvent) {\n    const tile = this.getTileFromMouseEvent(event);\n\n    if (tile !== this.mapUi.hoveredTile) {\n      this.mapUi.hoverTile(tile);\n\n      if (tile && this.mapUi.selectedUnit && this.mouseButton === 2) {\n        this.mapUi.selectedUnit.findPath(tile).then(() => {\n          if (this.mapUi.selectedUnit) {\n            this.mapUi.setPath(this.mapUi.selectedUnit.path);\n          }\n        });\n      }\n    }\n\n    if (this.mapUi.allowMapPanning && this.isMousePressed) {\n      if (this.mouseButton === 1) {\n        this.camera.moveBy(event.movementX, event.movementY);\n      }\n    }\n  }\n\n  onWheel(event: WheelEvent) {\n    this.camera.scaleByWithEasing(\n      1 + (event.deltaY > 0 ? -0.3 : 0.3),\n      event.clientX,\n      event.clientY,\n      300,\n    );\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    if (event.key === \"Enter\") {\n      this.nextTurnService.next();\n    } else if (event.key === \"Escape\") {\n      this.uiState.menuVisible$.next(true);\n    }\n  }\n\n  onKeyUp(event: KeyboardEvent) {}\n\n  getTileFromMouseEvent(event: MouseEvent) {\n    const [x, y] = this.camera.screenToGame(event.clientX, event.clientY);\n    return this.game.state!.map.get(x, y);\n  }\n\n  nextTurn() {\n    // this.mapUi.setPath(this.activeUnit?.path || null);\n  }\n\n  get mouseButton() {\n    return this._mouseButton$.value;\n  }\n}\n","import { TileCore } from \"./tile\";\nimport { collector } from \"./collector\";\n\nexport class AreaCore {\n  id = 0;\n\n  tiles = new Set<TileCore>();\n\n  add(tile: TileCore) {\n    this.tiles.add(tile);\n    collector.addAreaTiles(this.id, [tile]);\n  }\n\n  addBulk(tiles: TileCore[]) {\n    for (const tile of tiles) {\n      this.tiles.add(tile);\n    }\n    collector.addAreaTiles(this.id, tiles);\n  }\n\n  remove(tile: TileCore) {\n    this.tiles.delete(tile);\n    collector.removeAreaTiles(this.id, [tile]);\n  }\n\n  removeBulk(tiles: TileCore[]) {\n    for (const tile of tiles) {\n      this.tiles.delete(tile);\n    }\n    collector.removeAreaTiles(this.id, tiles);\n  }\n}\n","import { AreaCore } from \"./area\";\n\nexport class AreasManager {\n  areas: AreaCore[] = [];\n\n  areasMap = new Map<number, AreaCore>();\n\n  lastId = 0;\n\n  make() {\n    const area = new AreaCore();\n    area.id = this.lastId++;\n    this.areas.push(area);\n    this.areasMap.set(area.id, area);\n    return area;\n  }\n\n  destroy(area: AreaCore) {\n    this.areasMap.delete(area.id);\n    const index = this.areas.indexOf(area);\n    if (index !== -1) {\n      this.areas.splice(index, 1);\n    }\n  }\n}\n","import { Bonuses } from \"./bonus\";\nimport { BUILDINGS } from \"../data/buildings\";\nimport { ProductDefinition } from \"./product\";\n\nexport interface Building extends ProductDefinition {\n  bonuses: Bonuses;\n}\n\nexport const BUILDINGS_MAP = new Map<string, Building>();\n\nfor (const definition of BUILDINGS) {\n  BUILDINGS_MAP.set(definition.id, definition);\n}\n","import { CityCore } from \"./city\";\nimport { PlayerCore } from \"./player\";\nimport { TileRoad } from \"./tile-improvements\";\nimport { TileCore } from \"./tile\";\nimport { LandForm, SeaLevel } from \"../shared\";\nimport { collector } from \"./collector\";\n\nexport class CitiesManager {\n  cities: CityCore[] = [];\n\n  citiesMap = new Map<number, CityCore>();\n\n  lastId = 0;\n\n  spawn(tile: TileCore, player: PlayerCore, isNew = true) {\n    if (tile.city) {\n      return null;\n    }\n\n    if (\n      tile.landForm === LandForm.mountains ||\n      tile.seaLevel !== SeaLevel.none\n    ) {\n      return null;\n    }\n\n    const city = new CityCore(tile, player);\n    city.id = this.lastId++;\n    city.size = 1;\n    city.name = `City ${city.id}`;\n    city.tile = tile;\n    this.cities.push(city);\n    this.citiesMap.set(city.id, city);\n\n    for (const neighbour of tile.neighbours) {\n      city.addTile(neighbour);\n    }\n\n    player.addCity(city);\n\n    tile.city = city;\n    tile.forest = false;\n    tile.wetlands = false;\n    tile.road = TileRoad.road;\n    tile.update();\n\n    for (const t of tile.getTilesInRange(3)) {\n      t.sweetSpotValue = 0;\n    }\n\n    if (isNew) {\n      city.optimizeYields();\n    }\n\n    collector.cities.add(city);\n\n    return city;\n  }\n\n  destroy(city: CityCore) {\n    // TODO rewrite to sets for better performance?\n    let index = this.cities.indexOf(city);\n    if (index !== -1) {\n      this.cities.splice(index, 1);\n    }\n\n    this.citiesMap.delete(city.id);\n\n    index = city.player.cities.indexOf(city);\n    if (index !== -1) {\n      city.player.cities.splice(index, 1);\n    }\n\n    city.tile.city = null;\n\n    for (const tile of city.tiles) {\n      city.removeTile(tile);\n    }\n\n    collector.citiesDestroyed.add(city.id);\n  }\n\n  nextTurn() {\n    for (const city of this.cities) {\n      city.nextTurn();\n    }\n  }\n}\n","import { TileCore } from \"./tile\";\nimport { PlayerCore } from \"./player\";\nimport { UnitDefinition } from \"./unit.interface\";\nimport { Building } from \"./buildings\";\nimport { ProductDefinition } from \"./product\";\nimport { IdleProduct } from \"./idle-product\";\nimport { Bonuses } from \"./bonus\";\nimport {\n  EMPTY_YIELDS,\n  Yields,\n  zeroYields,\n  addYields,\n  copyYields,\n  roundYields,\n} from \"./yields\";\n\nimport { UNITS_DEFINITIONS } from \"../data/units\";\nimport { BUILDINGS } from \"../data/buildings\";\nimport { IDLE_PRODUCTS } from \"../data/idle-products\";\nimport { collector } from \"./collector\";\n\nexport type ProductType = \"unit\" | \"building\" | \"idleProduct\";\n\nexport interface Product {\n  type: ProductType;\n  productDefinition: ProductDefinition;\n}\n\nexport class CityCore {\n  id: number;\n  name: string;\n  size: number;\n\n  totalFood = 0;\n  foodToGrow = 20;\n  foodConsumed = 1;\n\n  totalCulture = 0;\n  cultureToExpand = 20;\n\n  tileYields: Yields = { ...EMPTY_YIELDS };\n  yields: Yields = { ...EMPTY_YIELDS };\n  perTurn: Yields = { ...EMPTY_YIELDS };\n\n  product: Product | null = null;\n  totalProduction = 0;\n\n  buildings: Building[] = [];\n  buildingsIds = new Set<string>();\n\n  tiles = new Set<TileCore>();\n\n  workedTiles = new Set<TileCore>();\n\n  notWorkedTiles = new Set<TileCore>();\n\n  availableBuildings: Building[] = [];\n  disabledBuildings = new Set<Building>();\n\n  availableUnits: UnitDefinition[] = [];\n  disabledUnits = new Set<UnitDefinition>();\n\n  availableIdleProducts: IdleProduct[] = [];\n  disabledIdleProducts = new Set<IdleProduct>();\n\n  changedSize = false;\n\n  constructor(public tile: TileCore, public player: PlayerCore) {\n    this.addTile(tile);\n  }\n\n  nextTurn() {\n    this.changedSize = false;\n\n    this.progressExpansion();\n    this.progressProduction();\n    this.progressGrowth();\n    this.updateYields();\n\n    if (this.player === this.player.game.trackedPlayer || this.changedSize) {\n      collector.cities.add(this);\n    }\n  }\n\n  private progressProduction() {\n    if (!this.product) {\n      return;\n    }\n\n    this.totalProduction += this.yields.production;\n\n    if (this.totalProduction >= this.product.productDefinition.productionCost) {\n      if (this.product.type === \"unit\") {\n        this.player.game.unitsManager.spawn(\n          this.product.productDefinition.id,\n          this.tile,\n          this.player,\n        );\n      } else if (this.product.type === \"building\") {\n        this.buildings.push(this.product.productDefinition as Building);\n        this.buildingsIds.add(this.product.productDefinition.id);\n      }\n      this.totalProduction = 0;\n      this.product = null;\n    }\n  }\n\n  private progressGrowth() {\n    this.totalFood += this.yields.food - this.foodConsumed;\n    if (this.totalFood >= this.foodToGrow) {\n      this.size++;\n      this.changedSize = true;\n      const bestWorkableTile = this.pickBestTileToWork(this.notWorkedTiles);\n      if (bestWorkableTile) {\n        this.workTile(bestWorkableTile);\n      }\n      this.totalFood -= this.foodToGrow;\n    } else if (this.totalFood < 0) {\n      if (this.size > 1) {\n        this.size--;\n        this.changedSize = true;\n        this.totalFood += this.foodToGrow;\n      } else {\n        this.totalFood = 0;\n      }\n    }\n    this.foodToGrow = 15 * Math.pow(1.2, this.size);\n  }\n\n  private progressExpansion() {\n    this.totalCulture += this.perTurn.culture;\n    if (this.totalCulture >= this.cultureToExpand) {\n      this.totalCulture -= this.cultureToExpand;\n      this.cultureToExpand = 5 * Math.pow(1.2, this.tiles.size);\n\n      const tile = this.pickBestTileToExpand(\n        this.tile,\n        this.getTilesAvailableForExpansion(),\n      );\n      if (tile) {\n        this.addTile(tile);\n        tile.sweetSpotValue = 0;\n      }\n    }\n  }\n\n  produceUnit(unit: UnitDefinition) {\n    this.startProducing({\n      type: \"unit\",\n      productDefinition: unit,\n    });\n  }\n\n  produceBuilding(building: Building) {\n    if (this.canConstruct(building)) {\n      this.startProducing({\n        type: \"building\",\n        productDefinition: building,\n      });\n    }\n  }\n\n  workOnIdleProduct(idleProduct: IdleProduct) {\n    this.startProducing({\n      type: \"idleProduct\",\n      productDefinition: idleProduct,\n    });\n    this.updateYields();\n    this.player.updateYields();\n  }\n\n  cancelProduction() {\n    if (this.product) {\n      const type = this.product.type;\n      this.product = null;\n      if (type === \"idleProduct\") {\n        this.updateYields();\n        this.player.updateYields();\n      }\n    }\n  }\n\n  private startProducing(product: Product) {\n    if (!this.canProduce(product.productDefinition)) {\n      return;\n    }\n\n    this.cancelProduction();\n\n    this.product = product;\n    this.totalProduction = 0;\n    collector.cities.add(this);\n  }\n\n  get turnsToGrow() {\n    if (this.perTurn.food >= 0) {\n      const remainingFood = this.foodToGrow - this.totalFood;\n      return Math.ceil(remainingFood / this.perTurn.food);\n    } else {\n      return Math.ceil(this.totalFood / this.perTurn.food) - 1;\n    }\n  }\n\n  get turnsToProductionEnd() {\n    if (!this.product) {\n      return null;\n    }\n    const remainingProduction =\n      this.product.productDefinition.productionCost - this.totalProduction;\n\n    return Math.ceil(remainingProduction / this.yields.production);\n  }\n\n  get turnsToExpand() {\n    const remainingCulture = this.cultureToExpand - this.totalCulture;\n    return Math.ceil(remainingCulture / this.perTurn.culture);\n  }\n\n  getTurnsToProduce(unit: UnitDefinition) {\n    return Math.ceil(unit.productionCost / this.yields.production);\n  }\n\n  updateYields() {\n    zeroYields(this.tileYields);\n\n    this.tileYields.food = 2;\n    this.tileYields.production = 1;\n\n    for (const tile of this.workedTiles) {\n      addYields(this.tileYields, tile.yields);\n    }\n\n    this.tileYields.production += this.freeTileWorkers;\n\n    copyYields(this.yields, this.tileYields);\n\n    for (const building of this.buildings) {\n      this.applyBonuses(building.bonuses);\n    }\n\n    if (this.product?.type === \"idleProduct\") {\n      const idleProduct = this.product.productDefinition as IdleProduct;\n      this.applyBonuses(idleProduct.bonuses);\n    }\n    roundYields(this.yields);\n\n    this.foodConsumed = this.size;\n\n    copyYields(this.perTurn, this.yields);\n    this.perTurn.food -= this.foodConsumed;\n  }\n\n  applyBonuses(bonuses: Bonuses) {\n    this.yields.food += bonuses.yieldValue?.food || 0;\n    this.yields.production += bonuses.yieldValue?.production || 0;\n    this.yields.culture += bonuses.yieldValue?.culture || 0;\n    this.yields.publicWorks += bonuses.yieldValue?.publicWorks || 0;\n\n    if (bonuses.yieldFactor?.food) {\n      this.yields.food += this.tileYields.food * bonuses.yieldFactor.food;\n    }\n    if (bonuses.yieldFactor?.production) {\n      this.yields.production +=\n        this.tileYields.production * bonuses.yieldFactor.production;\n    }\n    if (bonuses.yieldFactor?.culture) {\n      this.yields.culture +=\n        this.tileYields.culture * bonuses.yieldFactor.culture;\n    }\n    if (bonuses.yieldFactor?.publicWorks) {\n      this.yields.publicWorks +=\n        this.tileYields.publicWorks * bonuses.yieldFactor.publicWorks;\n    }\n\n    if (bonuses.transferProductionToFood) {\n      this.yields.food +=\n        this.yields.production * bonuses.transferProductionToFood;\n    }\n\n    if (bonuses.transferProductionToCulture) {\n      this.yields.culture +=\n        this.yields.production * bonuses.transferProductionToCulture;\n    }\n\n    if (bonuses.transferProductionToPublicWorks) {\n      this.yields.publicWorks +=\n        this.yields.production * bonuses.transferProductionToPublicWorks;\n    }\n  }\n\n  addTile(tile: TileCore) {\n    if (!tile.areaOf) {\n      this.tiles.add(tile);\n      this.notWorkedTiles.add(tile);\n      tile.areaOf = this;\n      this.player.area.add(tile);\n      this.player.exploreTiles([tile]);\n      this.player.exploreTiles(tile.neighbours);\n      collector.tiles.add(tile);\n    }\n  }\n\n  removeTile(tile: TileCore) {\n    if (this.tiles.has(tile)) {\n      this.tiles.delete(tile);\n      tile.areaOf = null;\n      this.player.area.remove(tile);\n      collector.tiles.add(tile);\n    }\n  }\n\n  workTile(tile: TileCore, updateYields = true) {\n    if (this.freeTileWorkers && this.tiles.has(tile)) {\n      this.workedTiles.add(tile);\n      this.notWorkedTiles.delete(tile);\n      if (updateYields) {\n        this.updateYields();\n      }\n    }\n  }\n\n  unworkTile(tile: TileCore, updateYields = true) {\n    this.workedTiles.delete(tile);\n    this.notWorkedTiles.add(tile);\n    if (updateYields) {\n      this.updateYields();\n    }\n  }\n\n  getTilesAvailableForExpansion(): Set<TileCore> {\n    const availableTiles = new Set<TileCore>();\n    for (const tile of this.tiles) {\n      for (const neighbour of tile.neighbours) {\n        if (!neighbour.areaOf) {\n          availableTiles.add(neighbour);\n        }\n      }\n    }\n    return availableTiles;\n  }\n\n  pickBestTileToWork(tiles: Set<TileCore>): TileCore | null {\n    let bestTile: TileCore | null = null;\n    let bestYields = 0;\n\n    for (const tile of tiles) {\n      const yields = tile.totalYields;\n      if (yields > bestYields) {\n        bestYields = yields;\n        bestTile = tile;\n      }\n    }\n\n    return bestTile;\n  }\n\n  pickBestTileToExpand(\n    cityTile: TileCore,\n    tiles: Set<TileCore>,\n  ): TileCore | null {\n    let bestTile: TileCore | null = null;\n    let bestScore = -Infinity;\n\n    for (const tile of tiles) {\n      const score = tile.totalYields - cityTile.getDistanceTo(tile) / 2;\n      if (score > bestScore) {\n        bestScore = score;\n        bestTile = tile;\n      }\n    }\n\n    return bestTile;\n  }\n\n  get freeTileWorkers() {\n    return this.size - this.workedTiles.size;\n  }\n\n  optimizeYields() {\n    this.workedTiles.clear();\n    this.notWorkedTiles = new Set(this.tiles);\n    while (this.freeTileWorkers && this.notWorkedTiles.size) {\n      const tile = this.pickBestTileToWork(this.notWorkedTiles);\n      if (!tile) {\n        break;\n      }\n      this.workTile(tile, false);\n    }\n    this.updateYields();\n  }\n\n  canConstruct(building: Building) {\n    return !this.buildings.includes(building);\n  }\n\n  canProduce(product: ProductDefinition): boolean {\n    for (const r of product.requirements) {\n      if (!r.check(this)) {\n        return false;\n      }\n    }\n\n    for (const r of product.weakRequirements) {\n      if (!r.check(this)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private getAvailableProducts<T extends ProductDefinition>(\n    products: T[],\n    city: CityCore,\n  ): T[] {\n    const results: T[] = [];\n    for (const p of products) {\n      let ok = true;\n      for (const r of p.requirements) {\n        if (!r.check(city)) {\n          ok = false;\n          break;\n        }\n      }\n      if (ok) {\n        results.push(p);\n      }\n    }\n    return results;\n  }\n\n  private getDisabledProducts<T extends ProductDefinition>(\n    products: T[],\n    city: CityCore,\n  ): Set<T> {\n    const results = new Set<T>();\n    for (const p of products) {\n      for (const r of p.weakRequirements) {\n        if (!r.check(city)) {\n          results.add(p);\n        }\n      }\n    }\n    return results;\n  }\n\n  updateProductsList() {\n    this.availableUnits = this.getAvailableProducts<UnitDefinition>(\n      UNITS_DEFINITIONS,\n      this,\n    );\n    this.disabledUnits = this.getDisabledProducts<UnitDefinition>(\n      this.availableUnits,\n      this,\n    );\n\n    const notBuildBuildings = BUILDINGS.filter(\n      (b) =>\n        this.product?.productDefinition !== b && !this.buildings.includes(b),\n    );\n\n    this.availableBuildings = this.getAvailableProducts<Building>(\n      notBuildBuildings,\n      this,\n    );\n    this.disabledBuildings = this.getDisabledProducts<Building>(\n      this.availableBuildings,\n      this,\n    );\n\n    this.availableIdleProducts = IDLE_PRODUCTS;\n  }\n\n  changeOwner(newOwner: PlayerCore) {\n    if (this.player === newOwner) {\n      return;\n    }\n\n    const oldOwner = this.player;\n\n    this.player = newOwner;\n\n    const cityTiles = Array.from(this.tiles);\n\n    let index = oldOwner.cities.indexOf(this);\n    if (index !== -1) {\n      oldOwner.cities.splice(index, 1);\n      oldOwner.area.removeBulk(cityTiles);\n    }\n\n    newOwner.cities.push(this);\n    newOwner.area.addBulk(cityTiles);\n\n    newOwner.updateYields();\n    oldOwner.updateYields();\n\n    // TODO explored area should be bigger then city tiles. Change this once fog of war is implement (probably a city should store it's visible tiles)\n    newOwner.exploreTiles(this.tiles);\n\n    collector.cities.add(this);\n    for (const tile of this.tiles) {\n      collector.tiles.add(tile);\n    }\n  }\n}\n","import { TileCore } from \"./tile\";\nimport { UnitCore } from \"./unit\";\nimport { CityCore } from \"./city\";\nimport { PlayerCore } from \"./player\";\nimport {\n  tileToChannel,\n  unitToChannel,\n  cityToChannel,\n  trackedPlayerToChannel,\n} from \"./serialization/channel\";\nimport { PlayerYields } from \"../shared\";\n\nclass Collector {\n  tiles = new Set<TileCore>();\n\n  units = new Set<UnitCore>();\n  unitsDestroyed = new Set<number>();\n\n  cities = new Set<CityCore>();\n  citiesDestroyed = new Set<number>();\n\n  areaTilesAdded = new Map<number, TileCore[]>();\n  areaTilesRemoved = new Map<number, TileCore[]>();\n\n  trackedPlayer: PlayerCore | undefined;\n  trackedPlayerYields: PlayerYields | undefined;\n  tilesExplored = new Set<number>();\n\n  turn = 0;\n\n  flush() {\n    const changes: any[] = [];\n\n    for (const unit of this.units) {\n      changes.push({ type: \"unit.updated\", data: unitToChannel(unit) });\n    }\n    for (const id of this.unitsDestroyed) {\n      changes.push({ type: \"unit.destroyed\", data: id });\n    }\n\n    for (const city of this.cities) {\n      changes.push({ type: \"city.updated\", data: cityToChannel(city) });\n    }\n    for (const id of this.citiesDestroyed) {\n      changes.push({ type: \"city.destroyed\", data: id });\n    }\n\n    if (this.tiles.size) {\n      changes.push({\n        type: \"tiles.updated\",\n        data: Array.from(this.tiles).map((tile) => tileToChannel(tile)),\n      });\n    }\n\n    for (const [id, tiles] of this.areaTilesAdded.entries()) {\n      changes.push({\n        type: \"area.tilesAdded\",\n        data: { id, tiles: tiles.map((t) => t.id) },\n      });\n    }\n    for (const [id, tiles] of this.areaTilesRemoved.entries()) {\n      changes.push({\n        type: \"area.tilesRemoved\",\n        data: { id, tiles: tiles.map((t) => t.id) },\n      });\n    }\n\n    if (this.turn) {\n      changes.push({ type: \"game.turn\", data: this.turn });\n    }\n\n    if (this.trackedPlayer) {\n      changes.push({\n        type: \"trackedPlayer.set\",\n        data: trackedPlayerToChannel(this.trackedPlayer),\n      });\n    }\n    if (this.trackedPlayerYields) {\n      changes.push({\n        type: \"trackedPlayer.yields\",\n        data: this.trackedPlayerYields,\n      });\n    }\n    if (this.tilesExplored.size) {\n      changes.push({\n        type: \"trackedPlayer.tilesExplored\",\n        data: Array.from(this.tilesExplored),\n      });\n    }\n\n    this.tiles.clear();\n\n    this.unitsDestroyed.clear();\n    this.units.clear();\n\n    this.cities.clear();\n    this.citiesDestroyed.clear();\n\n    this.areaTilesAdded.clear();\n    this.areaTilesRemoved.clear();\n\n    this.trackedPlayer = undefined;\n    this.tilesExplored.clear();\n\n    this.turn = 0;\n\n    return changes;\n  }\n\n  addAreaTiles(areaId: number, tiles: TileCore[]) {\n    if (!this.areaTilesAdded.has(areaId)) {\n      this.areaTilesAdded.set(areaId, tiles);\n    } else {\n      this.areaTilesAdded.get(areaId)!.push(...tiles);\n    }\n  }\n\n  removeAreaTiles(areaId: number, tiles: TileCore[]) {\n    if (!this.areaTilesRemoved.has(areaId)) {\n      this.areaTilesRemoved.set(areaId, tiles);\n    } else {\n      this.areaTilesRemoved.get(areaId)!.push(...tiles);\n    }\n  }\n}\n\nexport const collector = new Collector();\n","export class Debug {\n  revealMap = false;\n}\n","import { PlayerCore } from \"./player\";\nimport { TilesMapCore } from \"./tiles-map\";\nimport { UnitsManager } from \"./unit-manager\";\nimport { Debug } from \"./debug\";\nimport { CitiesManager } from \"./cities-manager\";\nimport { AreasManager } from \"./areas-manager\";\nimport { collector } from \"./collector\";\n\nexport class Game {\n  debug = new Debug();\n\n  map: TilesMapCore;\n\n  players: PlayerCore[] = [];\n\n  activePlayerIndex = -1;\n\n  trackedPlayer: PlayerCore;\n\n  humanPlayer: PlayerCore | null = null;\n\n  turn = 1;\n\n  areasManager = new AreasManager();\n\n  unitsManager = new UnitsManager(this);\n\n  citiesManager = new CitiesManager();\n\n  start() {\n    this.activePlayerIndex = -1;\n    this.nextPlayer();\n  }\n\n  addPlayer(player: PlayerCore) {\n    player.id = this.players.length;\n    this.players.push(player);\n    if (!this.trackedPlayer) {\n      this.trackedPlayer = player;\n    }\n  }\n\n  nextPlayer() {\n    this.activePlayerIndex++;\n    if (this.activePlayerIndex >= this.players.length) {\n      this.nextTurn();\n      this.activePlayerIndex = 0;\n    }\n    if (this.activePlayer.ai) {\n      this.activePlayer.ai.nextTurn();\n      this.nextPlayer();\n    } else {\n      if (this.trackedPlayer !== this.activePlayer) {\n        this.trackedPlayer = this.activePlayer;\n        collector.trackedPlayer = this.trackedPlayer;\n      }\n    }\n  }\n\n  nextTurn() {\n    this.unitsManager.nextTurn();\n    this.citiesManager.nextTurn();\n    for (const player of this.players) {\n      player.nextTurn();\n    }\n    this.turn++;\n    collector.turn = this.turn;\n  }\n\n  get activePlayer() {\n    return this.players[this.activePlayerIndex];\n  }\n}\n","import { ProductDefinition } from \"./product\";\nimport { Bonuses } from \"./bonus\";\nimport { IDLE_PRODUCTS } from \"../data/idle-products\";\n\nexport interface IdleProduct extends ProductDefinition {\n  bonuses: Bonuses;\n}\n\nexport const IDLE_PRODUCTS_MAP = new Map<string, IdleProduct>();\n\nfor (const definition of IDLE_PRODUCTS) {\n  IDLE_PRODUCTS_MAP.set(definition.id, definition);\n}\n","import { CityCore } from \"./city\";\n\nexport abstract class ProductRequirement {\n  static id: string;\n  abstract check(city: CityCore): boolean;\n}\n\nexport interface ProductDefinition {\n  id: string;\n  name: string;\n  productionCost: number;\n\n  // product will be hidden from products list\n  requirements: ProductRequirement[];\n\n  // product will be disabled on the products list\n  weakRequirements: ProductRequirement[];\n}\n\nexport class BuildingRequirement extends ProductRequirement {\n  id = \"building\";\n\n  constructor(public buildingId: string) {\n    super();\n  }\n\n  check(city: CityCore) {\n    return city.buildingsIds.has(this.buildingId);\n  }\n}\n\nexport class SizeRequirement extends ProductRequirement {\n  id = \"size\";\n\n  constructor(public size: number) {\n    super();\n  }\n\n  check(city: CityCore) {\n    return city.size >= this.size;\n  }\n}\n","import { Yields } from \"../yields\";\nimport { ProductType, CityCore } from \"../city\";\nimport { Game } from \"../game\";\nimport { PlayerCore } from \"../player\";\nimport { BaseTile, PlayerYields } from \"src/app/shared\";\nimport { TilesMapCore } from \"../tiles-map\";\nimport { UnitOrder, UnitCore } from \"../unit\";\nimport { TileCore } from \"../tile\";\n\nexport interface GameChanneled {\n  turn: number;\n  map: MapChanneled;\n  players: PlayerChanneled[];\n  trackedPlayer: TrackedPlayerChanneled;\n  units: UnitChanneled[];\n  cities: CityChanneled[];\n}\n\nexport interface MapChanneled {\n  width: number;\n  height: number;\n  tiles: TileChanneled[][];\n}\n\nexport interface TileChanneled extends BaseTile {\n  areaOf: number | null;\n  cityId: number | null;\n  unitsIds: number[];\n}\n\nexport interface CityChanneled {\n  id: number;\n  name: string;\n  size: number;\n  tileId: number;\n  playerId: number;\n\n  totalFood: number;\n  foodToGrow: number;\n  foodPerTurn: number;\n  turnsToGrow: number;\n\n  totalProduction: number;\n  productionPerTurn: number;\n  productionRequired: number | null;\n  turnsToProductionEnd: number | null;\n  productName: string | null;\n}\n\nexport interface CityDetailsChanneled {\n  id: number;\n  name: string;\n  size: number;\n  tileId: number;\n  playerId: number;\n\n  totalFood: number;\n  foodToGrow: number;\n  turnsToGrow: number;\n\n  totalProduction: number;\n  turnsToProductionEnd: number | null;\n  foodConsumed: number;\n\n  totalCulture: number;\n  cultureToExpand: number;\n\n  tileYields: Yields;\n  yields: Yields;\n  perTurn: Yields;\n\n  productId: string | null;\n  productType: ProductType | null;\n\n  buildingsIds: string[];\n\n  tiles: number[];\n\n  workedTiles: number[];\n\n  availableBuildings: string[];\n\n  disabledBuildings: string[];\n\n  availableUnits: string[];\n  disabledUnits: string[];\n\n  availableIdleProducts: string[];\n  disabledIdleProducts: string[];\n}\n\nexport interface PlayerChanneled {\n  id: number;\n  color: number;\n  areaId: number;\n}\n\nexport interface TrackedPlayerChanneled {\n  id: number;\n  color: number;\n  exploredTiles: number[];\n  units: number[];\n  cities: number[];\n\n  yields: PlayerYields;\n}\n\nexport interface UnitChanneled {\n  id: number;\n  tileId: number;\n  definitionId: string;\n  playerId: number;\n}\n\nexport interface UnitDetailsChanneled {\n  id: number;\n  tileId: number;\n  definitionId: string;\n  playerId: number;\n  actionPointsLeft: number;\n  order: UnitOrder;\n  path: number[][] | null;\n}\n\nexport function gameToChannel(game: Game): GameChanneled {\n  return {\n    turn: game.turn,\n    map: mapToChannel(game.map),\n    players: game.players.map((p) => playerToChannel(p)),\n    trackedPlayer: trackedPlayerToChannel(game.trackedPlayer),\n    units: game.unitsManager.units.map((u) => unitToChannel(u)),\n    cities: game.citiesManager.cities.map((c) => cityToChannel(c)),\n  };\n}\n\nexport function mapToChannel(map: TilesMapCore): MapChanneled {\n  const tiles: TileChanneled[][] = [];\n  for (let x = 0; x < map.width; x++) {\n    const row: TileChanneled[] = [];\n    tiles.push(row);\n    for (let y = 0; y < map.height; y++) {\n      row.push(tileToChannel(map.tiles[x][y]));\n    }\n  }\n\n  return {\n    width: map.width,\n    height: map.height,\n    tiles,\n  };\n}\n\nexport function tileToChannel(tile: TileCore): TileChanneled {\n  return {\n    id: tile.id,\n    x: tile.x,\n    y: tile.y,\n    climate: tile.climate,\n    forest: tile.forest,\n    improvement: tile.improvement,\n    landForm: tile.landForm,\n    riverParts: tile.riverParts,\n    road: tile.road,\n    seaLevel: tile.seaLevel,\n    wetlands: tile.wetlands,\n    yields: tile.yields,\n    areaOf: tile.areaOf ? tile.areaOf.id : null,\n    unitsIds: tile.units.map((u) => u.id),\n    cityId: tile.city ? tile.city.id : null,\n  };\n}\n\nexport function cityToChannel(city: CityCore): CityChanneled {\n  return {\n    id: city.id,\n    name: city.name,\n    size: city.size,\n    playerId: city.player.id,\n    tileId: city.tile.id,\n\n    totalFood: city.totalFood,\n    foodToGrow: city.foodToGrow,\n    foodPerTurn: city.perTurn.food,\n    turnsToGrow: city.turnsToGrow,\n\n    totalProduction: city.totalProduction,\n    productionPerTurn: city.yields.production,\n    productionRequired: city.product\n      ? city.product.productDefinition.productionCost\n      : null,\n    turnsToProductionEnd: city.turnsToProductionEnd,\n    productName: city.product ? city.product.productDefinition.name : null,\n  };\n}\n\nexport function cityDetailsToChannel(city: CityCore): CityDetailsChanneled {\n  city.updateProductsList();\n\n  return {\n    id: city.id,\n    name: city.name,\n    size: city.size,\n    playerId: city.player.id,\n    tileId: city.tile.id,\n\n    totalFood: city.totalFood,\n    foodToGrow: city.foodToGrow,\n    turnsToGrow: city.turnsToGrow,\n\n    totalProduction: city.totalProduction,\n    turnsToProductionEnd: city.turnsToProductionEnd,\n    availableBuildings: city.availableBuildings.map((b) => b.id),\n    availableIdleProducts: city.availableIdleProducts.map((p) => p.id),\n    availableUnits: city.availableUnits.map((u) => u.id),\n    buildingsIds: Array.from(city.buildingsIds),\n    cultureToExpand: city.cultureToExpand,\n    disabledBuildings: Array.from(city.disabledBuildings).map((b) => b.id),\n    disabledIdleProducts: Array.from(city.disabledIdleProducts).map(\n      (p) => p.id,\n    ),\n    disabledUnits: Array.from(city.disabledUnits).map((u) => u.id),\n    foodConsumed: city.foodConsumed,\n    perTurn: city.perTurn,\n    productId: city.product?.productDefinition.id || null,\n    productType: city.product?.type || null,\n    tileYields: city.tileYields,\n    tiles: Array.from(city.tiles).map((t) => t.id),\n    totalCulture: city.totalCulture,\n    workedTiles: Array.from(city.workedTiles).map((t) => t.id),\n    yields: city.yields,\n  };\n}\n\nexport function playerToChannel(player: PlayerCore): PlayerChanneled {\n  return {\n    id: player.id,\n    color: player.color,\n    areaId: player.area.id,\n  };\n}\n\nexport function trackedPlayerToChannel(\n  player: PlayerCore,\n): TrackedPlayerChanneled {\n  return {\n    id: player.id,\n    color: player.color,\n    exploredTiles: Array.from(player.exploredTiles).map((t) => t.id),\n    units: player.units.map((u) => u.id),\n    cities: player.cities.map((c) => c.id),\n    yields: player.yields,\n  };\n}\n\nexport function unitToChannel(unit: UnitCore): UnitChanneled {\n  return {\n    id: unit.id,\n    tileId: unit.tile.id,\n    definitionId: unit.definition.id,\n    playerId: unit.player.id,\n  };\n}\n\nexport function unitDetailsToChannel(unit: UnitCore): UnitDetailsChanneled {\n  return {\n    id: unit.id,\n    tileId: unit.tile.id,\n    definitionId: unit.definition.id,\n    playerId: unit.player.id,\n    actionPointsLeft: unit.actionPointsLeft,\n    order: unit.order,\n    path: unit.path?.map((row) => row.map((tile) => tile.id)) || null,\n  };\n}\n","export enum TileImprovement {\n  farm,\n  mine,\n  sawmill,\n}\n\nexport enum TileRoad {\n  road,\n}\n\nexport const IMPROVEMENT_PUBLIC_WORKS_COSTS: Record<TileImprovement, number> = {\n  [TileImprovement.farm]: 15,\n  [TileImprovement.mine]: 15,\n  [TileImprovement.sawmill]: 15,\n};\n\nexport const IMPROVEMENT_PUBLIC_WORKS_COSTS_PER_TURN: Record<\n  TileImprovement,\n  number\n> = {\n  [TileImprovement.farm]: 1,\n  [TileImprovement.mine]: 1,\n  [TileImprovement.sawmill]: 1,\n};\n\nexport const ROAD_PUBLIC_WORKS_COSTS: Record<TileRoad, number> = {\n  [TileRoad.road]: 15,\n};\n\nexport const ROAD_PUBLIC_WORKS_COSTS_PER_TURN: Record<TileRoad, number> = {\n  [TileRoad.road]: 1,\n};\n","import { Game } from \"./game\";\nimport { UnitCore } from \"./unit\";\nimport {\n  TileImprovement,\n  TileRoad,\n  IMPROVEMENT_PUBLIC_WORKS_COSTS,\n  IMPROVEMENT_PUBLIC_WORKS_COSTS_PER_TURN,\n  ROAD_PUBLIC_WORKS_COSTS,\n  ROAD_PUBLIC_WORKS_COSTS_PER_TURN,\n} from \"./tile-improvements\";\nimport { isImprovementPossible, isRoadPossible } from \"../shared\";\n\nexport type UnitAction =\n  | \"foundCity\"\n  | \"buildRoad\"\n  | \"buildFarm\"\n  | \"buildMine\"\n  | \"buildSawmill\";\n\nconst ACTION_TO_IMPROVEMENT: Partial<Record<UnitAction, TileImprovement>> = {\n  buildFarm: TileImprovement.farm,\n  buildMine: TileImprovement.mine,\n  buildSawmill: TileImprovement.sawmill,\n};\n\nexport function getPublicWorksRequired(action: UnitAction) {\n  if (action === \"buildRoad\") {\n    return ROAD_PUBLIC_WORKS_COSTS[TileRoad.road];\n  }\n  const improvement = ACTION_TO_IMPROVEMENT[action];\n  if (improvement !== undefined) {\n    return IMPROVEMENT_PUBLIC_WORKS_COSTS[improvement];\n  }\n  return 0;\n}\n\nexport function getPublicWorksPerTurn(action: UnitAction) {\n  if (action === \"buildRoad\") {\n    return ROAD_PUBLIC_WORKS_COSTS_PER_TURN[TileRoad.road];\n  }\n  const improvement = ACTION_TO_IMPROVEMENT[action];\n  if (improvement !== undefined) {\n    return IMPROVEMENT_PUBLIC_WORKS_COSTS_PER_TURN[improvement];\n  }\n  return 0;\n}\n\nexport abstract class ActionRequirement {\n  static id: string;\n\n  id: string;\n\n  constructor() {\n    this.id = this.constructor[\"id\"];\n  }\n\n  abstract check(unit: UnitCore, action: UnitAction): boolean;\n}\n\nexport class OwnTileRequirement extends ActionRequirement {\n  id = \"ownTile\";\n\n  check(unit: UnitCore) {\n    return unit.tile.areaOf?.player === unit.player;\n  }\n}\n\nexport class NotForeignTileRequirement extends ActionRequirement {\n  id = \"notForeignTile\";\n\n  check(unit: UnitCore) {\n    return !unit.tile.areaOf || unit.tile.areaOf?.player === unit.player;\n  }\n}\n\nexport class ImprovementNotYetBuiltRequirement extends ActionRequirement {\n  id = \"sameImprovement\";\n\n  constructor(public improvement: TileImprovement) {\n    super();\n  }\n\n  check(unit: UnitCore) {\n    return unit.tile.improvement !== this.improvement;\n  }\n}\nexport class IsImprovementPossibleRequirement extends ActionRequirement {\n  id = \"improvementPossible\";\n\n  constructor(public improvement: TileImprovement) {\n    super();\n  }\n\n  check(unit: UnitCore) {\n    return isImprovementPossible(unit.tile, this.improvement);\n  }\n}\n\nexport class NoRoadRequirement extends ActionRequirement {\n  id = \"noRoad\";\n\n  check(unit: UnitCore) {\n    return unit.tile.road === null;\n  }\n}\n\nexport class isRoadPossibleRequirement extends ActionRequirement {\n  id = \"roadPossible\";\n\n  check(unit: UnitCore) {\n    return isRoadPossible(unit.tile);\n  }\n}\n\nexport class PublicWorksPointsRequirement extends ActionRequirement {\n  id = \"publicWorks\";\n\n  check(unit: UnitCore, action: UnitAction) {\n    return (\n      unit.player.yields.total.publicWorks >= getPublicWorksRequired(action)\n    );\n  }\n}\n\ninterface ActionDefinition {\n  action: UnitAction;\n  name: string;\n  fn: (game: Game, unit: UnitCore) => void;\n  requirements: ActionRequirement[];\n}\n\nfunction foundCity(game: Game, unit: UnitCore) {\n  const city = game.citiesManager.spawn(unit.tile, unit.player);\n  if (city) {\n    game.unitsManager.destroy(unit);\n  }\n}\n\nfunction buildImprovement(\n  game: Game,\n  unit: UnitCore,\n  improvement: TileImprovement,\n) {\n  unit.actionPointsLeft = 0;\n  unit.tile.improvement = improvement;\n  unit.tile.update();\n  unit.player.updateUnitsWithoutOrders();\n\n  unit.player.yields.total.publicWorks -=\n    IMPROVEMENT_PUBLIC_WORKS_COSTS[improvement];\n\n  unit.player.yields.costs.publicWorks +=\n    IMPROVEMENT_PUBLIC_WORKS_COSTS_PER_TURN[improvement];\n\n  unit.player.yields.perTurn.publicWorks -=\n    IMPROVEMENT_PUBLIC_WORKS_COSTS_PER_TURN[improvement];\n}\n\nfunction buildRoad(game: Game, unit: UnitCore) {\n  unit.actionPointsLeft = 0;\n  unit.tile.road = TileRoad.road;\n  unit.tile.update();\n  for (const neighbour of unit.tile.neighbours) {\n    neighbour.update();\n  }\n  unit.player.updateUnitsWithoutOrders();\n\n  unit.player.yields.total.publicWorks -=\n    ROAD_PUBLIC_WORKS_COSTS[TileRoad.road];\n\n  unit.player.yields.costs.publicWorks +=\n    ROAD_PUBLIC_WORKS_COSTS_PER_TURN[TileRoad.road];\n\n  unit.player.yields.perTurn.publicWorks -=\n    ROAD_PUBLIC_WORKS_COSTS_PER_TURN[TileRoad.road];\n}\n\nexport const ACTIONS: Record<UnitAction, ActionDefinition> = {\n  foundCity: {\n    action: \"foundCity\",\n    name: \"Found a city\",\n    fn: foundCity,\n    requirements: [new NotForeignTileRequirement()], // TODO add minimal distance to other city\n  },\n  buildFarm: {\n    action: \"buildFarm\",\n    name: \"Build a farm\",\n    fn: (game, unit) => buildImprovement(game, unit, TileImprovement.farm),\n    requirements: [\n      new OwnTileRequirement(),\n      new ImprovementNotYetBuiltRequirement(TileImprovement.farm),\n      new IsImprovementPossibleRequirement(TileImprovement.farm),\n      new PublicWorksPointsRequirement(),\n    ],\n  },\n  buildMine: {\n    action: \"buildMine\",\n    name: \"Build a mine\",\n    fn: (game, unit) => buildImprovement(game, unit, TileImprovement.mine),\n    requirements: [\n      new OwnTileRequirement(),\n      new ImprovementNotYetBuiltRequirement(TileImprovement.mine),\n      new IsImprovementPossibleRequirement(TileImprovement.mine),\n      new PublicWorksPointsRequirement(),\n    ],\n  },\n  buildSawmill: {\n    action: \"buildSawmill\",\n    name: \"Build a sawmill\",\n    fn: (game, unit) => buildImprovement(game, unit, TileImprovement.sawmill),\n    requirements: [\n      new OwnTileRequirement(),\n      new ImprovementNotYetBuiltRequirement(TileImprovement.sawmill),\n      new IsImprovementPossibleRequirement(TileImprovement.sawmill),\n      new PublicWorksPointsRequirement(),\n    ],\n  },\n  buildRoad: {\n    action: \"buildRoad\",\n    name: \"Build a road\",\n    fn: (game, unit) => buildRoad(game, unit),\n    requirements: [\n      new NoRoadRequirement(),\n      new isRoadPossibleRequirement(),\n      new PublicWorksPointsRequirement(),\n    ],\n  },\n};\n","import { UnitDefinition } from \"./unit.interface\";\nimport { UnitCore } from \"./unit\";\nimport { BehaviorSubject, Subject } from \"rxjs\";\nimport { UNITS_DEFINITIONS } from \"../data/units\";\nimport { PlayerCore } from \"./player\";\nimport { TileCore } from \"./tile\";\nimport { Game } from \"./game\";\nimport { collector } from \"./collector\";\n\nexport class UnitsManager {\n  definitions = new Map<string, UnitDefinition>();\n\n  units: UnitCore[] = [];\n\n  unitsMap = new Map<number, UnitCore>();\n\n  private lastId = 0;\n\n  constructor(private game: Game) {\n    for (const definition of UNITS_DEFINITIONS) {\n      this.definitions.set(definition.id, definition);\n    }\n  }\n\n  spawn(id: string, tile: TileCore, player: PlayerCore) {\n    const definition = this.definitions.get(id);\n    if (!definition) {\n      throw Error(`UnitsManager: No unit with id \"${id}\"`);\n    }\n\n    const unit = new UnitCore(tile, definition, player);\n    unit.id = this.lastId++;\n\n    this.units.push(unit);\n    this.unitsMap.set(unit.id, unit);\n    player.units.push(unit);\n    tile.units.push(unit);\n\n    unit.player.exploreTiles(unit.tile.getTilesInRange(2));\n\n    unit.player.unitsWithoutOrders.push(unit);\n\n    collector.units.add(unit);\n\n    return unit;\n  }\n\n  destroy(unit: UnitCore) {\n    // TODO rewrite to sets for better performance?\n\n    this.unitsMap.delete(unit.id);\n\n    let index = this.units.indexOf(unit);\n    if (index !== -1) {\n      this.units.splice(index, 1);\n    }\n\n    index = unit.player.units.indexOf(unit);\n    if (index !== -1) {\n      unit.player.units.splice(index, 1);\n    }\n\n    index = unit.tile.units.indexOf(unit);\n    if (index !== -1) {\n      unit.tile.units.splice(index, 1);\n    }\n\n    unit.player.updateUnitsWithoutOrders();\n    collector.unitsDestroyed.add(unit.id);\n  }\n\n  private move(unit: UnitCore, tile: TileCore) {\n    if (!unit.actionPointsLeft) {\n      return;\n    }\n\n    const cost = this.getMovementCost(unit, tile);\n    if (cost === Infinity) {\n      return;\n    }\n\n    if (unit.definition.power) {\n      if (\n        tile.units.length &&\n        tile.units.find((u) => u.player !== unit.player)\n      ) {\n        // battle\n      } else if (tile.city && tile.city.player !== unit.player) {\n        tile.city.changeOwner(unit.player);\n      }\n    }\n\n    const index = unit.tile.units.indexOf(unit);\n    if (index !== -1) {\n      unit.tile.units.splice(index, 1);\n    }\n    tile.units.push(unit);\n    unit.tile = tile;\n\n    unit.actionPointsLeft = Math.max(unit.actionPointsLeft - cost, 0);\n\n    unit.player.exploreTiles(tile.getTilesInRange(2));\n  }\n\n  moveAlongPath(unit: UnitCore) {\n    if (!unit.path) {\n      unit.setOrder(null);\n      return;\n    }\n\n    unit.setOrder(unit.path.length ? \"go\" : null);\n\n    collector.units.add(unit);\n\n    while (unit.actionPointsLeft && unit.path.length) {\n      this.move(unit, unit.path[0][0]);\n      unit.path[0].shift();\n      if (!unit.path[0].length) {\n        unit.path.shift();\n      }\n      if (!unit.path.length) {\n        unit.path = null;\n        unit.setOrder(null);\n        return;\n      }\n    }\n  }\n\n  getMovementCost(unit: UnitCore, target: TileCore) {\n    return unit.tile.neighboursCosts.get(target) || Infinity;\n  }\n\n  nextTurn() {\n    for (const unit of this.units) {\n      if (unit.path) {\n        this.moveAlongPath(unit);\n      }\n      if (unit.order === \"skip\") {\n        unit.setOrder(null);\n      }\n      unit.actionPointsLeft = unit.definition.actionPoints;\n    }\n  }\n}\n","import { TileCore } from \"./tile\";\nimport { UnitDefinition } from \"./unit.interface\";\nimport { PlayerCore } from \"./player\";\nimport { UnitAction, ACTIONS } from \"./unit-actions\";\nimport { UNITS_DEFINITIONS } from \"../data/units\";\nimport { collector } from \"./collector\";\n\nexport type UnitOrder = \"go\" | \"skip\" | \"sleep\" | null;\n\nexport const UNITS_MAP = new Map<string, UnitDefinition>();\n\nfor (const definition of UNITS_DEFINITIONS) {\n  UNITS_MAP.set(definition.id, definition);\n}\n\nexport class UnitCore {\n  id: number;\n  actionPointsLeft: number;\n  path: TileCore[][] | null;\n\n  order: UnitOrder = null;\n\n  constructor(\n    public tile: TileCore,\n    public definition: UnitDefinition,\n    public player: PlayerCore,\n  ) {\n    this.actionPointsLeft = definition.actionPoints;\n  }\n\n  doAction(action: UnitAction) {\n    if (!this.canDoAction(action)) {\n      return;\n    }\n\n    ACTIONS[action].fn(this.player.game, this);\n    collector.units.add(this);\n  }\n\n  canDoAction(action: UnitAction): boolean {\n    if (!this.actionPointsLeft) {\n      return false;\n    }\n\n    if (!this.definition.actions.includes(action)) {\n      return false;\n    }\n\n    for (const r of ACTIONS[action].requirements) {\n      if (!r.check(this, action)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getFailedActionRequirements(action: UnitAction): string[] {\n    return ACTIONS[action].requirements\n      .filter((r) => !r.check(this, action))\n      .map((r) => r.id);\n  }\n\n  setOrder(order: UnitOrder) {\n    this.order = order;\n    this.player.updateUnitsWithoutOrders();\n  }\n\n  getPathDestination(): TileCore | null {\n    if (!this.path) {\n      return null;\n    }\n\n    const lastPathTurn = this.path[this.path.length - 1];\n    return lastPathTurn[lastPathTurn.length - 1];\n  }\n\n  getRange(): Set<TileCore> {\n    const result = new Set<TileCore>();\n    const actionPointsLeftAtTile = new Map<TileCore, number>();\n\n    this._getRange(\n      this.tile,\n      this.actionPointsLeft,\n      result,\n      actionPointsLeftAtTile,\n    );\n\n    if (result.size === 1) {\n      result.delete(this.tile);\n    }\n\n    return result;\n  }\n\n  private _getRange(\n    tile = this.tile,\n    actionPointsLeft = this.actionPointsLeft,\n    result: Set<TileCore>,\n    actionPointsLeftAtTile: Map<TileCore, number>,\n  ) {\n    result.add(tile);\n\n    if (actionPointsLeft <= 0) {\n      return result;\n    }\n\n    for (const neighbour of tile.neighbours) {\n      const oldActionPointsLeft = actionPointsLeftAtTile.get(neighbour);\n\n      const cost = tile.neighboursCosts.get(neighbour)!;\n      if (cost === Infinity) {\n        continue;\n      }\n\n      const newActionPointsLeft = actionPointsLeft - cost;\n\n      if (!oldActionPointsLeft || newActionPointsLeft > oldActionPointsLeft) {\n        actionPointsLeftAtTile.set(neighbour, newActionPointsLeft);\n\n        this._getRange(\n          neighbour,\n          newActionPointsLeft,\n          result,\n          actionPointsLeftAtTile,\n        );\n      }\n    }\n\n    return result;\n  }\n}\n","export interface Yields {\n  food: number;\n  production: number;\n  culture: number;\n  publicWorks: number;\n}\n\nexport const EMPTY_YIELDS: Yields = {\n  food: 0,\n  production: 0,\n  culture: 0,\n  publicWorks: 0,\n};\n\nexport function zeroYields(yields: Yields) {\n  yields.food = 0;\n  yields.production = 0;\n  yields.culture = 0;\n  yields.publicWorks = 0;\n}\n\nexport function addYields(targetYields: Yields, yields: Yields) {\n  targetYields.food += yields.food;\n  targetYields.production += yields.production;\n  targetYields.culture += yields.culture;\n  targetYields.publicWorks += yields.publicWorks;\n}\n\nexport function subtractYields(targetYields: Yields, yields: Yields) {\n  targetYields.food -= yields.food;\n  targetYields.production -= yields.production;\n  targetYields.culture -= yields.culture;\n  targetYields.publicWorks -= yields.publicWorks;\n}\n\nexport function copyYields(targetYields: Yields, yields: Yields) {\n  targetYields.food = yields.food;\n  targetYields.production = yields.production;\n  targetYields.culture = yields.culture;\n  targetYields.publicWorks = yields.publicWorks;\n}\n\nexport function roundYields(yields: Yields) {\n  yields.food = Math.ceil(yields.food);\n  yields.production = Math.ceil(yields.production);\n  yields.culture = Math.ceil(yields.culture);\n  yields.publicWorks = Math.ceil(yields.publicWorks);\n}\n","import { Building } from \"../core/buildings\";\nimport { BuildingRequirement } from \"../core/product\";\n\nexport const BUILDINGS: Building[] = [\n  {\n    id: \"granary\",\n    name: \"Granary\",\n    productionCost: 40,\n    bonuses: { yieldValue: { food: 3 } },\n    requirements: [],\n    weakRequirements: [],\n  },\n  {\n    id: \"well\",\n    name: \"Well\",\n    productionCost: 20,\n    bonuses: { yieldValue: { food: 1 } },\n    requirements: [],\n    weakRequirements: [],\n  },\n  {\n    id: \"bigGranary\",\n    name: \"Grand granary\",\n    productionCost: 100,\n    bonuses: { yieldFactor: { food: 0.2 } },\n    requirements: [new BuildingRequirement(\"granary\")],\n    weakRequirements: [],\n  },\n  {\n    id: \"workshop\",\n    name: \"Workshop\",\n    productionCost: 80,\n    bonuses: { yieldValue: { production: 5 } },\n    requirements: [],\n    weakRequirements: [],\n  },\n  {\n    id: \"bigWorkshop\",\n    name: \"Grand workshop\",\n    productionCost: 200,\n    bonuses: { yieldFactor: { production: 0.2 } },\n    requirements: [new BuildingRequirement(\"workshop\")],\n    weakRequirements: [],\n  },\n  {\n    id: \"slaveMarket\",\n    name: \"Slave market\",\n    productionCost: 50,\n    bonuses: { yieldValue: { publicWorks: 2 } },\n    requirements: [],\n    weakRequirements: [],\n  },\n  {\n    id: \"bigWorkshop\",\n    name: \"Grand workshop\",\n    productionCost: 200,\n    bonuses: { yieldFactor: { production: 0.2 } },\n    requirements: [new BuildingRequirement(\"workshop\")],\n    weakRequirements: [],\n  },\n  {\n    id: \"monument\",\n    name: \"Monument\",\n    productionCost: 30,\n    bonuses: { yieldValue: { culture: 2 } },\n    requirements: [],\n    weakRequirements: [],\n  },\n  {\n    id: \"allDoingBuilding\",\n    name: \"All doing building\",\n    productionCost: 500,\n    bonuses: {\n      yieldValue: { food: 1, production: 1 },\n      yieldFactor: { food: 0.1, production: 0.1 },\n    },\n    requirements: [\n      new BuildingRequirement(\"bigGranary\"),\n      new BuildingRequirement(\"bigWorkshop\"),\n    ],\n    weakRequirements: [],\n  },\n];\n","import { IdleProduct } from \"../core/idle-product\";\n\nexport const IDLE_PRODUCTS: IdleProduct[] = [\n  {\n    id: \"growth\",\n    name: \"Growth\",\n    productionCost: Infinity,\n    requirements: [],\n    weakRequirements: [],\n    bonuses: { transferProductionToFood: 0.25 },\n  },\n  {\n    id: \"culture\",\n    name: \"Culture\",\n    productionCost: Infinity,\n    requirements: [],\n    weakRequirements: [],\n    bonuses: { transferProductionToCulture: 0.25 },\n  },\n  {\n    id: \"public-works\",\n    name: \"Public works\",\n    productionCost: Infinity,\n    requirements: [],\n    weakRequirements: [],\n    bonuses: { transferProductionToPublicWorks: 0.25 },\n  },\n];\n","import { UnitDefinition } from \"../core/unit.interface\";\nimport { BuildingRequirement, SizeRequirement } from \"../core/product\";\n\nexport const UNITS_DEFINITIONS: UnitDefinition[] = [\n  {\n    id: \"settler\",\n    name: \"Settler\",\n    type: \"civilian\",\n    actionPoints: 2,\n    power: 0,\n    actions: [\"foundCity\"],\n    productionCost: 50,\n    requirements: [],\n    weakRequirements: [\n      new BuildingRequirement(\"granary\"),\n      new SizeRequirement(3),\n    ],\n  },\n  {\n    id: \"worker\",\n    name: \"Worker\",\n    type: \"civilian\",\n    actionPoints: 2,\n    power: 0,\n    actions: [\"buildFarm\", \"buildMine\", \"buildSawmill\", \"buildRoad\"],\n    productionCost: 20,\n    requirements: [],\n    weakRequirements: [new SizeRequirement(2)],\n  },\n  {\n    id: \"scout\",\n    name: \"Scout\",\n    type: \"military\",\n    actionPoints: 2,\n    power: 2,\n    actions: [],\n    productionCost: 10,\n    requirements: [],\n    weakRequirements: [],\n  },\n  {\n    id: \"warrior\",\n    name: \"Warrior\",\n    type: \"military\",\n    actionPoints: 2,\n    power: 5,\n    actions: [],\n    productionCost: 30,\n    requirements: [],\n    weakRequirements: [],\n  },\n];\n","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  AfterViewInit,\n  HostListener,\n} from \"@angular/core\";\n\nimport { Controls } from \"../controls\";\nimport { GameRenderer } from \"../renderer/renderer\";\n\n@Component({\n  selector: \"app-game-canvas\",\n  templateUrl: \"./game-canvas.component.html\",\n  styleUrls: [\"./game-canvas.component.scss\"],\n})\nexport class GameCanvasComponent implements AfterViewInit {\n  @ViewChild(\"canvas\") canvas: ElementRef<HTMLCanvasElement>;\n\n  constructor(public controls: Controls, private renderer: GameRenderer) {}\n\n  ngAfterViewInit() {\n    this.renderer.setCanvas(this.canvas.nativeElement);\n  }\n\n  onContextMenu(event: Event) {\n    event.preventDefault();\n  }\n\n  @HostListener(\"window:resize\", [\"$event\"])\n  onResize(event: Event) {\n    this.renderer.resize(window.innerWidth, window.innerHeight);\n  }\n\n  @HostListener(\"window:keydown\", [\"$event\"])\n  onKeyDown(event: KeyboardEvent) {\n    this.controls.onKeyDown(event);\n  }\n\n  @HostListener(\"window:keyup\", [\"$event\"])\n  onKeyUp(event: KeyboardEvent) {\n    this.controls.onKeyUp(event);\n  }\n}\n","<canvas\n  #canvas\n  (click)=\"controls.onClick($event)\"\n  (mousedown)=\"controls.onMouseDown($event)\"\n  (mouseup)=\"controls.onMouseUp($event)\"\n  (mousemove)=\"controls.onMouseMove($event)\"\n  (wheel)=\"controls.onWheel($event)\"\n  (contextmenu)=\"onContextMenu($event)\"\n></canvas>\n","import { TileCore } from \"../core/tile\";\nimport { SeaLevel, TileDirection } from \"../shared\";\n\nexport function findCoastline(tiles: TileCore[][]): TileCore[] {\n  const coastline: TileCore[] = [];\n  for (let x = 0; x < tiles.length; x++) {\n    for (let y = 0; y < tiles[x].length; y++) {\n      const tile = tiles[x][y];\n      if (tile.seaLevel !== SeaLevel.none) {\n        continue;\n      }\n      if (tile.neighbours.find((t) => t.seaLevel !== SeaLevel.none)) {\n        coastline.push(tile);\n      }\n    }\n  }\n  return coastline;\n}\n\nexport function placeRiverBetweenTiles(tileA: TileCore, tileB: TileCore) {\n  const direction = tileA.getDirectionTo(tileB);\n  if (tileA.riverParts.includes(direction)) {\n    return false;\n  }\n  tileA.riverParts.push(direction);\n  tileB.riverParts.push(OPPOSITE_DIRECTIONS[direction]);\n  return true;\n}\n\n// first direction is clockwise, second is counterclockwise\nexport const POSSIBLE_RIVER_DIRECTION_FROM_WATER_TILE: Record<\n  TileDirection,\n  [TileDirection, TileDirection]\n> = {\n  [TileDirection.NW]: [TileDirection.NE, TileDirection.W],\n  [TileDirection.NE]: [TileDirection.E, TileDirection.NW],\n  [TileDirection.E]: [TileDirection.SE, TileDirection.NE],\n  [TileDirection.SE]: [TileDirection.SW, TileDirection.E],\n  [TileDirection.SW]: [TileDirection.W, TileDirection.SE],\n  [TileDirection.W]: [TileDirection.NW, TileDirection.SW],\n  [TileDirection.NONE]: [TileDirection.NONE, TileDirection.NONE],\n};\n\n// flow is clockwise for first tile\nexport const POSSIBLE_BORDER_PATHS: Record<\n  TileDirection,\n  [[TileDirection, TileDirection], [TileDirection, TileDirection]]\n> = {\n  [TileDirection.NW]: [\n    [TileDirection.NE, TileDirection.NW],\n    [TileDirection.NONE, TileDirection.NE],\n  ],\n  [TileDirection.NE]: [\n    [TileDirection.E, TileDirection.NE],\n    [TileDirection.NONE, TileDirection.E],\n  ],\n  [TileDirection.E]: [\n    [TileDirection.SE, TileDirection.E],\n    [TileDirection.NONE, TileDirection.SE],\n  ],\n  [TileDirection.SE]: [\n    [TileDirection.SW, TileDirection.SE],\n    [TileDirection.NONE, TileDirection.SW],\n  ],\n  [TileDirection.SW]: [\n    [TileDirection.W, TileDirection.SW],\n    [TileDirection.NONE, TileDirection.W],\n  ],\n  [TileDirection.W]: [\n    [TileDirection.NW, TileDirection.W],\n    [TileDirection.NONE, TileDirection.NW],\n  ],\n  [TileDirection.NONE]: [\n    [TileDirection.NONE, TileDirection.NONE],\n    [TileDirection.NONE, TileDirection.NONE],\n  ],\n};\n\nexport const OPPOSITE_DIRECTIONS: Record<TileDirection, TileDirection> = {\n  [TileDirection.NW]: TileDirection.SE,\n  [TileDirection.NE]: TileDirection.SW,\n  [TileDirection.E]: TileDirection.W,\n  [TileDirection.SE]: TileDirection.NW,\n  [TileDirection.SW]: TileDirection.NE,\n  [TileDirection.W]: TileDirection.E,\n  [TileDirection.NONE]: TileDirection.NONE,\n};\n","export abstract class Animation {\n  private progress = 0;\n  private diff: number;\n\n  constructor(\n    public start: number,\n    public end: number,\n    private duration: number,\n  ) {\n    this.diff = end - start;\n  }\n\n  step(stepTime: number): number | null {\n    if (this.progress >= this.duration) {\n      return null;\n    }\n    this.progress += stepTime;\n    const eased = this.ease(this.progress / this.duration);\n    return this.start + this.diff * Math.min(eased, 1);\n  }\n\n  protected abstract ease(t: number): number;\n}\n\nexport class AnimationEaseOutQuad extends Animation {\n  protected ease(t: number) {\n    return t * (2 - t);\n  }\n}\n\nexport class AnimationEaseOutCubic extends Animation {\n  protected ease(t: number) {\n    return --t * t * t + 1;\n  }\n}\n","import * as PIXI from \"pixi.js\";\n\nimport { SeaLevel } from \"src/app/shared\";\nimport { GameState } from \"src/app/api/state\";\nimport { TileContainer } from \"./tile-container\";\nimport { HEX_GEOMETRY } from \"./utils\";\nimport { Tile } from \"../api/tile.interface\";\n\nexport interface AreaOptions {\n  color: number;\n  borderSize: number;\n  borderShadow: number;\n  borderShadowStrength: number;\n  backgroundOpacity: number;\n  visibleOnWater: boolean;\n  container: TileContainer;\n}\n\nconst VS_BORDER_PROGRAM = `\nprecision mediump float;\n\nattribute vec2 aVertexPosition;\nattribute float aUvs;\n\nuniform mat3 translationMatrix;\nuniform mat3 projectionMatrix;\n\nvarying float vUvs;\n\nvoid main() {\n  vUvs = aUvs;\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n}`;\n\nconst FRAG_BORDER_PROGRAM = `\nprecision mediump float;\n\nvarying float vUvs;\n\nuniform vec4 color;\nuniform float borderSize;\nuniform float borderShadow;\nuniform float borderShadowStrength;\n\nvoid main() {\n  vec4 c = color;\n  float a = 1.0;\n  if (vUvs < borderSize) {\n    a = 0.0;\n  } else if (vUvs < (1.0 - borderSize)) {\n    a = (vUvs - (1.0 - borderShadow)) * borderShadowStrength;\n  }\n\n  gl_FragColor = vec4(c.r * a, c.g * a, c.b * a, a);\n}`;\n\nconst VS_BACKGROUND_PROGRAM = `\nprecision mediump float;\n\nattribute vec2 aVertexPosition;\n\nuniform mat3 translationMatrix;\nuniform mat3 projectionMatrix;\n\nvoid main() {\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n}`;\n\nconst FRAG_BACKGROUND_PROGRAM = `\nprecision mediump float;\n\nuniform vec4 color;\nuniform float opacity;\n\nvoid main() {\n  float a = 0.5;\n  gl_FragColor = vec4(color.r * opacity, color.g * opacity, color.b * opacity, opacity);\n}`;\n\nconst TRIANGLES: number[][] = [\n  [0.5, 0.5, 0, 0.25, 0.5, 0],\n  [0.5, 0.5, 0.5, 0, 1, 0.25],\n  [0.5, 0.5, 1, 0.25, 1, 0.75],\n  [0.5, 0.5, 1, 0.75, 0.5, 1],\n  [0.5, 0.5, 0.5, 1, 0, 0.75],\n  [0.5, 0.5, 0, 0.75, 0, 0.25],\n];\n\nconst LEFT_SIDE_TRIANGLES: number[][] = [\n  [0.5, 0.5, 0, 0.5, 0, 0.25],\n  [0.5, 0.5, 0.25, 0.125, 0.5, 0],\n  [0.5, 0.5, 0.75, 0.125, 1, 0.25],\n  [0.5, 0.5, 1, 0.5, 1, 0.75],\n  [0.5, 0.5, 0.75, 0.875, 0.5, 1],\n  [0.5, 0.5, 0.25, 0.875, 0, 0.75],\n];\n\nconst RIGHT_SIDE_TRIANGLES: number[][] = [\n  [0.5, 0.5, 0.5, 0, 0.75, 0.125],\n  [0.5, 0.5, 1, 0.25, 1, 0.5],\n  [0.5, 0.5, 1, 0.75, 0.75, 0.875],\n  [0.5, 0.5, 0.5, 1, 0.25, 0.875],\n  [0.5, 0.5, 0, 0.75, 0, 0.5],\n  [0.5, 0.5, 0, 0.25, 0.25, 0.125],\n];\n\nconst borderGeometries = new Map<string, PIXI.Geometry>();\n\nconst borderProgram = PIXI.Program.from(VS_BORDER_PROGRAM, FRAG_BORDER_PROGRAM);\nconst backgroundProgram = PIXI.Program.from(\n  VS_BACKGROUND_PROGRAM,\n  FRAG_BACKGROUND_PROGRAM,\n);\n\nfunction makeBorderGeometry(borders: string): PIXI.Geometry {\n  const vertices: number[] = [];\n  const uvs: number[] = [];\n\n  for (let i = 0; i < 6; i++) {\n    if (borders[i] === \"1\") {\n      vertices.push(...TRIANGLES[i]);\n      uvs.push(...[0, 1, 1]);\n\n      let leftNeighbour = i - 1;\n      if (leftNeighbour < 0) {\n        leftNeighbour += 6;\n      }\n      if (borders[leftNeighbour] === \"0\") {\n        vertices.push(...LEFT_SIDE_TRIANGLES[i]);\n        uvs.push(...[0, 0, 1]);\n      }\n\n      let rightNeighbour = i + 1;\n      if (rightNeighbour > 5) {\n        rightNeighbour -= 6;\n      }\n      if (borders[rightNeighbour] === \"0\") {\n        vertices.push(...RIGHT_SIDE_TRIANGLES[i]);\n        uvs.push(...[0, 1, 0]);\n      }\n    }\n  }\n  return new PIXI.Geometry()\n    .addAttribute(\"aVertexPosition\", vertices, 2)\n    .addAttribute(\"aUvs\", uvs, 1);\n}\n\nexport class Area {\n  tiles = new Set<Tile>();\n\n  borders = new Map<Tile, string>();\n\n  drawer: AreaDrawer;\n\n  constructor(state: GameState, private options: AreaOptions) {\n    this.drawer = new AreaDrawer(this, state, options);\n  }\n\n  destroy() {\n    this.drawer.clear();\n  }\n\n  setTiles(tiles: Tile[]) {\n    this.clear();\n    this.tiles = new Set(tiles);\n    this.computeAllBorders();\n\n    for (const [tile, borders] of this.borders) {\n      this.drawer.drawTileBorders(tile, borders);\n    }\n\n    if (this.options.backgroundOpacity > 0) {\n      for (const tile of this.tiles) {\n        this.drawer.drawTileBackground(tile);\n      }\n    }\n  }\n\n  addTiles(tiles: Tile[]) {\n    for (const tile of tiles) {\n      this.tiles.add(tile);\n      this.drawer.drawTileBackground(tile);\n    }\n\n    this.computeBordersForTiles(tiles);\n  }\n\n  removeTiles(tiles: Tile[]) {\n    this.drawer.removeTiles(tiles);\n    for (const tile of tiles) {\n      this.tiles.delete(tile);\n    }\n    this.computeBordersForTiles(tiles);\n  }\n\n  private computeBordersForTiles(tiles: Tile[]) {\n    const visited = new Set<Tile>();\n    for (const tile of tiles) {\n      if (visited.has(tile)) {\n        continue;\n      }\n      visited.add(tile);\n      this.computeTileBorders(tile);\n      this.drawer.updateTileBorders(tile);\n\n      for (const neighbour of tile.neighbours) {\n        if (!this.tiles.has(neighbour) || visited.has(neighbour)) {\n          continue;\n        }\n        this.computeTileBorders(neighbour);\n        this.drawer.updateTileBorders(neighbour);\n      }\n    }\n  }\n\n  private computeAllBorders() {\n    this.borders.clear();\n    for (const tile of this.tiles) {\n      this.computeTileBorders(tile);\n    }\n  }\n\n  private computeTileBorders(tile: Tile) {\n    const borders = tile.fullNeighbours\n      .map((n) => (n && this.tiles.has(n) ? \"0\" : \"1\"))\n      .join(\"\");\n\n    if (borders === \"000000\") {\n      this.borders.delete(tile);\n    } else {\n      this.borders.set(tile, borders);\n    }\n  }\n\n  clear() {\n    this.borders.clear();\n    this.tiles = new Set();\n    this.drawer.clear();\n  }\n}\n\nclass AreaDrawer {\n  borderShader: PIXI.Shader;\n\n  backgroundShader: PIXI.Shader;\n\n  bordersMap = new Map<Tile, PIXI.Mesh>();\n\n  backgroundMap = new Map<Tile, PIXI.Mesh>();\n\n  vec4Color: number[];\n\n  constructor(\n    private area: Area,\n    private state: GameState,\n    private options: AreaOptions,\n  ) {\n    const cssColor = \"#\" + options.color.toString(16).padStart(6, \"0\");\n\n    this.vec4Color = [\n      parseInt(cssColor[1] + cssColor[2], 16) / 255,\n      parseInt(cssColor[3] + cssColor[4], 16) / 255,\n      parseInt(cssColor[5] + cssColor[6], 16) / 255,\n      1,\n    ];\n\n    this.borderShader = new PIXI.Shader(borderProgram, {\n      color: this.vec4Color,\n      borderSize: this.options.borderSize,\n      borderShadow: this.options.borderShadow,\n      borderShadowStrength: this.options.borderShadowStrength,\n    });\n\n    this.backgroundShader = new PIXI.Shader(backgroundProgram, {\n      color: this.vec4Color,\n      opacity: this.options.backgroundOpacity,\n    });\n  }\n\n  removeTiles(tiles: Tile[]) {\n    for (const tile of tiles) {\n      const mesh = this.backgroundMap.get(tile);\n      if (mesh) {\n        mesh.destroy();\n        this.backgroundMap.delete(tile);\n      }\n    }\n  }\n\n  drawTileBackground(tile: Tile) {\n    if (tile.seaLevel !== SeaLevel.none && !this.options.visibleOnWater) {\n      return;\n    }\n\n    const mesh = new PIXI.Mesh(HEX_GEOMETRY, this.backgroundShader);\n    mesh.position.x = tile.x + (tile.y % 2 ? 0.5 : 0);\n    mesh.position.y = tile.y * 0.75;\n\n    this.options.container.addChild(mesh, tile);\n    this.backgroundMap.set(tile, mesh);\n\n    if (!this.state.trackedPlayer.exploredTiles.has(tile)) {\n      mesh.visible = false;\n    }\n  }\n\n  updateTileBorders(tile: Tile) {\n    const mesh = this.bordersMap.get(tile);\n    if (mesh) {\n      mesh.destroy();\n    }\n\n    if (!this.area.tiles.has(tile)) {\n      return;\n    }\n\n    const borders = this.area.borders.get(tile);\n    if (borders) {\n      this.drawTileBorders(tile, borders);\n    } else {\n      this.bordersMap.delete(tile);\n    }\n  }\n\n  drawTileBorders(tile: Tile, borders: string) {\n    let geometry = borderGeometries.get(borders);\n    if (!geometry) {\n      geometry = makeBorderGeometry(borders);\n      borderGeometries.set(borders, geometry);\n    }\n\n    const mesh = new PIXI.Mesh(geometry, this.borderShader);\n\n    mesh.position.x = tile.x + (tile.y % 2 ? 0.5 : 0);\n    mesh.position.y = tile.y * 0.75;\n\n    this.options.container.addChild(mesh, tile);\n    this.bordersMap.set(tile, mesh);\n\n    if (!this.state.trackedPlayer.exploredTiles.has(tile)) {\n      mesh.visible = false;\n    }\n  }\n\n  clear() {\n    for (const obj of this.bordersMap.values()) {\n      obj.destroy();\n    }\n    this.bordersMap.clear();\n\n    for (const obj of this.backgroundMap.values()) {\n      obj.destroy();\n    }\n    this.backgroundMap.clear();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BehaviorSubject } from \"rxjs\";\n\nimport { getTileCoords } from \"./utils\";\nimport { AnimationEaseOutCubic, Animation } from \"./animation\";\nimport { GameRenderer } from \"./renderer\";\nimport { TILE_SIZE } from \"./constants\";\nimport { GameApi } from \"../api\";\nimport { Tile } from \"../api/tile.interface\";\n\nexport interface Transform {\n  x: number;\n  y: number;\n  scale: number;\n}\n\nexport interface BoundingBox {\n  xStart: number;\n  yStart: number;\n  xEnd: number;\n  yEnd: number;\n}\n\n@Injectable()\nexport class Camera {\n  MAX_ZOOM = TILE_SIZE; // tile graphics width in pixels\n  MIN_ZOOM = 7;\n\n  transform = { x: 0, y: 0, scale: 130 };\n  private _transform$ = new BehaviorSubject<Transform>(this.transform);\n  transform$ = this._transform$.asObservable();\n  private transformChanged = false;\n\n  private scalePivotX: number;\n  private scalePivotY: number;\n\n  private scaleAnimation: Animation | null = null;\n  private moveXAnimation: Animation | null = null;\n  private moveYAnimation: Animation | null = null;\n\n  private renderer: GameRenderer;\n\n  public tileBoundingBox: BoundingBox = {\n    xStart: 0,\n    yStart: 0,\n    xEnd: 0,\n    yEnd: 0,\n  };\n\n  constructor(private game: GameApi) {}\n\n  setRenderer(renderer: GameRenderer) {\n    this.renderer = renderer;\n\n    renderer.tick$.subscribe(() => {\n      if (this.transformChanged) {\n        this._transform$.next(this.transform);\n        this.transformChanged = false;\n      }\n    });\n  }\n\n  moveBy(x: number, y: number) {\n    this.transform.x -= x / this.transform.scale;\n    this.transform.y -= y / this.transform.scale;\n    this.transformChanged = true;\n  }\n\n  moveTo(x: number, y: number) {\n    this.transform.x = x;\n    this.transform.y = y;\n    this.transformChanged = true;\n  }\n\n  moveToTileWithEasing(tile: Tile) {\n    const t = this.transform;\n    const [x, y] = getTileCoords(tile);\n    this.moveXAnimation = new AnimationEaseOutCubic(t.x, x, 600);\n    this.moveYAnimation = new AnimationEaseOutCubic(t.y, y, 600);\n  }\n\n  scaleToWithEasing(\n    newScale: number,\n    screenPivotX: number,\n    screenPivotY: number,\n    duration = 600,\n  ) {\n    const t = this.transform;\n    this.scalePivotX = screenPivotX;\n    this.scalePivotY = screenPivotY;\n    this.scaleAnimation = new AnimationEaseOutCubic(\n      t.scale,\n      newScale,\n      duration,\n    );\n  }\n\n  scaleByWithEasing(\n    scaleFactor: number,\n    screenPivotX: number,\n    screenPivotY: number,\n    duration = 600,\n  ) {\n    const t = this.transform;\n    const currentScale = this.scaleAnimation?.end || t.scale;\n    const newScale = currentScale * scaleFactor;\n    this.scaleToWithEasing(newScale, screenPivotX, screenPivotY, duration);\n  }\n\n  scaleTo(scale: number, screenPivotX: number, screenPivotY: number) {\n    const t = this.transform;\n    const [x1, y1] = this.screenToCanvas(screenPivotX, screenPivotY);\n\n    t.scale = Math.max(this.MIN_ZOOM, Math.min(this.MAX_ZOOM, scale));\n\n    const [x2, y2] = this.screenToCanvas(screenPivotX, screenPivotY);\n\n    t.x += x1 - x2;\n    t.y += y1 - y2;\n\n    this.transformChanged = true;\n  }\n\n  moveToTile(tile: Tile) {\n    const [x, y] = getTileCoords(tile);\n    this.moveTo(x, y);\n  }\n\n  screenToCanvas(screenX: number, screenY: number): [number, number] {\n    const t = this.transform;\n    return [\n      (screenX - this.canvas.width / 2) / t.scale + t.x,\n      (screenY - this.canvas.height / 2) / t.scale + t.y,\n    ];\n  }\n\n  screenToGame(screenX: number, screenY: number): [number, number] {\n    let [x, y] = this.screenToCanvas(screenX, screenY);\n    y = Math.floor(y / 0.75);\n    x = Math.floor(x - (y % 2 ? 0.5 : 0));\n    return [x, y];\n  }\n\n  canvasToScreen(canvasX: number, canvasY: number): [number, number] {\n    const t = this.transform;\n    return [\n      t.scale * (canvasX - t.x) + this.canvas.width / 2,\n      t.scale * (canvasY - t.y) + this.canvas.height / 2,\n    ];\n  }\n\n  gameToScreen(gameX: number, gameY: number): [number, number] {\n    if (Math.floor(gameY) % 2) {\n      gameX += 0.5;\n    }\n    return this.canvasToScreen(gameX, gameY * 0.75);\n  }\n\n  get canvas() {\n    return this.renderer.canvas;\n  }\n\n  update() {\n    const elapsedMS = this.renderer.app.ticker.elapsedMS;\n\n    if (this.scaleAnimation) {\n      const newScale = this.scaleAnimation.step(elapsedMS);\n      if (newScale === null) {\n        this.scaleAnimation = null;\n      } else {\n        this.scaleTo(newScale, this.scalePivotX, this.scalePivotY);\n      }\n    }\n\n    if (this.moveXAnimation || this.moveYAnimation) {\n      const t = this.transform;\n      let [x, y] = [t.x, t.y];\n      if (this.moveXAnimation) {\n        const newX = this.moveXAnimation.step(elapsedMS);\n        if (newX === null) {\n          this.moveXAnimation = null;\n        } else {\n          x = newX;\n        }\n      }\n\n      if (this.moveYAnimation) {\n        const newY = this.moveYAnimation.step(elapsedMS);\n        if (newY === null) {\n          this.moveYAnimation = null;\n        } else {\n          y = newY;\n        }\n      }\n\n      this.moveTo(x, y);\n    }\n\n    this.updateBoundingBox();\n\n    this.updateProjectionMatrix();\n  }\n\n  updateProjectionMatrix() {\n    // const m = this.renderer.app.renderer.globalUniforms.uniforms\n    const m = this.renderer.app.renderer.projection.projectionMatrix;\n\n    m.tx = this.transform.x;\n    m.ty = this.transform.y;\n    m.d = this.transform.scale;\n    m.a = this.transform.scale;\n  }\n\n  updateBoundingBox() {\n    if (!this.game.state) {\n      return;\n    }\n\n    const t = this.transform;\n    const width = Math.floor(this.renderer.canvas.width / t.scale);\n    const height = Math.floor(this.renderer.canvas.height / t.scale);\n\n    const map = this.game.state.map;\n\n    const xStart = Math.floor(t.x - width / 2 - 1);\n    const yStart = Math.floor(t.y - height / 2);\n\n    this.tileBoundingBox.xStart = Math.max(0, Math.min(map.width, xStart));\n    this.tileBoundingBox.yStart = Math.max(0, Math.min(map.height, yStart));\n    this.tileBoundingBox.xEnd = Math.min(map.width, xStart + width + 3);\n    this.tileBoundingBox.yEnd = Math.min(\n      map.height,\n      (yStart + height + 2) / 0.75,\n    );\n  }\n}\n","export const TILE_SIZE = 256;\n","import * as PIXIE from \"pixi.js\";\n\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { TileWrapperContainer, TileContainer } from \"./tile-container\";\nimport { TerrainDrawer } from \"./tile/terrain\";\nimport { UnitsDrawer } from \"./tile/unit\";\nimport { YiedsDrawer } from \"./tile/yields\";\nimport { RiverDrawer } from \"./tile/river\";\nimport { CityDrawer } from \"./tile/city\";\nimport { GameRenderer } from \"./renderer\";\nimport { Camera } from \"./camera\";\nimport { GameApi } from \"../api\";\nimport { GameState } from \"../api/state\";\nimport { TrackedPlayer } from \"../api/tracked-player\";\nimport { PoliticsDrawer } from \"./politics\";\nimport { Tile } from \"../api/tile.interface\";\n\nexport class MapDrawer {\n  container = new TileWrapperContainer();\n\n  waterContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  terrainContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  riverContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  cityContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  yieldsContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  unitsContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  areasContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  overlaysContainer = new PIXIE.Container();\n\n  terrainDrawer: TerrainDrawer;\n\n  unitsDrawer: UnitsDrawer;\n\n  yieldsDrawer: YiedsDrawer;\n\n  riverDrawer: RiverDrawer;\n\n  cityDrawer: CityDrawer;\n\n  politicsDrawer: PoliticsDrawer;\n\n  constructor(\n    private game: GameApi,\n    private renderer: GameRenderer,\n    private camera: Camera,\n  ) {\n    this.waterContainer[\"interactiveChildren\"] = false;\n    this.terrainContainer[\"interactiveChildren\"] = false;\n    this.riverContainer[\"interactiveChildren\"] = false;\n    this.cityContainer[\"interactiveChildren\"] = false;\n    this.yieldsContainer[\"interactiveChildren\"] = false;\n    this.overlaysContainer[\"interactiveChildren\"] = false;\n    this.areasContainer[\"interactiveChildren\"] = false;\n\n    this.container.addChild(this.waterContainer);\n    this.container.addChild(this.terrainContainer);\n    this.container.addChild(this.riverContainer);\n    this.container.addChild(this.cityContainer);\n    this.container.addChild(this.yieldsContainer);\n    this.container.addChild(this.overlaysContainer);\n    this.container.addChild(this.areasContainer);\n    this.container.addChild(this.unitsContainer);\n\n    this.game.init$.subscribe((state) => {\n      state.trackedPlayer$\n        .pipe(takeUntil(this.game.stop$))\n        .subscribe((player) => this.limitViewToPlayer(player));\n\n      state.tilesExplored$\n        .pipe(takeUntil(this.game.stop$))\n        .subscribe((tiles) => this.reveal(tiles));\n\n      state.tilesUpdated$\n        .pipe(takeUntil(this.game.stop$))\n        .subscribe((tiles) => {\n          for (const tile of tiles) {\n            this.updateTile(tile);\n          }\n        });\n\n      this.build(state);\n    });\n\n    this.game.stop$.subscribe(() => this.clear());\n\n    // Drawers must be created after init$ subscription?. Race condition will occur otherwise.\n    this.terrainDrawer = new TerrainDrawer(\n      this.renderer,\n      this.game,\n      this.terrainContainer,\n      this.waterContainer,\n    );\n\n    this.unitsDrawer = new UnitsDrawer(\n      this.game,\n      this.renderer,\n      this.unitsContainer,\n    );\n\n    this.yieldsDrawer = new YiedsDrawer(\n      this.game,\n      this.renderer.mapUi,\n      this.yieldsContainer,\n    );\n\n    this.riverDrawer = new RiverDrawer(this.game, this.riverContainer);\n\n    this.cityDrawer = new CityDrawer(\n      this.game,\n      this.renderer,\n      this.cityContainer,\n    );\n  }\n\n  hideAllTiles() {\n    for (const objects of this.container.tilesMap.values()) {\n      for (const obj of objects) {\n        obj.visible = false;\n      }\n    }\n  }\n\n  reveal(tiles: Iterable<Tile>) {\n    for (const tile of tiles) {\n      const displayObjects = this.container.tilesMap.get(tile);\n      if (displayObjects) {\n        for (const obj of displayObjects) {\n          obj.visible = true;\n        }\n      }\n    }\n  }\n\n  clear() {\n    if (this.terrainDrawer) {\n      this.terrainDrawer.clear();\n      this.riverDrawer.clear();\n      this.cityDrawer.clear();\n      this.unitsDrawer.clear();\n      this.yieldsDrawer.clear();\n      this.politicsDrawer.clear();\n    }\n  }\n\n  private build(gameState: GameState) {\n    this.politicsDrawer = new PoliticsDrawer(gameState, this.renderer);\n    this.container.bindToMap(gameState.map);\n\n    this.waterContainer.bindToMap(gameState.map);\n    this.terrainContainer.bindToMap(gameState.map);\n    this.cityContainer.bindToMap(gameState.map);\n    this.yieldsContainer.bindToMap(gameState.map);\n    this.riverContainer.bindToMap(gameState.map);\n    this.unitsContainer.bindToMap(gameState.map);\n    this.areasContainer.bindToMap(gameState.map);\n\n    this.unitsDrawer.build();\n    this.cityDrawer.build();\n\n    for (let y = 0; y < gameState.map.height; y++) {\n      for (let x = 0; x < gameState.map.width; x++) {\n        const tile = gameState.map.tiles[x][y];\n        this.drawTile(tile);\n      }\n    }\n\n    if (this.game.state?.trackedPlayer) {\n      this.limitViewToPlayer(this.game.state?.trackedPlayer);\n    }\n  }\n\n  private updateTile(tile: Tile) {\n    this.clearTile(tile);\n    this.drawTile(tile);\n  }\n\n  private drawTile(tile: Tile) {\n    this.terrainDrawer.drawTile(tile);\n    this.yieldsDrawer.drawTile(tile);\n    this.riverDrawer.drawTile(tile);\n  }\n\n  private clearTile(tile: Tile) {\n    this.terrainDrawer.clearTile(tile);\n    this.yieldsDrawer.clearTile(tile);\n    this.riverContainer.clearTile(tile);\n  }\n\n  private limitViewToPlayer(player: TrackedPlayer) {\n    this.hideAllTiles();\n    this.reveal(player.exploredTiles);\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { Transform, Camera } from \"../renderer/camera\";\nimport { drawHex } from \"./utils\";\nimport { GameRenderer } from \"./renderer\";\nimport { SeaLevel, Climate, TileDirection } from \"../shared\";\nimport { GameApi } from \"../api\";\nimport { Tile } from \"../api/tile.interface\";\n\nconst SEA_COLORS: Record<SeaLevel, number> = {\n  [SeaLevel.deep]: 0x25619a,\n  [SeaLevel.shallow]: 0x4383b5,\n  [SeaLevel.none]: 0x000000,\n};\n\nconst CLIMATE_COLORS: Record<Climate, number> = {\n  [Climate.continental]: 0x516733,\n  [Climate.desert]: 0xc7bd93,\n  [Climate.oceanic]: 0x678123,\n  [Climate.savanna]: 0xb4a73f,\n  [Climate.tropical]: 0x6c9b2b,\n  [Climate.tundra]: 0x9cb3b6,\n  [Climate.arctic]: 0xe5e5e5,\n};\n\nconst maxSize = 300;\n\nexport class MinimapRenderer {\n  width = 0;\n  height = 0;\n  scale = 1;\n\n  public container = new PIXIE.Container();\n\n  private mapScene = new PIXIE.Container();\n\n  private cameraGraphics = new PIXIE.Graphics();\n\n  private mapSprite = new PIXIE.Sprite();\n\n  private mapTexture: PIXIE.RenderTexture;\n\n  private tilesMap = new Map<Tile, PIXIE.DisplayObject[]>();\n\n  private app: PIXIE.Application;\n\n  private destroyed$ = new Subject<void>();\n\n  constructor(\n    private game: GameApi,\n    private renderer: GameRenderer,\n    private camera: Camera,\n  ) {\n    this.game.init$.subscribe((state) => {\n      state.trackedPlayer$\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe((player) => {\n          this.hideAllTiles();\n          this.reveal(player.exploredTiles);\n          this.updateMap();\n        });\n\n      state.tilesExplored$\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe((tiles) => {\n          this.reveal(tiles);\n          this.updateMap();\n        });\n\n      state.tilesUpdated$\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe((tiles) => {\n          for (const tile of tiles) {\n            this.drawTile(tile);\n          }\n          this.updateMap();\n        });\n    });\n\n    this.container.addChild(this.mapSprite);\n    this.container.addChild(this.cameraGraphics);\n  }\n\n  calculateSize() {\n    if (!this.game.state) {\n      return;\n    }\n\n    const map = this.game.state.map;\n\n    if (map.width > map.height) {\n      this.width = maxSize;\n      this.height = maxSize / (map.width / map.height);\n      this.scale = maxSize / map.width;\n    } else {\n      this.width = maxSize / (map.height / map.width);\n      this.height = maxSize;\n      this.scale = maxSize / map.height;\n    }\n    this.height *= 0.75;\n  }\n\n  create(app: PIXIE.Application) {\n    if (!this.game.state) {\n      return;\n    }\n\n    this.app = app;\n\n    this.mapTexture = PIXIE.RenderTexture.create({\n      width: this.width,\n      height: this.height,\n    });\n    this.mapSprite.texture = this.mapTexture;\n\n    this.drawMap();\n\n    this.hideAllTiles();\n    this.reveal(this.game.state.trackedPlayer.exploredTiles);\n\n    this.app.stage.addChild(this.container);\n\n    this.camera.transform$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((transform) => {\n        this.updateCamera(transform);\n      });\n\n    this.updateMap();\n  }\n\n  destroy() {\n    this.mapTexture.destroy();\n    this.mapSprite.destroy();\n    for (const objects of this.tilesMap.values()) {\n      for (const obj of objects) {\n        obj.destroy();\n      }\n    }\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  private hideAllTiles() {\n    for (const obj of this.mapScene.children) {\n      obj.visible = false;\n    }\n  }\n\n  private reveal(tiles: Iterable<Tile>) {\n    for (const tile of tiles) {\n      const displayObjects = this.tilesMap.get(tile);\n      if (displayObjects) {\n        for (const obj of displayObjects) {\n          obj.visible = true;\n        }\n      }\n    }\n  }\n\n  private updateCamera(t: Transform) {\n    let width = this.renderer.canvas.width / t.scale;\n    let height = this.renderer.canvas.height / t.scale;\n\n    const xStart = (t.x - width / 2) * this.scale;\n    const yStart = (t.y - height / 2) * this.scale;\n\n    this.cameraGraphics.clear();\n\n    this.cameraGraphics.lineStyle(1, 0xffffff);\n    this.cameraGraphics.drawRect(\n      xStart,\n      yStart,\n      width * this.scale,\n      height * this.scale,\n    );\n\n    if (this.app) {\n      this.app.render();\n    }\n  }\n\n  private updateMap() {\n    this.app.renderer.render(this.mapScene, this.mapTexture);\n    this.app.render();\n  }\n\n  private drawMap() {\n    if (!this.game.state) {\n      return;\n    }\n\n    for (let y = 0; y < this.game.state.map.height; y++) {\n      for (let x = 0; x < this.game.state.map.width; x++) {\n        this.drawTile(this.game.state.map.tiles[x][y]);\n      }\n    }\n  }\n\n  private drawTile(tile: Tile) {\n    let color: number;\n\n    if (tile.seaLevel !== SeaLevel.none) {\n      color = SEA_COLORS[tile.seaLevel];\n    } else if (tile.areaOf) {\n      color = tile.areaOf.player.color;\n    } else {\n      color = CLIMATE_COLORS[tile.climate];\n    }\n\n    const g = new PIXIE.Graphics();\n    g.beginFill(color);\n    drawHex(g);\n    g.endFill();\n\n    g.position.x = (tile.x + (tile.y % 2 ? 0.5 : 0)) * this.scale;\n    g.position.y = tile.y * 0.75 * this.scale;\n    g.scale.x = this.scale;\n    g.scale.y = this.scale;\n\n    this.mapScene.addChild(g);\n    this.tilesMap.set(tile, [g]);\n\n    this.renderRivers(tile, g);\n\n    if (!this.game.state!.trackedPlayer.exploredTiles.has(tile)) {\n      g.visible = false;\n    }\n  }\n\n  private renderRivers(tile: Tile, graphics: PIXIE.Graphics) {\n    if (!tile.riverParts.length) {\n      return;\n    }\n\n    graphics.lineStyle(0.3, SEA_COLORS[SeaLevel.deep]);\n\n    for (const river of tile.riverParts) {\n      if (river === TileDirection.NW) {\n        graphics.moveTo(0, 0.25);\n        graphics.lineTo(0.5, 0);\n      }\n\n      if (river === TileDirection.NE) {\n        graphics.moveTo(0.5, 0);\n        graphics.lineTo(1, 0.25);\n      }\n\n      if (river === TileDirection.E) {\n        graphics.moveTo(1, 0.25);\n        graphics.lineTo(1, 0.75);\n      }\n\n      if (river === TileDirection.SE) {\n        graphics.moveTo(1, 0.75);\n        graphics.lineTo(0.5, 1);\n      }\n\n      if (river === TileDirection.SW) {\n        graphics.moveTo(0.5, 1);\n        graphics.lineTo(0, 0.75);\n      }\n\n      if (river === TileDirection.W) {\n        graphics.moveTo(0, 0.75);\n        graphics.lineTo(0, 0.25);\n      }\n    }\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { drawClosedHex, getTileCoords, drawHex } from \"./utils\";\nimport { MapUi } from \"../ui/map-ui\";\nimport { Tile } from \"../api/tile.interface\";\n\nexport class OverlaysRenderer {\n  container = new PIXIE.Container();\n\n  hoveredTileGraphics = new PIXIE.Graphics();\n\n  selectedTileGraphics = new PIXIE.Graphics();\n\n  highlightedTilesGraphics = new PIXIE.Graphics();\n\n  constructor(mapUi: MapUi) {\n    this.container.addChild(this.hoveredTileGraphics);\n    this.container.addChild(this.selectedTileGraphics);\n\n    this.buildHoveredTileGraphics();\n    this.buildSelectedTileGraphics();\n\n    mapUi.hoveredTile$.subscribe((tile) =>\n      this.displayAtTile(this.hoveredTileGraphics, tile),\n    );\n\n    mapUi.selectedTile$.subscribe((tile) => {\n      this.displayAtTile(this.selectedTileGraphics, tile);\n    });\n\n    mapUi.highlightedTiles$.subscribe((tiles) => {\n      this.buildHighlightedTiles(tiles);\n    });\n  }\n\n  private displayAtTile(obj: PIXIE.DisplayObject, tile: Tile | null) {\n    if (tile) {\n      const [x, y] = getTileCoords(tile);\n      obj.position.x = x;\n      obj.position.y = y;\n      obj.visible = true;\n    } else {\n      obj.visible = false;\n    }\n  }\n\n  buildHoveredTileGraphics() {\n    this.hoveredTileGraphics.lineStyle(0.02, 0xffffff, 0.5);\n    this.hoveredTileGraphics.beginFill(0xffffff, 0.1);\n    drawClosedHex(this.hoveredTileGraphics);\n    this.hoveredTileGraphics.endFill();\n  }\n\n  buildSelectedTileGraphics() {\n    this.selectedTileGraphics.lineStyle(0.05, 0xff0000, 0.5);\n    this.selectedTileGraphics.beginFill(0xffffff, 0.1);\n    drawClosedHex(this.selectedTileGraphics);\n    this.selectedTileGraphics.endFill();\n  }\n\n  buildHighlightedTiles(tiles: Set<Tile>) {\n    this.highlightedTilesGraphics.clear();\n    if (!tiles.size) {\n      this.container.removeChild(this.highlightedTilesGraphics);\n      return;\n    }\n\n    const g = this.highlightedTilesGraphics;\n    for (const tile of tiles) {\n      const [x, y] = getTileCoords(tile);\n\n      g.beginFill(0xffffff, 0.3);\n      drawHex(g, x, y);\n      g.endFill();\n    }\n\n    this.container.addChild(g);\n  }\n\n  clear() {\n    this.highlightedTilesGraphics.clear();\n    this.hoveredTileGraphics.visible = false;\n    this.selectedTileGraphics.visible = false;\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { getTileCenter } from \"./utils\";\nimport { MapUi } from \"../ui/map-ui\";\nimport { Camera } from \"./camera\";\nimport { GameApi } from \"../api\";\nimport { Tile } from \"../api/tile.interface\";\n\nexport class PathRenderer {\n  container = new PIXIE.Container();\n\n  pathGraphics = new PIXIE.Graphics();\n\n  labels: PIXIE.Text[] = [];\n\n  constructor(\n    private game: GameApi,\n    private camera: Camera,\n    private mapUi: MapUi,\n  ) {\n    this.container.addChild(this.pathGraphics);\n\n    mapUi.activePath$.subscribe((path) => this.buildPath(path));\n  }\n\n  clear() {\n    this.pathGraphics.clear();\n    for (const label of this.labels) {\n      this.container.removeChild(label);\n      label.destroy();\n    }\n    this.labels = [];\n  }\n\n  buildPath(path: Tile[][] | null) {\n    this.clear();\n\n    const unit = this.mapUi.selectedUnit;\n    if (!path || !path.length || !unit) {\n      this.container.visible = false;\n      return;\n    }\n\n    this.container.visible = true;\n    const g = this.pathGraphics;\n\n    g.lineStyle(0.1, 0xff0000);\n    g.moveTo(...getTileCenter(unit.tile));\n    for (const turn of path) {\n      for (const tile of turn) {\n        g.lineTo(...getTileCenter(tile));\n      }\n    }\n\n    for (let turn = 0; turn < path.length; turn++) {\n      if (path[turn][0]) {\n        const scale = this.camera.transform.scale;\n        const label = new PIXIE.Text(turn.toString(), {\n          align: \"center\",\n          fill: \"white\",\n          dropShadow: true,\n          dropShadowBlur: 5,\n          dropShadowDistance: 0,\n          fontSize: scale * 0.7,\n        } as PIXIE.TextStyle);\n        label.scale.set(1 / scale, 1 / scale);\n        this.container.addChild(label);\n        this.labels.push(label);\n        const metrics = PIXIE.TextMetrics.measureText(\n          turn.toString(),\n          label.style,\n        );\n        const [x, y] = getTileCenter(path[turn][0]);\n        label.position.x = x - metrics.width / 2 / scale;\n        label.position.y = y - metrics.height / 2 / scale;\n      }\n    }\n  }\n}\n","import { GameState } from \"../api/state\";\nimport { GameRenderer } from \"./renderer\";\nimport { Area } from \"./area\";\n\nexport class PoliticsDrawer {\n  areas: Area[] = [];\n\n  constructor(private state: GameState, private renderer: GameRenderer) {\n    this.makeAreas();\n  }\n\n  async makeAreas() {\n    for (const player of this.state.players) {\n      const tiles = await this.state.getAreaTiles(player.areaId);\n      const area = new Area(this.state, {\n        color: player.color,\n        container: this.renderer.mapDrawer.areasContainer,\n        backgroundOpacity: 0.5,\n        borderShadow: 0.7,\n        borderSize: 0.08,\n        borderShadowStrength: 1,\n        visibleOnWater: false,\n      });\n\n      this.areas.push(area);\n      area.setTiles(tiles);\n      this.state.areasMap.set(player.areaId, area);\n    }\n  }\n\n  clear() {\n    for (const area of this.areas) {\n      area.clear();\n    }\n    this.areas = [];\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { Injectable } from \"@angular/core\";\n\nimport { OverlaysRenderer } from \"./overlays\";\nimport { PathRenderer } from \"./path\";\nimport { MapDrawer } from \"./map\";\nimport { MapUi } from \"../ui/map-ui\";\nimport { Camera } from \"./camera\";\nimport { GameApi } from \"../api\";\nimport { Subject } from \"rxjs\";\n\n@Injectable()\nexport class GameRenderer {\n  app: PIXIE.Application;\n\n  canvas: HTMLCanvasElement;\n\n  mapDrawer: MapDrawer;\n\n  overlays: OverlaysRenderer;\n\n  path: PathRenderer;\n\n  loader = new PIXIE.Loader();\n\n  atlas = this.loader.add(\"assets/atlas.json\").load(() => this.onLoad());\n\n  textures: PIXIE.ITextureDictionary;\n\n  private _tick$ = new Subject<void>();\n  tick$ = this._tick$.asObservable();\n\n  constructor(\n    private game: GameApi,\n    public mapUi: MapUi,\n    private camera: Camera,\n  ) {\n    this.camera.setRenderer(this);\n  }\n\n  setCanvas(canvas: HTMLCanvasElement) {\n    const [width, height] = [window.innerWidth, window.innerHeight];\n\n    this.app = new PIXIE.Application({ view: canvas, width, height });\n\n    this.canvas = canvas;\n\n    this.mapDrawer = new MapDrawer(this.game, this, this.camera);\n    this.overlays = new OverlaysRenderer(this.mapUi);\n    this.path = new PathRenderer(this.game, this.camera, this.mapUi);\n\n    this.path.container.interactiveChildren = false;\n    this.overlays.container.interactiveChildren = false;\n\n    this.app.stage.addChild(this.mapDrawer.container);\n    this.app.stage.addChild(this.overlays.container);\n    this.app.stage.addChild(this.path.container);\n\n    if (this.isLoaded) {\n      this.onReady();\n    }\n\n    this.app.ticker.add(() => {\n      this.camera.update();\n      this.mapUi.update();\n      this._tick$.next();\n\n      const scale = this.camera.transform.scale;\n      if (this.mapDrawer.politicsDrawer) {\n        const backgroundOpacity = Math.min(\n          0.4,\n          Math.max(0, (70 - scale) / 150),\n        );\n\n        const borderShadow = Math.max(0.4, Math.min(0.7, (150 - scale) / 100));\n\n        for (const area of this.mapDrawer.politicsDrawer.areas) {\n          area.drawer.backgroundShader.uniforms.opacity = backgroundOpacity;\n          area.drawer.borderShader.uniforms.borderShadow = borderShadow;\n        }\n      }\n    });\n  }\n\n  resize(width: number, height: number) {\n    this.app.renderer.resize(width, height);\n  }\n\n  onReady() {\n    this.camera.transform$.subscribe((t) => {\n      const x = (-t.x + this.canvas.width / 2 / t.scale) * t.scale;\n      const y = (-t.y + this.canvas.height / 2 / t.scale) * t.scale;\n      this.app.stage.setTransform(x, y, t.scale, t.scale);\n    });\n  }\n\n  onLoad() {\n    const atlas = this.atlas.resources[\"assets/atlas.json\"];\n    atlas.spritesheet!.baseTexture.mipmap = PIXIE.MIPMAP_MODES.POW2;\n    this.textures = atlas.textures!;\n    if (this.canvas) {\n      this.onReady();\n    }\n  }\n\n  clear() {\n    this.mapDrawer.clear();\n    this.path.clear();\n    this.overlays.clear();\n  }\n\n  get isLoaded() {\n    return !!this.textures;\n  }\n}\n","import * as PIXI from \"pixi.js\";\n\nimport { BoundingBox } from \"./camera\";\nimport { TilesMap } from \"../api/map\";\nimport { Tile } from \"../api/tile.interface\";\n\nexport class TileWrapperContainer extends PIXI.Container {\n  tilesMap = new Map<Tile, PIXI.DisplayObject[]>();\n\n  bindToMap(map: TilesMap) {\n    for (let x = 0; x < map.width; x++) {\n      for (let y = 0; y < map.height; y++) {\n        this.tilesMap.set(map.tiles[x][y], []);\n      }\n    }\n  }\n}\n\nexport class TileContainer extends PIXI.DisplayObject {\n  parent: TileWrapperContainer;\n\n  private map: TilesMap;\n\n  private grid: PIXI.DisplayObject[][][] = [];\n  childrenMap = new Map<PIXI.DisplayObject, Tile>();\n\n  // TODO can it be rewritten with tile ids? Map<number, ...>\n  private tilesMap = new Map<Tile, PIXI.DisplayObject[]>();\n\n  // needed only for interactivity\n  children: PIXI.DisplayObject[] = [];\n\n  constructor(private bBox: BoundingBox) {\n    super();\n  }\n\n  addChild<T extends PIXI.DisplayObject>(child: T, tile: Tile): void {\n    if (child.parent) {\n      child.parent.removeChild(child);\n    }\n\n    (child as any).parent = this;\n    (child as any).transform._parentID = -1;\n\n    this.grid[tile.x][tile.y].push(child);\n\n    this.childrenMap.set(child, tile);\n    this.tilesMap.get(tile)?.push(child);\n\n    this.children.push(child);\n\n    (this as any)._boundsID++;\n\n    this.parent.tilesMap.get(tile)!.push(child);\n\n    child.emit(\"added\", this);\n  }\n\n  removeChild(child: PIXI.DisplayObject) {\n    if (this.childrenMap.has(child)) {\n      // remove from childrenMap\n      const tile = this.childrenMap.get(child)!;\n      this.childrenMap.delete(child);\n\n      // remove from grid\n      let children = this.grid[tile.x][tile.y];\n      let index = children.indexOf(child);\n      if (index !== -1) {\n        children.splice(index, 1);\n      }\n\n      // remove from tilesMap\n      children = this.tilesMap.get(tile)!;\n      index = children.indexOf(child);\n      if (index !== -1) {\n        children.splice(index, 1);\n      }\n\n      // remove from parent\n      children = this.parent.tilesMap.get(tile)!;\n      index = children.indexOf(child);\n      if (index !== -1) {\n        children.splice(index, 1);\n      }\n\n      // remove from children\n      index = this.children.indexOf(child);\n      if (index !== -1) {\n        children.splice(index, 1);\n      }\n    }\n  }\n\n  moveChild(child: PIXI.DisplayObject, tile: Tile) {\n    this.removeChild(child);\n    this.addChild(child, tile);\n  }\n\n  getChildsFor(tile: Tile) {\n    return this.tilesMap.get(tile)!;\n  }\n\n  clearTile(tile: Tile) {\n    for (const obj of this.getChildsFor(tile)) {\n      obj.destroy();\n    }\n  }\n\n  destroyAllChildren() {\n    if (!this.map) {\n      return;\n    }\n\n    for (let x = 0; x < this.map.width; x++) {\n      for (let y = 0; y < this.map.height; y++) {\n        for (const child of this.grid[x][y]) {\n          child.destroy();\n        }\n      }\n    }\n  }\n\n  bindToMap(map: TilesMap) {\n    this.map = map;\n    this.grid = new Array(map.width);\n    this.tilesMap.clear();\n    for (let x = 0; x < map.width; x++) {\n      this.grid[x] = new Array(map.height);\n      for (let y = 0; y < map.height; y++) {\n        this.grid[x][y] = [];\n        this.tilesMap.set(map.tiles[x][y], []);\n      }\n    }\n  }\n\n  render(renderer: PIXI.Renderer) {\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n      return;\n    }\n\n    for (let x = this.bBox.xStart; x < this.bBox.xEnd; x++) {\n      for (let y = this.bBox.yStart; y < this.bBox.yEnd; y++) {\n        for (const child of this.grid[x][y]) {\n          child.render(renderer);\n        }\n      }\n    }\n    renderer.batch.flush();\n  }\n\n  updateTransform() {\n    if (!this.grid.length) {\n      return;\n    }\n\n    (this as any)._boundsID++;\n\n    this.transform.updateTransform(this.parent.transform);\n\n    // TODO: check render flags, how to process stuff here\n    (this as any).worldAlpha = this.alpha * this.parent.worldAlpha;\n\n    for (let x = this.bBox.xStart; x < this.bBox.xEnd; x++) {\n      for (let y = this.bBox.yStart; y < this.bBox.yEnd; y++) {\n        for (const child of this.grid[x][y]) {\n          if (child.visible) {\n            child.updateTransform();\n          }\n        }\n      }\n    }\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { getTileVariants, pickRandom, drawTileSprite } from \"../utils\";\nimport { TileContainer } from \"../tile-container\";\nimport { GameRenderer } from \"../renderer\";\nimport { GameApi } from \"src/app/api\";\nimport { City } from \"src/app/api/city\";\n\nconst SMALL_CITY_TEXTURES = getTileVariants(\"villageSmall\", 4);\nconst BIG_CITY_TEXTURES = getTileVariants(\"village\", 4);\n\nexport class CityDrawer {\n  citiesGraphics = new Map<City, PIXIE.Sprite>();\n\n  constructor(\n    private game: GameApi,\n    private renderer: GameRenderer,\n    private container: TileContainer,\n  ) {\n    game.init$.subscribe((state) => {\n      state.citySpawned$\n        .pipe(takeUntil(game.stop$))\n        .subscribe((city) => this.spawn(city));\n\n      state.cityUpdated$\n        .pipe(takeUntil(game.stop$))\n        .subscribe((city) => this.update(city));\n\n      state.cityDestroyed$\n        .pipe(takeUntil(game.stop$))\n        .subscribe((city) => this.destroy(city));\n    });\n  }\n\n  build() {\n    if (!this.game.state) {\n      return;\n    }\n\n    for (const city of this.game.state.cities) {\n      this.spawn(city);\n    }\n  }\n\n  spawn(city: City) {\n    const variants = city.size >= 10 ? BIG_CITY_TEXTURES : SMALL_CITY_TEXTURES;\n    const textureName = pickRandom(variants);\n    const g = drawTileSprite(city.tile, this.textures[textureName]);\n\n    this.container.addChild(g, city.tile);\n    this.citiesGraphics.set(city, g);\n\n    if (!this.game.state!.trackedPlayer.exploredTiles.has(city.tile)) {\n      g.visible = false;\n    }\n  }\n\n  destroy(city: City) {\n    const g = this.citiesGraphics.get(city)!;\n    this.citiesGraphics.delete(city);\n    g.destroy();\n  }\n\n  update(city: City) {\n    this.destroy(city);\n    this.spawn(city);\n  }\n\n  clear() {\n    this.container.destroyAllChildren();\n    this.citiesGraphics.clear();\n  }\n\n  private get textures() {\n    return this.renderer.textures;\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { TileContainer } from \"../tile-container\";\nimport { TileDirection } from \"src/app/shared\";\nimport { GameApi } from \"src/app/api\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\nexport class RiverDrawer {\n  constructor(private game: GameApi, private container: TileContainer) {}\n\n  public drawTile(tile: Tile) {\n    if (!tile.riverParts.length) {\n      return;\n    }\n\n    const g = new PIXIE.Graphics();\n    g.position.x = tile.x + (tile.y % 2 ? 0.5 : 0);\n    g.position.y = tile.y * 0.75;\n    this.container.addChild(g, tile);\n\n    g.lineStyle(0.15, 0x4169e1);\n\n    for (const river of tile.riverParts) {\n      if (river === TileDirection.NW) {\n        g.moveTo(0, 0.25);\n        g.lineTo(0.5, 0);\n      }\n\n      if (river === TileDirection.NE) {\n        g.moveTo(0.5, 0);\n        g.lineTo(1, 0.25);\n      }\n\n      if (river === TileDirection.E) {\n        g.moveTo(1, 0.25);\n        g.lineTo(1, 0.75);\n      }\n\n      if (river === TileDirection.SE) {\n        g.moveTo(1, 0.75);\n        g.lineTo(0.5, 1);\n      }\n\n      if (river === TileDirection.SW) {\n        g.moveTo(0.5, 1);\n        g.lineTo(0, 0.75);\n      }\n\n      if (river === TileDirection.W) {\n        g.moveTo(0, 0.75);\n        g.lineTo(0, 0.25);\n      }\n    }\n\n    if (!this.game.state!.trackedPlayer.exploredTiles.has(tile)) {\n      g.visible = false;\n    }\n  }\n\n  clearTile(tile: Tile) {\n    this.container.clearTile(tile);\n  }\n\n  clear() {\n    this.container.destroyAllChildren();\n  }\n}\n","import {\n  getTileVariants,\n  drawTileSprite,\n  pickRandom,\n  drawTileSpriteCentered,\n} from \"../utils\";\nimport { TileContainer } from \"../tile-container\";\nimport { GameRenderer } from \"../renderer\";\nimport { TileImprovement } from \"src/app/core/tile-improvements\";\nimport { SeaLevel, Climate, LandForm } from \"src/app/shared\";\nimport { GameApi } from \"src/app/api\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\nconst SEA_TEXTURES: Record<SeaLevel, string[]> = {\n  [SeaLevel.deep]: getTileVariants(\"hexOcean\", 4),\n  [SeaLevel.shallow]: getTileVariants(\"hexShallowWater\", 4),\n  [SeaLevel.none]: [],\n};\n\nconst CLIMATE_TEXTURES: Record<Climate, Record<LandForm, string[]>> = {\n  [Climate.continental]: {\n    [LandForm.plains]: getTileVariants(\"hexPlainsCold\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHillsCold\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountain\", 4),\n  },\n  [Climate.desert]: {\n    [LandForm.plains]: getTileVariants(\"hexSand\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHillsDesert\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountainDesert\", 4),\n  },\n  [Climate.oceanic]: {\n    [LandForm.plains]: getTileVariants(\"hexPlains\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHighlands\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountain\", 4),\n  },\n  [Climate.savanna]: {\n    [LandForm.plains]: getTileVariants(\"hexScrublands\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHillsSavanna\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountainDesert\", 4),\n  },\n  [Climate.tropical]: {\n    [LandForm.plains]: getTileVariants(\"hexTropicalPlains\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHills\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountain\", 4),\n  },\n  [Climate.tundra]: {\n    [LandForm.plains]: getTileVariants(\"hexPlainsColdSnowTransition\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHillsColdSnowTransition\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountainSnow\", 4),\n  },\n  [Climate.arctic]: {\n    [LandForm.plains]: getTileVariants(\"hexPlainsColdSnowCovered\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHillsColdSnowCovered\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountainSnow\", 4),\n  },\n};\n\nconst FOREST_TEXTURES: Record<Climate, string[]> = {\n  [Climate.continental]: getTileVariants(\"hexForestPine\", 4),\n  [Climate.oceanic]: getTileVariants(\"hexForestBroadleaf\", 4),\n  [Climate.tropical]: getTileVariants(\"hexJungle\", 4),\n  [Climate.tundra]: getTileVariants(\"hexForestPineSnowTransition\", 4),\n  [Climate.savanna]: [],\n  [Climate.desert]: [],\n  [Climate.arctic]: [],\n};\n\nconst WETLANDS_TEXTURES = getTileVariants(\"hexMarsh\", 4);\nconst WETLANDS_FOREST_TEXTURES = getTileVariants(\"hexSwamp\", 4);\nconst DESERT_FLOOD_PLAINS_TEXTURES = getTileVariants(\"hexGrassySand\", 4);\n\nconst FARM_TEXTURES = getTileVariants(\"field\", 15);\nconst MINE_TEXTURES = getTileVariants(\"mines\", 5);\nconst SAWMILL_TEXTURES = getTileVariants(\"forester_hut\", 4);\n\nexport class TerrainDrawer {\n  constructor(\n    private renderer: GameRenderer,\n    private game: GameApi,\n    private terrainContainer: TileContainer,\n    private waterContainer: TileContainer,\n  ) {}\n\n  public drawTile(tile: Tile) {\n    let variants: string[];\n\n    if (tile.wetlands) {\n      if (tile.forest) {\n        variants = WETLANDS_FOREST_TEXTURES;\n      } else {\n        variants = WETLANDS_TEXTURES;\n      }\n    } else if (tile.forest) {\n      variants = FOREST_TEXTURES[tile.climate];\n    } else if (tile.seaLevel === SeaLevel.none) {\n      if (\n        tile.climate === Climate.desert &&\n        tile.landForm === LandForm.plains &&\n        tile.riverParts.length\n      ) {\n        variants = DESERT_FLOOD_PLAINS_TEXTURES;\n      } else {\n        variants = CLIMATE_TEXTURES[tile.climate][tile.landForm];\n      }\n    } else {\n      variants = SEA_TEXTURES[tile.seaLevel];\n    }\n\n    const textureName = pickRandom(variants);\n    const sprite = drawTileSprite(tile, this.textures[textureName]);\n\n    if (tile.seaLevel === SeaLevel.none) {\n      this.terrainContainer.addChild(sprite, tile);\n    } else {\n      this.waterContainer.addChild(sprite, tile);\n    }\n\n    const isVisible = this.game.state!.trackedPlayer.exploredTiles.has(tile);\n\n    if (!isVisible) {\n      sprite.visible = false;\n    }\n\n    const road = this.drawRoads(tile);\n    if (road && !isVisible) {\n      road.visible = false;\n    }\n\n    const improvement = this.drawImprovement(tile);\n    if (improvement && !isVisible) {\n      improvement.visible = false;\n    }\n  }\n\n  private drawImprovement(tile: Tile) {\n    let sprite: PIXI.Sprite | null = null;\n    if (tile.improvement === TileImprovement.farm) {\n      const textureName = pickRandom(FARM_TEXTURES);\n      sprite = drawTileSpriteCentered(tile, this.textures[textureName]);\n      this.terrainContainer.addChild(sprite, tile);\n    } else if (tile.improvement === TileImprovement.mine) {\n      const textureName = pickRandom(MINE_TEXTURES);\n      sprite = drawTileSpriteCentered(tile, this.textures[textureName]);\n      this.terrainContainer.addChild(sprite, tile);\n    } else if (tile.improvement === TileImprovement.sawmill) {\n      const textureName = pickRandom(SAWMILL_TEXTURES);\n      sprite = drawTileSpriteCentered(tile, this.textures[textureName]);\n      this.terrainContainer.addChild(sprite, tile);\n    }\n\n    return sprite;\n  }\n\n  private drawRoads(tile: Tile) {\n    if (tile.road === null) {\n      return null;\n    }\n\n    const roadId = tile.fullNeighbours\n      .map((n) => (!n || n.road === null ? \"0\" : \"1\"))\n      .join(\"\");\n\n    const textureName = `hexRoad-${roadId}-00.png`;\n    const sprite = drawTileSprite(tile, this.textures[textureName]);\n    this.terrainContainer.addChild(sprite, tile);\n    return sprite;\n  }\n\n  clearTile(tile: Tile) {\n    this.waterContainer.clearTile(tile);\n    this.terrainContainer.clearTile(tile);\n  }\n\n  clear() {\n    this.waterContainer.destroyAllChildren();\n    this.terrainContainer.destroyAllChildren();\n  }\n\n  protected get textures() {\n    return this.renderer.textures;\n  }\n}\n","import * as PIXI from \"pixi.js\";\n\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { drawTileSpriteCentered, putSpriteAtTileCentered } from \"../utils\";\nimport { TileContainer } from \"../tile-container\";\nimport { GameApi } from \"src/app/api\";\nimport { Unit } from \"src/app/api/unit\";\nimport { GameRenderer } from \"../renderer\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\nexport class UnitsDrawer {\n  unitGraphics = new Map<Unit, PIXI.Sprite[]>();\n\n  constructor(\n    private game: GameApi,\n    private renderer: GameRenderer,\n    private container: TileContainer,\n  ) {\n    game.init$.subscribe((state) => {\n      state.unitSpawned$\n        .pipe(takeUntil(game.stop$))\n        .subscribe((unit) => this.spawn(unit));\n\n      state.unitUpdated$\n        .pipe(takeUntil(game.stop$))\n        .subscribe((unit) => this.update(unit));\n\n      state.unitDestroyed$\n        .pipe(takeUntil(game.stop$))\n        .subscribe((unit) => this.destroy(unit));\n    });\n  }\n\n  build() {\n    if (!this.game.state) {\n      return;\n    }\n\n    for (const unit of this.game.state.units) {\n      this.spawn(unit);\n    }\n  }\n\n  spawn(unit: Unit) {\n    const backgroundTextureName = `unitBackground-${unit.definition.type}.png`;\n    const backgroundTexture = this.textures[backgroundTextureName];\n\n    const unitTextureName = `unit-${unit.definition.id}.png`;\n    const unitTexture = this.textures[unitTextureName];\n\n    const objects: PIXI.Sprite[] = [];\n\n    const backgroundSprite = drawTileSpriteCentered(\n      unit.tile,\n      backgroundTexture,\n    );\n\n    // TODO don't need set position here as layoutTile will do it.\n    this.container.addChild(backgroundSprite, unit.tile);\n    objects.push(backgroundSprite);\n    backgroundSprite.tint = unit.player.color;\n\n    const unitSprite = drawTileSpriteCentered(unit.tile, unitTexture);\n    this.container.addChild(unitSprite, unit.tile);\n    objects.push(unitSprite);\n\n    this.unitGraphics.set(unit, objects);\n\n    this.layoutTile(unit.tile);\n\n    backgroundSprite.interactive = true;\n\n    backgroundSprite.on(\"pointerdown\", (event) => {\n      if (event.data.button === 0) {\n        this.renderer.mapUi.selectUnit(unit);\n      }\n    });\n  }\n\n  destroy(unit: Unit) {\n    const objs = this.unitGraphics.get(unit);\n    if (!objs) {\n      return;\n    }\n\n    this.unitGraphics.delete(unit);\n\n    for (const obj of objs) {\n      obj.destroy();\n    }\n  }\n\n  update(unit: Unit) {\n    const objs = this.unitGraphics.get(unit)!;\n    if (!objs) {\n      return;\n    }\n\n    const oldTile = this.container.childrenMap.get(objs[0]);\n    if (oldTile && oldTile.units.length) {\n      this.layoutTile(oldTile);\n    }\n\n    this.layoutTile(unit.tile);\n  }\n\n  layoutTile(tile: Tile) {\n    const isVisible = this.game.state!.trackedPlayer.exploredTiles.has(tile);\n\n    let x = 1 / (tile.units.length + 1) - 0.5;\n    const xOffset = 1 / (tile.units.length + 1);\n\n    for (const unit of tile.units) {\n      const sprites = this.unitGraphics.get(unit);\n      if (!sprites) {\n        // the sprites may not be created yet.\n        continue;\n      }\n\n      for (const sprite of sprites) {\n        putSpriteAtTileCentered(unit.tile, sprite);\n        sprite.position.x += x;\n        if (\n          unit.id === this.renderer.mapUi.selectedUnit?.id &&\n          tile.units.length > 1\n        ) {\n          sprite.position.y -= 0.1;\n        }\n\n        this.container.moveChild(sprite, unit.tile);\n        sprite.visible = isVisible;\n      }\n\n      x += xOffset;\n    }\n  }\n\n  clear() {\n    this.container.destroyAllChildren();\n    this.unitGraphics.clear();\n  }\n\n  protected get textures() {\n    return this.renderer.textures;\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { TileContainer } from \"../tile-container\";\nimport { MapUi } from \"src/app/ui/map-ui\";\nimport { Tile } from \"src/app/api/tile.interface\";\nimport { GameApi } from \"src/app/api\";\n\nexport class YiedsDrawer {\n  constructor(\n    private game: GameApi,\n    private mapUi: MapUi,\n    private container: TileContainer,\n  ) {\n    this.mapUi.yieldsVisible$.subscribe(\n      (visible) => (this.container.visible = visible),\n    );\n  }\n\n  clearTile(tile: Tile) {\n    this.container.clearTile(tile);\n  }\n\n  drawTile(tile: Tile) {\n    const g = new PIXIE.Graphics();\n\n    g.position.x = tile.x + (tile.y % 2 ? 0.5 : 0) + 0.025;\n    g.position.y = tile.y * 0.75;\n\n    this.drawYield(g, 0.55, tile.yields.food, 0x00ff00);\n    this.drawYield(g, 0.65, tile.yields.production, 0xffaa00);\n\n    this.container.addChild(g, tile);\n\n    if (!this.game.state!.trackedPlayer.exploredTiles.has(tile)) {\n      g.visible = false;\n    }\n  }\n\n  private drawYield(\n    g: PIXIE.Graphics,\n    y: number,\n    quantity: number,\n    color: number,\n  ) {\n    g.beginFill(color);\n    for (let i = 0; i < quantity; i++) {\n      const x = 0.5 - (quantity / 2) * 0.1 + 0.1 * i;\n      g.drawRect(x, y, 0.05, 0.05);\n    }\n    g.endFill();\n  }\n\n  clear() {\n    this.container.destroyAllChildren();\n  }\n}\n","import * as PIXI from \"pixi.js\";\n\nimport { TILE_SIZE } from \"./constants\";\nimport { Tile } from \"../api/tile.interface\";\n\n// prettier-ignore\nexport const HEX_GEOMETRY = new PIXI.Geometry().addAttribute(\"aVertexPosition\", [\n  0, 0.25, 0.5, 0, 1, 0.25,\n  0, 0.25, 1, 0.25, 1, 0.75,\n  0, 0.25, 1, 0.75, 0, 0.75,\n  0, 0.75, 1, 0.75, 0.5, 1,\n], 2)\n\nexport function getTileCenter(tile: Tile): [number, number] {\n  return [0.5 + tile.x + (tile.y % 2 ? 0.5 : 0), tile.y * 0.75 + 0.5];\n}\n\nexport function getTileCoords(tile: Tile): [number, number] {\n  return [tile.x + (tile.y % 2 ? 0.5 : 0), tile.y * 0.75];\n}\n\nexport function drawHex(graphics: PIXI.Graphics, x = 0, y = 0) {\n  graphics.moveTo(x + 0, y + 0.25);\n  graphics.lineTo(x + 0.5, y + 0);\n  graphics.lineTo(x + 1, y + 0.25);\n  graphics.lineTo(x + 1, y + 0.75);\n  graphics.lineTo(x + 0.5, y + 1);\n  graphics.lineTo(x + 0, y + 0.75);\n}\n\nexport function drawClosedHex(graphics: PIXI.Graphics) {\n  drawHex(graphics);\n  graphics.lineTo(0, 0.25);\n}\n\nexport function clearContainer(container: PIXI.Container) {\n  while (container.children.length) {\n    container.removeChildAt(0).destroy();\n  }\n}\n\nexport function getTileVariants(tileName: string, variants: number): string[] {\n  const result: string[] = [];\n  for (let i = 0; i < variants; i++) {\n    result.push(`${tileName}${i.toString().padStart(2, \"0\")}.png`);\n  }\n  return result;\n}\n\nexport function drawTileSprite(tile: Tile, texture: PIXI.Texture) {\n  const sprite = new PIXI.Sprite(texture);\n  sprite.scale.set(1 / TILE_SIZE, 1 / TILE_SIZE);\n  putContainerAtTile(tile, sprite);\n  return sprite;\n}\n\nexport function drawTileSpriteCentered(tile: Tile, texture: PIXI.Texture) {\n  const sprite = new PIXI.Sprite(texture);\n  sprite.scale.set(1 / TILE_SIZE, 1 / TILE_SIZE);\n  putSpriteAtTileCentered(tile, sprite);\n  return sprite;\n}\n\nexport function putContainerAtTile(tile: Tile, container: PIXI.Container) {\n  container.position.x = tile.x + (tile.y % 2 ? 0.5 : 0);\n  container.position.y = tile.y * 0.75 - 0.5;\n}\n\nexport function putSpriteAtTileCentered(tile: Tile, sprite: PIXI.Sprite) {\n  sprite.position.x = tile.x + (tile.y % 2 ? 0.5 : 0) + 0.5 - sprite.width / 2;\n  sprite.position.y = tile.y * 0.75 + 0.5 - sprite.height / 2;\n}\n\nexport function pickRandom(items: any[]) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n","import { TileDirection } from \"../shared\";\nimport { BaseTile } from \"./tile.interface\";\n\nexport function getTileFullNeighbours<T extends BaseTile>(\n  tiles: T[][],\n  x: number,\n  y: number,\n): (T | null)[] {\n  return [\n    getTileInDirection(tiles, tiles[x][y], TileDirection.NW),\n    getTileInDirection(tiles, tiles[x][y], TileDirection.NE),\n    getTileInDirection(tiles, tiles[x][y], TileDirection.E),\n    getTileInDirection(tiles, tiles[x][y], TileDirection.SE),\n    getTileInDirection(tiles, tiles[x][y], TileDirection.SW),\n    getTileInDirection(tiles, tiles[x][y], TileDirection.W),\n  ];\n}\n\nexport function getTileNeighbours<T extends BaseTile>(\n  tiles: T[][],\n  x: number,\n  y: number,\n): T[] {\n  return getTileFullNeighbours(tiles, x, y).filter((t) => !!t) as T[];\n}\n\nexport function getTileInDirection<T extends BaseTile>(\n  tiles: T[][],\n  tile: T,\n  direction: TileDirection,\n): T | null {\n  switch (direction) {\n    case TileDirection.NW:\n      if ((tile.y % 2 === 0 && tile.x === 0) || tile.y === 0) {\n        return null;\n      }\n      return tiles[tile.x - (tile.y % 2 ? 0 : 1)][tile.y - 1];\n\n    case TileDirection.NE:\n      if ((tile.y % 2 && tile.x === tiles.length - 1) || tile.y === 0) {\n        return null;\n      }\n      return tiles[tile.x + (tile.y % 2 ? 1 : 0)][tile.y - 1];\n\n    case TileDirection.E:\n      if (tile.x === tiles.length - 1) {\n        return null;\n      }\n      return tiles[tile.x + 1][tile.y];\n\n    case TileDirection.SE:\n      if (\n        (tile.y % 2 && tile.x === tiles.length - 1) ||\n        tile.y === tiles[tile.x].length - 1\n      ) {\n        return null;\n      }\n      return tiles[tile.x + (tile.y % 2 ? 1 : 0)][tile.y + 1];\n\n    case TileDirection.SW:\n      if (\n        (tile.y % 2 === 0 && tile.x === 0) ||\n        tile.y === tiles[tile.x].length - 1\n      ) {\n        return null;\n      }\n      return tiles[tile.x - (tile.y % 2 ? 0 : 1)][tile.y + 1];\n\n    case TileDirection.W:\n      if (tile.x === 0) {\n        return null;\n      }\n      return tiles[tile.x - 1][tile.y];\n  }\n  return null;\n}\n\nexport function getDirectionTo(\n  fromtile: BaseTile,\n  toTile: BaseTile,\n): TileDirection {\n  if (\n    toTile.x === fromtile.x - (fromtile.y % 2 ? 0 : 1) &&\n    toTile.y === fromtile.y - 1\n  ) {\n    return TileDirection.NW;\n  }\n  if (\n    toTile.x === fromtile.x + (fromtile.y % 2 ? 1 : 0) &&\n    toTile.y === fromtile.y - 1\n  ) {\n    return TileDirection.NE;\n  }\n  if (toTile.x === fromtile.x + 1 && toTile.y === fromtile.y) {\n    return TileDirection.E;\n  }\n  if (\n    toTile.x === fromtile.x + (fromtile.y % 2 ? 1 : 0) &&\n    toTile.y === fromtile.y + 1\n  ) {\n    return TileDirection.SE;\n  }\n  if (\n    toTile.x === fromtile.x - (fromtile.y % 2 ? 0 : 1) &&\n    toTile.y === fromtile.y + 1\n  ) {\n    return TileDirection.SW;\n  }\n  if (toTile.x === fromtile.x - 1 && toTile.y === fromtile.y) {\n    return TileDirection.W;\n  }\n  return TileDirection.NONE;\n}\n\nexport function getTilesInRange(tile: BaseTile, range: number): Set<BaseTile> {\n  const result = new Set<BaseTile>([tile]);\n  for (let i = 0; i < range; i++) {\n    let neighbours = new Set<BaseTile>();\n    for (const tile of result) {\n      for (const neighbour of (tile as any).neighbours) {\n        // TODO fix typing\n        neighbours.add(neighbour);\n      }\n    }\n    for (const tile of neighbours) {\n      result.add(tile);\n    }\n  }\n  return result;\n}\n","import { Yields } from \"../core/yields\";\n\nexport * from \"./tile.interface\";\n\nexport interface PlayerTask {\n  task: \"city\" | \"unit\";\n  id: number;\n}\n\nexport interface PlayerYields {\n  perTurn: Yields;\n  income: Yields;\n  total: Yields;\n  costs: Yields;\n}\n","import { TileImprovement, TileRoad } from \"../core/tile-improvements\";\nimport { Yields } from \"../core/yields\";\n\nexport enum TileDirection {\n  NW,\n  NE,\n  E,\n  SE,\n  SW,\n  W,\n  NONE,\n}\n\nexport enum Climate {\n  tropical,\n  savanna,\n  desert,\n  continental,\n  oceanic,\n  tundra,\n  arctic,\n}\n\nexport enum LandForm {\n  plains,\n  hills,\n  mountains,\n}\n\nexport enum SeaLevel {\n  none,\n  shallow,\n  deep,\n}\n\nexport interface BaseTile {\n  id: number;\n\n  x: number;\n  y: number;\n\n  climate: Climate;\n  landForm: LandForm;\n  seaLevel: SeaLevel;\n  riverParts: TileDirection[];\n  forest: boolean;\n  wetlands: boolean;\n  improvement: TileImprovement | null;\n  road: TileRoad | null;\n\n  yields: Yields;\n}\n\nexport const FORESTABLE_CLIMATES = new Set<Climate>([\n  Climate.continental,\n  Climate.oceanic,\n  Climate.tropical,\n  Climate.tundra,\n]);\n\nexport const WETLANDS_CLIMATES = new Set<Climate>([\n  Climate.continental,\n  Climate.oceanic,\n  Climate.tropical,\n]);\n\nexport function isForestable(tile: BaseTile): boolean {\n  return (\n    tile.seaLevel === SeaLevel.none &&\n    tile.landForm === LandForm.plains &&\n    FORESTABLE_CLIMATES.has(tile.climate)\n  );\n}\n\nexport function areWetlandsPossible(tile: BaseTile): boolean {\n  return !!(\n    tile.seaLevel === SeaLevel.none &&\n    tile.landForm === LandForm.plains &&\n    tile.riverParts.length &&\n    WETLANDS_CLIMATES.has(tile.climate)\n  );\n}\n\nexport function isImprovementPossible(\n  tile: BaseTile,\n  improvement: TileImprovement | null,\n): boolean {\n  if (improvement === null) {\n    return true;\n  } else if (improvement === TileImprovement.farm) {\n    return (\n      tile.seaLevel === SeaLevel.none &&\n      tile.landForm === LandForm.plains &&\n      tile.climate !== Climate.arctic &&\n      !tile.forest &&\n      !tile.wetlands\n    );\n  } else if (improvement === TileImprovement.mine) {\n    return tile.landForm === LandForm.hills;\n  } else if (improvement === TileImprovement.sawmill) {\n    return tile.forest && !tile.wetlands;\n  } else {\n    return false;\n  }\n}\n\nexport function isRoadPossible(tile: BaseTile) {\n  return (\n    tile.seaLevel === SeaLevel.none && tile.landForm !== LandForm.mountains\n  );\n}\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { Bonuses } from \"src/app/core/bonus\";\n\n@Component({\n  selector: \"app-bonuses\",\n  templateUrl: \"./bonuses.component.html\",\n  styleUrls: [\"./bonuses.component.scss\"],\n})\nexport class BonusesComponent implements OnInit {\n  @Input() bonuses: Bonuses;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"growth-color\" *ngIf=\"bonuses?.yieldValue?.food as food\">\n  + {{ food }} food\n</div>\n\n<div\n  class=\"production-color\"\n  *ngIf=\"bonuses?.yieldValue?.production as production\"\n>\n  + {{ production }} production\n</div>\n\n<div class=\"culture-color\" *ngIf=\"bonuses?.yieldValue?.culture as culture\">\n  + {{ culture }} culture\n</div>\n\n<div\n  class=\"public-works-color\"\n  *ngIf=\"bonuses?.yieldValue?.publicWorks as publicWorks\"\n>\n  + {{ publicWorks }} public works\n</div>\n\n<div class=\"growth-color\" *ngIf=\"bonuses?.yieldFactor?.food as food\">\n  + {{ food | percentBonus }} food\n</div>\n\n<div\n  class=\"production-color\"\n  *ngIf=\"bonuses?.yieldFactor?.production as production\"\n>\n  + {{ production | percentBonus }} production\n</div>\n\n<div class=\"culture-color\" *ngIf=\"bonuses?.yieldFactor?.culture as culture\">\n  + {{ culture | percentBonus }} culture\n</div>\n\n<div\n  class=\"public-works-color\"\n  *ngIf=\"bonuses?.yieldFactor?.publicWorks as publicWorks\"\n>\n  + {{ publicWorks | percentBonus }} public works\n</div>\n\n<div class=\"growth-color\" *ngIf=\"bonuses?.transferProductionToFood as transfer\">\n  {{ transfer | percentBonus }} production transfered into food\n</div>\n\n<div\n  class=\"culture-color\"\n  *ngIf=\"bonuses?.transferProductionToCulture as transfer\"\n>\n  {{ transfer | percentBonus }} production transfered into culture\n</div>\n\n<div\n  class=\"public-works-color\"\n  *ngIf=\"bonuses?.transferProductionToPublicWorks as transfer\"\n>\n  {{ transfer | percentBonus }} production transfered into public works\n</div>\n","import { Directive, HostListener, ElementRef } from \"@angular/core\";\n\n@Directive({\n  selector: \"button\",\n})\nexport class ButtonDirective {\n  constructor(private elementRef: ElementRef<HTMLButtonElement>) {}\n\n  @HostListener(\"click\")\n  onClick() {\n    // Prevents clicking focused button when pressing \"enter\" for next turn.\n    this.elementRef.nativeElement.blur();\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChildren,\n  AfterViewInit,\n  ElementRef,\n} from \"@angular/core\";\n\nimport { Subject, merge } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { Camera } from \"src/app/renderer/camera\";\nimport { GameApi } from \"src/app/api\";\nimport { City } from \"src/app/api/city\";\nimport { CityInfoComponent } from \"./city-info/city-info.component\";\nimport { getTileCoords } from \"src/app/renderer/utils\";\n\n@Component({\n  selector: \"app-cities-layer\",\n  templateUrl: \"./cities-layer.component.html\",\n  styleUrls: [\"./cities-layer.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CitiesLayerComponent implements OnInit, AfterViewInit {\n  ngUnsubscribe = new Subject<void>();\n\n  @ViewChildren(CityInfoComponent) citiesComponents: CityInfoComponent[];\n\n  cities: City[];\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private elementRef: ElementRef<HTMLElement>,\n    private game: GameApi,\n    private camera: Camera,\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.game.state) {\n      return;\n    }\n\n    merge(this.game.state.citySpawned$, this.game.state.cityDestroyed$)\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(() => {\n        this.updateCities();\n      });\n\n    this.game.stop$.subscribe(() => {\n      this.cities = [];\n      this.cdr.markForCheck();\n    });\n\n    this.updateCities();\n  }\n\n  ngAfterViewInit() {\n    this.camera.transform$\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(() => this.updateTransforms());\n  }\n\n  updateTransforms() {\n    const el = this.elementRef.nativeElement;\n    let scale = this.camera.transform.scale;\n    const box = this.camera.tileBoundingBox;\n\n    let opacity = 1;\n    if (scale < 30) {\n      opacity = Math.max(0, 1 - (30 - scale) / 8);\n    }\n    el.style.opacity = opacity.toString();\n\n    if (opacity === 0) {\n      return;\n    }\n\n    for (const cityComponent of this.citiesComponents) {\n      const tile = cityComponent.city.tile;\n      const cityEl = cityComponent.elementRef.nativeElement;\n      if (\n        tile.x >= box.xStart &&\n        tile.x <= box.xEnd &&\n        tile.y >= box.yStart &&\n        tile.y <= box.yEnd\n      ) {\n        cityEl.style.display = \"flex\";\n      } else {\n        cityEl.style.display = \"none\";\n        continue;\n      }\n\n      const cityScale = Math.pow(scale / 70, 0.4);\n      let [x, y] = getTileCoords(cityComponent.city.tile);\n      [x, y] = this.camera.canvasToScreen(x + 0.5, y + 0.8);\n      cityEl.style.transform = `translate(${x}px, ${y}px) scale(${cityScale})`;\n    }\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  updateCities() {\n    const player = this.game.state!.trackedPlayer;\n    this.cities = this.game.state!.cities.filter((city) =>\n      player.exploredTiles.has(city.tile),\n    );\n    this.cdr.markForCheck();\n\n    setTimeout(() => this.updateTransforms());\n  }\n\n  trackByCityId(index: number, city: City) {\n    return city.id;\n  }\n}\n","<app-city-info\n  *ngFor=\"let city of cities; trackBy: trackByCityId\"\n  [city]=\"city\"\n></app-city-info>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  ChangeDetectorRef,\n  OnDestroy,\n  ElementRef,\n} from \"@angular/core\";\n\nimport { Subject, merge } from \"rxjs\";\nimport { filter, takeUntil } from \"rxjs/operators\";\n\nimport { Controls } from \"src/app/controls\";\nimport { MapUi } from \"../../map-ui\";\nimport { GameApi } from \"src/app/api\";\nimport { City } from \"src/app/api/city\";\n\n@Component({\n  selector: \"app-city-info\",\n  templateUrl: \"./city-info.component.html\",\n  styleUrls: [\"./city-info.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CityInfoComponent implements OnInit, OnDestroy {\n  private _city: City;\n\n  ngUnsubscribe = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    public elementRef: ElementRef<HTMLElement>,\n    private game: GameApi,\n    public controls: Controls,\n    private mapUi: MapUi,\n  ) {}\n\n  ngOnInit(): void {\n    const el = this.elementRef.nativeElement;\n\n    const thisCity = this.game.state!.cityUpdated$.pipe(\n      filter((c) => c.id === this.city.id),\n    );\n\n    merge(this.game.state!.turn$, thisCity)\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(() => {\n        el.style.setProperty(\"--player-color\", this.city.player.cssColor);\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  @Input() set city(city: City) {\n    this._city = city;\n  }\n  get city() {\n    return this._city;\n  }\n\n  selectCity() {\n    this.mapUi.selectCity(this.city);\n  }\n\n  onContextMenu(event: Event) {\n    event.preventDefault();\n  }\n\n  get areDetailsVisible() {\n    return this.city.player.id === this.game.state!.trackedPlayer.id;\n  }\n}\n","<div\n  class=\"info\"\n  (click)=\"selectCity()\"\n  (click)=\"controls.onClick($event)\"\n  (mousedown)=\"controls.onMouseDown($event)\"\n  (mouseup)=\"controls.onMouseUp($event)\"\n  (mousemove)=\"controls.onMouseMove($event)\"\n  (wheel)=\"controls.onWheel($event)\"\n  (contextmenu)=\"onContextMenu($event)\"\n>\n  <div class=\"size\">{{ city.size }}</div>\n  <div *ngIf=\"areDetailsVisible; else simpleViewTmpl\">\n    <app-progress-bar\n      class=\"growth\"\n      [progress]=\"city.totalFood\"\n      [nextProgress]=\"city.totalFood + city.foodPerTurn\"\n      [total]=\"city.foodToGrow\"\n    >\n      <span>{{ city.name }}</span>\n      <span class=\"turns\">({{ city.turnsToGrow | turns }})</span>\n    </app-progress-bar>\n\n    <app-progress-bar\n      class=\"production\"\n      [progress]=\"city.totalProduction\"\n      [nextProgress]=\"city.totalProduction + city.productionPerTurn\"\n      [total]=\"city.productionRequired || 0\"\n    >\n      <span>\n        {{ city.productName }}\n      </span>\n      <span class=\"turns\">({{ city.turnsToProductionEnd | turns }})</span>\n    </app-progress-bar>\n  </div>\n</div>\n\n<ng-template #simpleViewTmpl>\n  <div class=\"simple-view\">{{ city.name }}</div>\n</ng-template>\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { Building } from \"src/app/core/buildings\";\nimport { UnitDefinition } from \"src/app/core/unit.interface\";\nimport { IdleProduct } from \"src/app/core/idle-product\";\nimport { MapUi } from \"../map-ui\";\nimport { Camera } from \"src/app/renderer/camera\";\nimport { CityDetails } from \"src/app/api/city-details\";\nimport { WorkTilesComponent } from \"./work-tiles/work-tiles.component\";\n\n@Component({\n  selector: \"app-city-view\",\n  templateUrl: \"./city-view.component.html\",\n  styleUrls: [\"./city-view.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CityViewComponent implements OnInit {\n  @ViewChild(\"workTiles\") workTilesComponent: WorkTilesComponent;\n\n  private quit$ = new Subject<void>();\n\n  private _city: CityDetails;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private camera: Camera,\n    private mapUi: MapUi,\n  ) {}\n\n  ngOnInit(): void {\n    this.mapUi.hoverCity(this.city.citySimple);\n  }\n\n  @Input() set city(city: CityDetails) {\n    this._city = city;\n\n    this.camera.moveToTileWithEasing(this.city.tile);\n    const [x, y] = this.camera.canvasToScreen(\n      this.city.tile.x,\n      this.city.tile.y,\n    );\n    this.camera.scaleToWithEasing(130, x, y);\n\n    this.mapUi.clickedTile$.pipe(takeUntil(this.quit$)).subscribe((tile) => {\n      if (!this.city.tiles.has(tile)) {\n        this.quit();\n      }\n    });\n  }\n\n  async produceBuilding(building: Building) {\n    await this.city.produceBuilding(building);\n    this.cdr.markForCheck();\n  }\n\n  async produceUnit(unit: UnitDefinition) {\n    await this.city.produceUnit(unit);\n    this.cdr.markForCheck();\n  }\n\n  async workOnIdleProduct(idleProduct: IdleProduct) {\n    await this.city.workOnIdleProduct(idleProduct);\n    this.cdr.markForCheck();\n  }\n\n  async optimizeYields() {\n    await this.city.optimizeYields();\n    this.workTilesComponent.updateWorkedTilesArea();\n    this.cdr.markForCheck();\n  }\n\n  get city() {\n    return this._city;\n  }\n\n  quit() {\n    this.mapUi.selectCity(null);\n    this.mapUi.unhoverCity();\n    this.quit$.next();\n  }\n}\n","<div class=\"panel panel-bottom-right-corner left\">\n  <div class=\"size-and-growth margin\">\n    <span class=\"size\">{{ city.size }}</span>\n\n    <app-progress-bar\n      class=\"growth-bar\"\n      [progress]=\"city.totalFood\"\n      [nextProgress]=\"city.totalFood + city.perTurn.food\"\n      [total]=\"city.foodToGrow\"\n    >\n      <span class=\"turns\" *ngIf=\"city.perTurn.food > 0\"\n        >will grow in {{ city.turnsToGrow | turns }} turns</span\n      >\n      <span class=\"turns\" *ngIf=\"city.perTurn.food < 0\"\n        >will shrink in {{ -city.turnsToGrow | turns }} turns</span\n      >\n      <span class=\"turns\" *ngIf=\"city.perTurn.food === 0\">growth stalled</span>\n    </app-progress-bar>\n  </div>\n\n  <h3>Yields</h3>\n\n  <div class=\"margin-h\">\n    <div class=\"yield growth-color\">\n      <div class=\"label\">Food</div>\n      <div class=\"value\">\n        {{ city.yields.food }} - {{ city.foodConsumed }} =\n        {{ city.perTurn.food }}\n      </div>\n    </div>\n    <div class=\"yield production-color\">\n      <div class=\"label\">Production</div>\n      <div class=\"value\">{{ city.perTurn.production }}</div>\n    </div>\n    <div class=\"yield culture-color\">\n      <div class=\"label\">Culture</div>\n      <div class=\"value\">{{ city.perTurn.culture }}</div>\n    </div>\n    <div class=\"yield public-works-color\">\n      <div class=\"label\">Public works</div>\n      <div class=\"value\">{{ city.perTurn.publicWorks }}</div>\n    </div>\n  </div>\n\n  <button class=\"margin-h margin-top\" (click)=\"optimizeYields()\">\n    Optimize yields\n  </button>\n\n  <div class=\"separator\"></div>\n\n  <h3>Expansion</h3>\n\n  <app-progress-bar\n    class=\"culture-bar margin\"\n    [progress]=\"city.totalCulture\"\n    [nextProgress]=\"city.totalCulture + city.perTurn.culture\"\n    [total]=\"city.cultureToExpand\"\n  >\n    <span class=\"turns\">\n      borders will expand in {{ city.turnsToExpand | turns }} turns\n    </span>\n  </app-progress-bar>\n\n  <div class=\"separator\"></div>\n\n  <h3>Production</h3>\n\n  <app-progress-bar\n    class=\"production-bar margin\"\n    *ngIf=\"city.product\"\n    [appTooltip]=\"buildingTooltipTmpl\"\n    [tooltipContext]=\"{ building: city.product.productDefinition }\"\n    [progress]=\"city.totalProduction\"\n    [nextProgress]=\"city.totalProduction + city.perTurn.production\"\n    [total]=\"city.product?.productDefinition.productionCost\"\n  >\n    <div>\n      <span class=\"name\">\n        {{ city.product?.productDefinition.name || \"-\" }}\n      </span>\n      <span class=\"turns\" *ngIf=\"city.product\">\n        {{ city.turnsToProductionEnd | turns }} turns\n      </span>\n    </div>\n  </app-progress-bar>\n\n  <app-tabs class=\"grow-tabs\">\n    <app-tab class=\"no-padding\" tabTitle=\"recruit\">\n      <div\n        class=\"product\"\n        *ngFor=\"let unit of city.availableUnits\"\n        [class.disabled]=\"city.disabledUnits.has(unit)\"\n        [appTooltip]=\"unitTooltipTmpl\"\n        [tooltipContext]=\"{ unit: unit }\"\n        (click)=\"produceUnit(unit)\"\n      >\n        <span class=\"name\">\n          {{ unit.name }}\n        </span>\n        <span class=\"turns small\">\n          {{ city.getTurnsToProduce(unit) }} turns\n        </span>\n      </div>\n    </app-tab>\n\n    <app-tab class=\"no-padding\" tabTitle=\"construct\">\n      <div\n        class=\"product\"\n        *ngFor=\"let building of city.availableBuildings\"\n        [class.disabled]=\"city.disabledBuildings.has(building)\"\n        [appTooltip]=\"buildingTooltipTmpl\"\n        [tooltipContext]=\"{ building: building }\"\n        (click)=\"produceBuilding(building)\"\n      >\n        <span class=\"name\">\n          {{ building.name }}\n        </span>\n        <span class=\"turns small\">\n          {{ city.getTurnsToProduce(building) }} turns\n        </span>\n      </div>\n    </app-tab>\n\n    <app-tab class=\"no-padding\" tabTitle=\"work on\">\n      <div\n        class=\"product\"\n        *ngFor=\"let idleProduct of city.availableIdleProducts\"\n        [appTooltip]=\"idleProductTooltipTmpl\"\n        [tooltipContext]=\"{ idleProduct: idleProduct }\"\n        (click)=\"workOnIdleProduct(idleProduct)\"\n      >\n        {{ idleProduct.name }}\n      </div>\n    </app-tab>\n  </app-tabs>\n</div>\n\n<div class=\"city-name\">\n  <h2 class=\"panel\">{{ city.name }}</h2>\n  <button class=\"btn-primary\" (click)=\"quit()\">Return</button>\n</div>\n\n<div class=\"panel panel-bottom-left-corner right\">\n  <h3 class=\"margin\">Buildings</h3>\n\n  <div\n    class=\"building\"\n    *ngFor=\"let building of city.buildings\"\n    [appTooltip]=\"buildingTooltipTmpl\"\n    [tooltipContext]=\"{ building: building }\"\n  >\n    {{ building.name }}\n  </div>\n</div>\n\n<app-work-tiles\n  #workTiles\n  [city]=\"city\"\n  [workedTiles]=\"city.workedTiles\"\n></app-work-tiles>\n\n<ng-template #buildingTooltipTmpl let-building=\"building\">\n  <b>{{ building.name }}</b>\n  <app-product-requirements\n    [product]=\"building\"\n    [city]=\"city\"\n  ></app-product-requirements>\n  <app-bonuses [bonuses]=\"building.bonuses\"></app-bonuses>\n  <div>Cost: {{ building.productionCost }}</div>\n</ng-template>\n\n<ng-template #unitTooltipTmpl let-unit=\"unit\">\n  <b>{{ unit.name }}</b>\n  <app-product-requirements\n    [product]=\"unit\"\n    [city]=\"city\"\n  ></app-product-requirements>\n  <div>Cost: {{ unit.productionCost }}</div>\n</ng-template>\n\n<ng-template #idleProductTooltipTmpl let-idleProduct=\"idleProduct\">\n  <b>{{ idleProduct.name }}</b>\n  <app-bonuses [bonuses]=\"idleProduct.bonuses\"></app-bonuses>\n</ng-template>\n","import {\n  Component,\n  OnInit,\n  Input,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { takeUntil } from \"rxjs/operators\";\nimport { Subject } from \"rxjs\";\n\nimport { MapUi } from \"../../map-ui\";\nimport { Camera } from \"src/app/renderer/camera\";\nimport { CityDetails } from \"src/app/api/city-details\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\n@Component({\n  selector: \"app-work-tiles\",\n  templateUrl: \"./work-tiles.component.html\",\n  styleUrls: [\"./work-tiles.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WorkTilesComponent implements OnInit, OnDestroy {\n  @Input() city: CityDetails;\n\n  @Input() workedTiles: Set<Tile>;\n\n  private ngUnsubscribe = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private domSanitizer: DomSanitizer,\n    private camera: Camera,\n    private mapUi: MapUi,\n  ) {}\n\n  ngOnInit(): void {\n    this.mapUi.clickedTile$\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe((tile) => this.toggle(tile));\n\n    this.camera.transform$\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  async toggle(tile: Tile) {\n    if (this.workedTiles.has(tile)) {\n      await this.city.unworkTile(tile);\n    } else {\n      await this.city.workTile(tile);\n    }\n\n    if (!this.ngUnsubscribe.isStopped) {\n      this.updateWorkedTilesArea();\n      this.cdr.markForCheck();\n    }\n  }\n\n  updateWorkedTilesArea() {\n    this.mapUi.cityWorkedTilesArea.setTiles(Array.from(this.city.workedTiles));\n    this.mapUi.cityNotWorkedTilesArea.setTiles(this.city.getNotWorkedTiles());\n  }\n\n  getTransform(tile: Tile) {\n    const [x, y] = [tile.x + 0.5, tile.y + 0.1];\n    const [screenX, screenY] = this.camera.gameToScreen(x, y);\n    const scale = this.camera.transform.scale / 100;\n    return this.domSanitizer.bypassSecurityTrustStyle(\n      `translate(${screenX}px, ${screenY}px) scale(${scale})`,\n    );\n  }\n}\n","<div\n  class=\"tile\"\n  *ngFor=\"let tile of city.tiles\"\n  [class.worked]=\"city.workedTiles.has(tile)\"\n  [style.transform]=\"getTransform(tile)\"\n></div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-debug\",\n  templateUrl: \"./debug.component.html\",\n  styleUrls: [\"./debug.component.scss\"],\n})\nexport class DebugComponent implements OnInit {\n  constructor(public game: GameApi) {}\n\n  ngOnInit(): void {}\n\n  revealWorld() {\n    this.game.state!.trackedPlayer.revealWorld();\n  }\n}\n","<label>\n  <!-- <input type=\"checkbox\" [(ngModel)]=\"game.debug.revealMap\" /> -->\n  Reveal map\n  <button (click)=\"revealWorld()\">Reveal world</button>\n</label>\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { Observable } from \"rxjs\";\nimport { filter, takeUntil } from \"rxjs/operators\";\n\nimport { Game } from \"src/app/core/game\";\nimport { TileCore } from \"src/app/core/tile\";\nimport { MapUi } from \"../../map-ui\";\nimport { City } from \"src/app/api/city\";\n\n@Component({\n  selector: \"app-city-editor\",\n  templateUrl: \"./city-editor.component.html\",\n  styleUrls: [\"./city-editor.component.scss\"],\n})\nexport class CityEditorComponent implements OnInit {\n  @Input() isVisible$: Observable<boolean>;\n\n  city: City | null = null;\n\n  constructor(private game: Game, private mapUi: MapUi) {}\n\n  ngOnInit(): void {\n    const shown = this.isVisible$.pipe(filter((v) => v));\n    const hidden = this.isVisible$.pipe(filter((v) => !v));\n\n    shown.subscribe(() => {\n      this.mapUi.enableSelectingTile(true);\n      this.mapUi.selectedTile$.pipe(takeUntil(hidden)).subscribe((tile) => {\n        if (!tile) {\n          return;\n        }\n        // if (tile.city) {\n        //   this.city = tile.city;\n        // } else {\n        //   this.spawn(tile);\n        // }\n      });\n    });\n\n    hidden.subscribe(() => this.mapUi.enableSelectingTile(false));\n  }\n\n  spawn(tile: TileCore) {\n    // this.city = this.game.citiesManager.spawn(tile, this.game.players[0]);\n  }\n\n  destroy() {\n    // if (this.city) {\n    //   this.game.citiesManager.destroy(this.city);\n    //   this.city = null;\n    // }\n  }\n}\n","<button *ngIf=\"city\" (click)=\"destroy()\">Destroy</button>\n","import { Option } from \"../widgets/option.interface\";\nimport { TileImprovement, TileRoad } from \"src/app/core/tile-improvements\";\nimport { SeaLevel, LandForm, Climate, TileDirection } from \"src/app/shared\";\n\nexport const SEA_LEVEL_OPTIONS: Option[] = [\n  { label: \"none\", value: SeaLevel.none },\n  { label: \"shallow\", value: SeaLevel.shallow },\n  { label: \"deep\", value: SeaLevel.deep },\n];\n\nexport const LAND_FORM_OPTIONS: Option[] = [\n  { label: \"plains\", value: LandForm.plains },\n  { label: \"hills\", value: LandForm.hills },\n  { label: \"mountains\", value: LandForm.mountains },\n];\n\nexport const CLIMATE_OPTIONS: Option[] = [\n  { label: \"tropical\", value: Climate.tropical },\n  { label: \"savanna\", value: Climate.savanna },\n  { label: \"desert\", value: Climate.desert },\n  { label: \"continental\", value: Climate.continental },\n  { label: \"oceanic\", value: Climate.oceanic },\n  { label: \"tundra\", value: Climate.tundra },\n  { label: \"arctic\", value: Climate.arctic },\n];\n\nexport const FOREST_OPTIONS: Option[] = [\n  { label: \"no forest\", value: false },\n  { label: \"forest\", value: true },\n];\n\nexport const WETLANDS_OPTIONS: Option[] = [\n  { label: \"no wetlands\", value: false },\n  { label: \"wetlands\", value: true },\n];\n\nexport const IMPROVEMENT_OPTIONS: Option[] = [\n  { label: \"no improvement\", value: null },\n  { label: \"farm\", value: TileImprovement.farm },\n  { label: \"mine\", value: TileImprovement.mine },\n  { label: \"sawmill\", value: TileImprovement.sawmill },\n];\n\nexport const ROAD_OPTIONS: Option[] = [\n  { label: \"no road\", value: null },\n  { label: \"road\", value: TileRoad.road },\n];\n\nexport const RIVER_OPTIONS: Option[] = [\n  { label: \"NW\", value: TileDirection.NW },\n  { label: \"NE\", value: TileDirection.NE },\n  { label: \"E\", value: TileDirection.E },\n  { label: \"SE\", value: TileDirection.SE },\n  { label: \"SW\", value: TileDirection.SW },\n  { label: \"W\", value: TileDirection.W },\n];\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\n\nimport { UIState } from \"../ui-state\";\nimport { MapUi } from \"../map-ui\";\n\n@Component({\n  selector: \"app-editor\",\n  templateUrl: \"./editor.component.html\",\n  styleUrls: [\"./editor.component.scss\"],\n})\nexport class EditorComponent implements OnInit, OnDestroy {\n  constructor(private uiState: UIState, private mapUi: MapUi) {}\n\n  ngOnInit(): void {}\n\n  ngOnDestroy() {\n    this.mapUi.editorArea.clear();\n    this.mapUi.enableSelectingTile(false);\n  }\n\n  close() {\n    this.uiState.editorEnabled$.next(false);\n  }\n}\n","<app-tabs>\n  <app-tab #tileTab tabTitle=\"Tile\"\n    ><app-tile-editor [isVisible$]=\"tileTab.isVisible$\"></app-tile-editor\n  ></app-tab>\n  <app-tab #tilePaintingTab tabTitle=\"Tile painting\"\n    ><app-tile-painting\n      [isVisible$]=\"tilePaintingTab.isVisible$\"\n    ></app-tile-painting\n  ></app-tab>\n  <app-tab #unitTab tabTitle=\"units\">\n    <app-unit-editor [isVisible$]=\"unitTab.isVisible$\"></app-unit-editor>\n  </app-tab>\n  <app-tab #cityTab tabTitle=\"cities\">\n    <app-city-editor [isVisible$]=\"cityTab.isVisible$\"></app-city-editor>\n  </app-tab>\n  <app-tab #playersTab tabTitle=\"players\">\n    <app-players-editor></app-players-editor>\n  </app-tab>\n</app-tabs>\n\n<div>\n  <button (click)=\"close()\">Close</button>\n</div>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from \"@angular/core\";\n\nimport { GameApi } from \"src/app/api\";\nimport { Player } from \"src/app/api/player\";\n\n@Component({\n  selector: \"app-players-editor\",\n  templateUrl: \"./players-editor.component.html\",\n  styleUrls: [\"./players-editor.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlayersEditorComponent implements OnInit {\n  constructor(private cdr: ChangeDetectorRef, private game: GameApi) {}\n\n  ngOnInit(): void {}\n\n  get players() {\n    return this.game.state!.players;\n  }\n\n  get trackedPlayerId() {\n    return this.game.state?.trackedPlayer.id;\n  }\n\n  async track(player: Player) {\n    await this.game.state?.setTrackedPlayer(player.id);\n    this.cdr.markForCheck();\n  }\n}\n","<ul>\n  <li\n    [class.tracked]=\"player.id === trackedPlayerId\"\n    *ngFor=\"let player of players\"\n  >\n    <span>Player {{ player.id }}</span>\n    <div class=\"color-box\" [style.backgroundColor]=\"player.cssColor\"></div>\n\n    <span class=\"tracked-text\">Tracked</span>\n    <button class=\"track-btn\" (click)=\"track(player)\">Track</button>\n  </li>\n</ul>\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { Observable } from \"rxjs\";\nimport { takeUntil, filter } from \"rxjs/operators\";\n\nimport {\n  CLIMATE_OPTIONS,\n  FOREST_OPTIONS,\n  LAND_FORM_OPTIONS,\n  RIVER_OPTIONS,\n  SEA_LEVEL_OPTIONS,\n  WETLANDS_OPTIONS,\n  IMPROVEMENT_OPTIONS,\n  ROAD_OPTIONS,\n} from \"../constants\";\nimport { OPPOSITE_DIRECTIONS } from \"src/app/map-generators/utils\";\nimport { MapUi } from \"../../map-ui\";\nimport { TileImprovement, TileRoad } from \"src/app/core/tile-improvements\";\nimport {\n  TileDirection,\n  isForestable,\n  areWetlandsPossible,\n  isImprovementPossible,\n  isRoadPossible,\n} from \"src/app/shared\";\nimport { GameApi } from \"src/app/api\";\nimport { getDirectionTo } from \"src/app/shared/hex-math\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\n@Component({\n  selector: \"app-tile-editor\",\n  templateUrl: \"./tile-editor.component.html\",\n  styleUrls: [\"./tile-editor.component.scss\"],\n})\nexport class TileEditorComponent implements OnInit {\n  @Input() isVisible$: Observable<boolean>;\n\n  tile: Tile | null = null;\n\n  SEA_LEVEL_OPTIONS = SEA_LEVEL_OPTIONS;\n  LAND_FORM_OPTIONS = LAND_FORM_OPTIONS;\n  CLIMATE_OPTIONS = CLIMATE_OPTIONS;\n  FOREST_OPTIONS = FOREST_OPTIONS;\n  RIVER_OPTIONS = RIVER_OPTIONS;\n  WETLANDS_OPTIONS = WETLANDS_OPTIONS;\n  IMPROVEMENT_OPTIONS = IMPROVEMENT_OPTIONS;\n  ROAD_OPTIONS = ROAD_OPTIONS;\n\n  constructor(private game: GameApi, private mapUi: MapUi) {}\n\n  ngOnInit(): void {\n    const shown = this.isVisible$.pipe(filter((v) => v));\n    const hidden = this.isVisible$.pipe(filter((v) => !v));\n\n    shown.subscribe(() => {\n      this.mapUi.enableSelectingTile(true);\n      this.mapUi.selectedTile$\n        .pipe(takeUntil(hidden))\n        .subscribe((tile) => (this.tile = tile));\n    });\n\n    hidden.subscribe(() => this.mapUi.enableSelectingTile(false));\n  }\n\n  update() {\n    if (this.tile) {\n      this.game.state!.updateTile(this.tile);\n    }\n  }\n\n  updateForest(forest: boolean) {\n    if (this.tile) {\n      this.tile.forest = forest && isForestable(this.tile);\n      this.update();\n    }\n  }\n\n  updateWetlands(wetlands: boolean) {\n    if (this.tile) {\n      this.tile.wetlands = wetlands && areWetlandsPossible(this.tile);\n      this.update();\n    }\n  }\n\n  updateImprovement(improvement: TileImprovement) {\n    if (this.tile) {\n      if (isImprovementPossible(this.tile, improvement)) {\n        this.tile.improvement = improvement;\n        this.update();\n      }\n    }\n  }\n\n  updateRoad(road: TileRoad) {\n    if (this.tile && isRoadPossible(this.tile)) {\n      this.tile.road = road;\n      this.update();\n      for (const neighbour of this.tile.neighbours) {\n        this.game.state!.updateTile(neighbour);\n      }\n    }\n  }\n\n  updateRiver(riverParts: TileDirection[]) {\n    if (!this.tile) {\n      return;\n    }\n\n    this.tile.riverParts = riverParts;\n    for (const neighbour of this.tile.neighbours) {\n      const dir = getDirectionTo(this.tile, neighbour);\n      const hasRiver = riverParts.includes(dir);\n      const oppositeDir = OPPOSITE_DIRECTIONS[dir];\n      const neighbourRiverParts = new Set(neighbour.riverParts);\n      if (hasRiver) {\n        neighbourRiverParts.add(oppositeDir);\n      } else {\n        neighbourRiverParts.delete(oppositeDir);\n      }\n      neighbour.riverParts = Array.from(neighbourRiverParts);\n      this.game.state!.updateTile(neighbour);\n    }\n    this.update();\n  }\n}\n","<div class=\"tile\" *ngIf=\"tile; else selectTilePromptTmpl\">\n  <div>\n    <h4>Sea level</h4>\n    <app-radio\n      [options]=\"SEA_LEVEL_OPTIONS\"\n      [value]=\"tile.seaLevel\"\n      (changed)=\"tile.seaLevel = $event; update()\"\n    ></app-radio>\n  </div>\n\n  <div>\n    <h4>Land form</h4>\n    <app-radio\n      [options]=\"LAND_FORM_OPTIONS\"\n      [value]=\"tile.landForm\"\n      (changed)=\"tile.landForm = $event; update()\"\n    ></app-radio>\n  </div>\n\n  <div>\n    <h4>Climate</h4>\n    <app-radio\n      [options]=\"CLIMATE_OPTIONS\"\n      [value]=\"tile.climate\"\n      (changed)=\"tile.climate = $event; update()\"\n    ></app-radio>\n  </div>\n\n  <div>\n    <h4>Forest</h4>\n    <app-radio\n      [options]=\"FOREST_OPTIONS\"\n      [value]=\"tile.forest\"\n      (changed)=\"updateForest($event)\"\n    ></app-radio>\n  </div>\n\n  <div>\n    <h4>Wetlands</h4>\n    <app-radio\n      [options]=\"WETLANDS_OPTIONS\"\n      [value]=\"tile.wetlands\"\n      (changed)=\"updateWetlands($event)\"\n    ></app-radio>\n  </div>\n\n  <div>\n    <h4>River</h4>\n    <app-multiselect\n      [options]=\"RIVER_OPTIONS\"\n      [value]=\"tile.riverParts\"\n      (changed)=\"updateRiver($event)\"\n    ></app-multiselect>\n  </div>\n\n  <div>\n    <h4>Improvement</h4>\n    <app-radio\n      [options]=\"IMPROVEMENT_OPTIONS\"\n      [value]=\"tile.improvement\"\n      (changed)=\"updateImprovement($event)\"\n    ></app-radio>\n  </div>\n\n  <div>\n    <h4>Road</h4>\n    <app-radio\n      [options]=\"ROAD_OPTIONS\"\n      [value]=\"tile.road\"\n      (changed)=\"updateRoad($event)\"\n    ></app-radio>\n  </div>\n</div>\n\n<ng-template #selectTilePromptTmpl>\n  Select the tile to edit.\n</ng-template>\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport {\n  CLIMATE_OPTIONS,\n  FOREST_OPTIONS,\n  LAND_FORM_OPTIONS,\n  SEA_LEVEL_OPTIONS,\n  WETLANDS_OPTIONS,\n  IMPROVEMENT_OPTIONS,\n} from \"../constants\";\nimport { Option } from \"../../widgets/option.interface\";\nimport { Observable } from \"rxjs\";\nimport { takeUntil, filter } from \"rxjs/operators\";\nimport { Controls } from \"src/app/controls\";\nimport { MapUi } from \"../../map-ui\";\nimport { TileImprovement } from \"src/app/core/tile-improvements\";\nimport {\n  Climate,\n  LandForm,\n  SeaLevel,\n  isForestable,\n  areWetlandsPossible,\n  isImprovementPossible,\n} from \"src/app/shared\";\nimport { GameApi } from \"src/app/api\";\nimport { getTilesInRange } from \"src/app/shared/hex-math\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\nconst IGNORE_OPTION: Option = { label: \"ignore\", value: undefined };\n\ninterface PaintData {\n  size: number;\n  climate: Climate | undefined;\n  forest: boolean | undefined;\n  wetlands: boolean | undefined;\n  landForm: LandForm | undefined;\n  seaLevel: SeaLevel | undefined;\n  improvement: TileImprovement | undefined;\n}\n\n@Component({\n  selector: \"app-tile-painting\",\n  templateUrl: \"./tile-painting.component.html\",\n  styleUrls: [\"./tile-painting.component.scss\"],\n})\nexport class TilePaintingComponent implements OnInit {\n  SIZE_OPTIONS: Option[] = [\n    { label: \"1x1\", value: 1 },\n    { label: \"2x2\", value: 2 },\n    { label: \"3x3\", value: 3 },\n    { label: \"5x5\", value: 5 },\n    { label: \"7x7\", value: 7 },\n    { label: \"10x10\", value: 10 },\n    { label: \"15x15\", value: 15 },\n  ];\n\n  SEA_LEVEL_OPTIONS: Option[] = [IGNORE_OPTION, ...SEA_LEVEL_OPTIONS];\n  LAND_FORM_OPTIONS: Option[] = [IGNORE_OPTION, ...LAND_FORM_OPTIONS];\n  CLIMATE_OPTIONS: Option[] = [IGNORE_OPTION, ...CLIMATE_OPTIONS];\n  FOREST_OPTIONS: Option[] = [IGNORE_OPTION, ...FOREST_OPTIONS];\n  WETLANDS_OPTIONS: Option[] = [IGNORE_OPTION, ...WETLANDS_OPTIONS];\n  IMPROVEMENT_OPTIONS: Option[] = [IGNORE_OPTION, ...IMPROVEMENT_OPTIONS];\n\n  DEFAULT_PAINT_DATA: PaintData = {\n    size: 1,\n    climate: undefined,\n    forest: undefined,\n    landForm: undefined,\n    seaLevel: undefined,\n    wetlands: undefined,\n    improvement: undefined,\n  };\n\n  @Input() isVisible$: Observable<boolean>;\n\n  paintData = { ...this.DEFAULT_PAINT_DATA };\n\n  constructor(\n    private game: GameApi,\n    private controls: Controls,\n    private mapUi: MapUi,\n  ) {}\n\n  ngOnInit(): void {\n    const shown = this.isVisible$.pipe(filter((v) => v));\n    const hidden = this.isVisible$.pipe(filter((v) => !v));\n\n    shown.subscribe(() => {\n      this.controls.mouseButton$.pipe(takeUntil(hidden)).subscribe((button) => {\n        if (button === 0) {\n          this.paint();\n        }\n      });\n\n      this.mapUi.hoveredTile$.pipe(takeUntil(hidden)).subscribe((tile) => {\n        if (tile) {\n          const tiles = getTilesInRange(tile, this.paintData.size - 1);\n          this.mapUi.editorArea.clear();\n          this.mapUi.editorArea.addTiles(Array.from(tiles as Set<Tile>));\n          if (this.controls.mouseButton === 0) {\n            this.paint();\n          }\n        } else {\n          this.mapUi.editorArea.clear();\n        }\n      });\n    });\n\n    hidden.subscribe(() => this.mapUi.editorArea.clear());\n  }\n\n  private paint() {\n    const pivotTile = this.mapUi.hoveredTile;\n    if (!pivotTile) {\n      return;\n    }\n\n    const tiles = getTilesInRange(pivotTile, this.paintData.size - 1);\n    for (const tile of tiles) {\n      if (this.paintData.seaLevel !== undefined) {\n        tile.seaLevel = this.paintData.seaLevel;\n      }\n      if (this.paintData.landForm !== undefined) {\n        tile.landForm = this.paintData.landForm;\n      }\n      if (this.paintData.climate !== undefined) {\n        tile.climate = this.paintData.climate;\n      }\n      if (this.paintData.forest !== undefined) {\n        tile.forest = this.paintData.forest;\n      }\n      if (this.paintData.wetlands !== undefined) {\n        tile.wetlands = this.paintData.wetlands;\n      }\n\n      tile.forest = tile.forest && isForestable(tile);\n      tile.wetlands = tile.wetlands && areWetlandsPossible(tile);\n\n      if (this.paintData.improvement !== undefined) {\n        if (isImprovementPossible(tile, this.paintData.improvement)) {\n          tile.improvement = this.paintData.improvement;\n        }\n      }\n    }\n    this.game.state?.updateTiles(Array.from(tiles) as Tile[]);\n  }\n\n  reset() {\n    this.paintData = { ...this.DEFAULT_PAINT_DATA };\n  }\n}\n","<div>\n  <h4>Brush size</h4>\n  <app-radio\n    [options]=\"SIZE_OPTIONS\"\n    [value]=\"paintData.size\"\n    (changed)=\"paintData.size = $event\"\n  ></app-radio>\n</div>\n\n<div>\n  <h4>Sea level</h4>\n  <app-radio\n    [options]=\"SEA_LEVEL_OPTIONS\"\n    [value]=\"paintData.seaLevel\"\n    (changed)=\"paintData.seaLevel = $event\"\n  ></app-radio>\n</div>\n\n<div>\n  <h4>Land form</h4>\n  <app-radio\n    [options]=\"LAND_FORM_OPTIONS\"\n    [value]=\"paintData.landForm\"\n    (changed)=\"paintData.landForm = $event\"\n  ></app-radio>\n</div>\n\n<div>\n  <h4>Climate</h4>\n  <app-radio\n    [options]=\"CLIMATE_OPTIONS\"\n    [value]=\"paintData.climate\"\n    (changed)=\"paintData.climate = $event\"\n  ></app-radio>\n</div>\n\n<div>\n  <h4>Forest</h4>\n  <app-radio\n    [options]=\"FOREST_OPTIONS\"\n    [value]=\"paintData.forest\"\n    (changed)=\"paintData.forest = $event\"\n  ></app-radio>\n</div>\n\n<div>\n  <h4>Wetlands</h4>\n  <app-radio\n    [options]=\"WETLANDS_OPTIONS\"\n    [value]=\"paintData.wetlands\"\n    (changed)=\"paintData.wetlands = $event\"\n  ></app-radio>\n</div>\n\n<div>\n  <h4>Improvement</h4>\n  <app-radio\n    [options]=\"IMPROVEMENT_OPTIONS\"\n    [value]=\"paintData.improvement\"\n    (changed)=\"paintData.improvement = $event\"\n  ></app-radio>\n</div>\n\n<button (click)=\"reset()\">Reset</button>\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { Observable } from \"rxjs\";\nimport { filter, takeUntil } from \"rxjs/operators\";\n\nimport { Option } from \"../../widgets/option.interface\";\nimport { UNITS_DEFINITIONS } from \"src/app/data/units\";\nimport { MapUi } from \"../../map-ui\";\nimport { UnitDetails } from \"src/app/api/unit-details\";\nimport { UnitDefinition } from \"src/app/core/unit.interface\";\nimport { GameApi } from \"src/app/api\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\n@Component({\n  selector: \"app-unit-editor\",\n  templateUrl: \"./unit-editor.component.html\",\n  styleUrls: [\"./unit-editor.component.scss\"],\n})\nexport class UnitEditorComponent implements OnInit {\n  @Input() isVisible$: Observable<boolean>;\n\n  spawnMode = false;\n\n  definition: UnitDefinition | null = null;\n\n  unit: UnitDetails | null = null;\n\n  definitionOptions: Option[] = [];\n\n  constructor(private game: GameApi, private mapUi: MapUi) {}\n\n  ngOnInit(): void {\n    this.definitionOptions = UNITS_DEFINITIONS.map((d) => {\n      return { label: d.name, value: d } as Option;\n    });\n\n    const shown = this.isVisible$.pipe(filter((v) => v));\n    const hidden = this.isVisible$.pipe(filter((v) => !v));\n\n    shown.subscribe(() => {\n      this.mapUi.enableSelectingTile(true);\n      this.mapUi.selectedTile$.pipe(takeUntil(hidden)).subscribe((tile) => {\n        if (!tile) {\n          return;\n        }\n        // if (this.spawnMode) {\n        //   this.spawn(tile);\n        // } else {\n        //   this.selectTile(tile);\n        // }\n      });\n    });\n\n    hidden.subscribe(() => this.mapUi.enableSelectingTile(false));\n  }\n\n  spawn(tile: Tile) {\n    if (!this.definition) {\n      return;\n    }\n\n    // this.game.unitsManager.spawn(\n    //   this.definition.id,\n    //   tile,\n    //   this.game.players[0],\n    // );\n  }\n\n  destroy() {\n    if (this.unit) {\n      // this.game.unitsManager.destroy(this.unit);\n    }\n  }\n\n  selectTile(tile: Tile) {\n    if (tile.units.length) {\n      // this.unit = tile.units[0];\n      // this.definition = this.unit.definition;\n    }\n  }\n}\n","<app-toggle [value]=\"spawnMode\" (changed)=\"spawnMode = $event\"\n  >Spawn mode</app-toggle\n>\n\n<app-radio\n  [options]=\"definitionOptions\"\n  [value]=\"definition\"\n  (changed)=\"definition = $event\"\n></app-radio>\n\n<button *ngIf=\"unit\" (click)=\"destroy()\">Destroy</button>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { UIState } from \"../ui-state\";\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-game-info\",\n  templateUrl: \"./game-info.component.html\",\n  styleUrls: [\"./game-info.component.scss\"],\n})\nexport class GameInfoComponent implements OnInit {\n  debugModalVisible = false;\n\n  constructor(public game: GameApi, private uiState: UIState) {}\n\n  ngOnInit(): void {}\n\n  openEditor() {\n    this.uiState.editorEnabled$.next(true);\n  }\n  openMenu() {\n    this.uiState.menuVisible$.next(true);\n  }\n}\n","<div class=\"bar\">\n  <span>turn: {{ game.state!.turn$ | async }}</span>\n  <button (click)=\"debugModalVisible = !debugModalVisible\">debug</button>\n  <button (click)=\"openEditor()\">editor</button>\n  <button (click)=\"openMenu()\">menu</button>\n</div>\n\n<app-debug *ngIf=\"debugModalVisible\"></app-debug>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MenuView } from \"./menu-view\";\nimport { UIState } from \"../ui-state\";\n\n@Component({\n  selector: \"app-game-menu\",\n  templateUrl: \"./game-menu.component.html\",\n  styleUrls: [\"./game-menu.component.scss\"],\n})\nexport class GameMenuComponent implements OnInit {\n  view: MenuView = \"main-menu-view\";\n\n  constructor(private uiState: UIState) {}\n\n  ngOnInit(): void {}\n\n  return() {\n    this.uiState.menuVisible$.next(false);\n  }\n}\n","<div class=\"panel menu\">\n  <ng-switch [ngSwitch]=\"view\">\n    <app-main-menu-view\n      *ngSwitchCase=\"'main-menu-view'\"\n      (change)=\"view = $event\"\n    ></app-main-menu-view>\n\n    <app-new-game-view\n      *ngSwitchCase=\"'new-game-view'\"\n      (return)=\"view = 'main-menu-view'\"\n    ></app-new-game-view>\n\n    <app-save-view\n      *ngSwitchCase=\"'save-view'\"\n      (return)=\"view = 'main-menu-view'\"\n    ></app-save-view>\n\n    <app-load-view\n      *ngSwitchCase=\"'load-view'\"\n      (return)=\"view = 'main-menu-view'\"\n    ></app-load-view>\n  </ng-switch>\n</div>\n","import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { UIState } from \"../../ui-state\";\nimport { SavesListComponent } from \"../saves-list/saves-list.component\";\nimport { importSave, loadGameData } from \"src/app/api/saving\";\nimport { GameApi } from \"src/app/api\";\nimport { Camera } from \"src/app/renderer/camera\";\n\n@Component({\n  selector: \"app-load-view\",\n  templateUrl: \"./load-view.component.html\",\n  styleUrls: [\"./load-view.component.scss\"],\n})\nexport class LoadViewComponent implements OnInit {\n  @Output() return = new EventEmitter<void>();\n\n  @ViewChild(SavesListComponent) savesListComponent: SavesListComponent;\n\n  saveName = \"\";\n\n  waiting = false;\n\n  constructor(\n    private game: GameApi,\n    private uiState: UIState,\n    private camera: Camera,\n  ) {}\n\n  ngOnInit(): void {}\n\n  async load() {\n    if (!this.saveName) {\n      return;\n    }\n\n    const data = loadGameData(this.saveName);\n    if (!data) {\n      return null;\n    }\n\n    this.waiting = true;\n\n    await this.game.loadGame(data);\n\n    const city = this.game.state?.trackedPlayer.cities[0];\n    if (city) {\n      this.camera.moveToTile(city.tile);\n    } else {\n      const unit = this.game.state?.trackedPlayer.units[0];\n      if (unit) {\n        this.camera.moveToTile(unit.tile);\n      }\n    }\n\n    this.uiState.menuVisible$.next(false);\n\n    this.waiting = false;\n  }\n\n  async import(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const files = target.files;\n\n    if (!files) {\n      return;\n    }\n\n    await importSave(files[0]);\n\n    this.savesListComponent.refresh();\n  }\n}\n","<input #uploader type=\"file\" (change)=\"import($event)\" />\n\n<h2>Load the game</h2>\n\n<app-saves-list\n  [selectedSave]=\"saveName\"\n  (change)=\"saveName = $event\"\n></app-saves-list>\n\n<div class=\"actions\">\n  <button (click)=\"return.next()\">Back</button>\n  <button (click)=\"uploader.click()\">Import</button>\n  <button [disabled]=\"!saveName\" (click)=\"load()\">Load</button>\n</div>\n\n<app-modal *ngIf=\"waiting\">\n  <div class=\"center\">\n    <h2>Loading map</h2>\n    <app-spinner></app-spinner>\n  </div>\n</app-modal>\n","import { Component, Output, EventEmitter } from \"@angular/core\";\n\nimport { MenuView } from \"../menu-view\";\nimport { UIState } from \"../../ui-state\";\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-main-menu-view\",\n  templateUrl: \"./main-menu-view.component.html\",\n  styleUrls: [\"./main-menu-view.component.scss\"],\n})\nexport class MainMenuViewComponent {\n  @Output() change = new EventEmitter<MenuView>();\n\n  constructor(public game: GameApi, private uiState: UIState) {}\n\n  return() {\n    this.uiState.menuVisible$.next(false);\n  }\n}\n","<div class=\"item\" (click)=\"change.next('new-game-view')\">New</div>\n<div class=\"item\" (click)=\"change.next('load-view')\">Load</div>\n\n<ng-container *ngIf=\"game.init$ | async\">\n  <div class=\"item\" (click)=\"change.next('save-view')\">Save</div>\n  <div class=\"item\" (click)=\"return()\">Return</div>\n</ng-container>\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\n\nimport { SimplexMapGenerator } from \"src/app/map-generators/simplex\";\nimport { PlayerCore, PLAYER_COLORS } from \"src/app/core/player\";\nimport { UIState } from \"../../ui-state\";\nimport { AIPlayer } from \"src/app/ai/ai-player\";\nimport { GameApi } from \"src/app/api/game\";\nimport { MapGeneratorOptions } from \"src/app/api/game.interface\";\nimport { Camera } from \"src/app/renderer/camera\";\n\n@Component({\n  selector: \"app-new-game-view\",\n  templateUrl: \"./new-game-view.component.html\",\n  styleUrls: [\"./new-game-view.component.scss\"],\n})\nexport class NewGameViewComponent implements OnInit {\n  @Output() return = new EventEmitter<void>();\n\n  width = 50;\n\n  height = 40;\n\n  uniformity = 0.5;\n\n  seaLevel = 0;\n\n  humanPlayersCount = 1;\n\n  aiPlayersCount = 5;\n\n  seed: number | null = null;\n\n  waiting = false;\n\n  constructor(\n    private game: GameApi,\n    private uiState: UIState,\n    private camera: Camera,\n  ) {}\n\n  ngOnInit(): void {}\n\n  async start() {\n    const mapOptions: MapGeneratorOptions = {\n      width: this.width,\n      height: this.height,\n      uniformity: this.uniformity,\n      seaLevel: this.seaLevel,\n      aiPlayersCount: this.aiPlayersCount,\n      humanPlayersCount: this.humanPlayersCount,\n      seed: this.seed ? this.seed?.toString() : undefined,\n    };\n\n    this.waiting = true;\n    await this.game.newGame(mapOptions);\n    this.waiting = false;\n\n    const unit = this.game.state?.trackedPlayer.units[0];\n    if (unit) {\n      this.camera.moveToTile(unit.tile);\n    }\n\n    this.uiState.menuVisible$.next(false);\n  }\n}\n","<h2>Start new game</h2>\n\n<label>\n  Width:\n  <input type=\"range\" [(ngModel)]=\"width\" min=\"10\" max=\"200\" />\n  {{ width }}\n</label>\n\n<label>\n  Height:\n  <input type=\"range\" [(ngModel)]=\"height\" min=\"10\" max=\"200\" />\n  {{ height }}\n</label>\n\n<label>\n  Sea level:\n  <input type=\"range\" [(ngModel)]=\"seaLevel\" min=\"-0.3\" max=\"0.3\" step=\"0.05\" />\n  {{ seaLevel }}\n</label>\n\n<label>\n  Uniformity:\n  <input type=\"range\" [(ngModel)]=\"uniformity\" min=\"0\" max=\"10\" step=\"0.05\" />\n  {{ uniformity }}\n</label>\n\n<label>\n  Human players count:\n  <input type=\"range\" [(ngModel)]=\"humanPlayersCount\" min=\"1\" max=\"16\" />\n  {{ humanPlayersCount }}\n</label>\n\n<label>\n  AI players count:\n  <input type=\"range\" [(ngModel)]=\"aiPlayersCount\" min=\"1\" max=\"16\" />\n  {{ aiPlayersCount }}\n</label>\n\n<label>\n  Seed:\n  <input type=\"text\" [(ngModel)]=\"seed\" />\n</label>\n\n<div class=\"actions\">\n  <button (click)=\"return.next()\">Return</button>\n  <button (click)=\"start()\">Start</button>\n</div>\n\n<app-modal *ngIf=\"waiting\">\n  <div class=\"center\">\n    <h2>Generating map</h2>\n    <app-spinner></app-spinner>\n  </div>\n</app-modal>\n","import { Component, Output, EventEmitter } from \"@angular/core\";\n\nimport { UIState } from \"../../ui-state\";\nimport { saveGameData } from \"src/app/api/saving\";\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-save-view\",\n  templateUrl: \"./save-view.component.html\",\n  styleUrls: [\"./save-view.component.scss\"],\n})\nexport class SaveViewComponent {\n  @Output() return = new EventEmitter<void>();\n\n  saveName = \"\";\n\n  constructor(private game: GameApi, private uiState: UIState) {}\n\n  async save() {\n    if (this.saveName) {\n      const data = await this.game.saveGame();\n      saveGameData(data, this.saveName);\n      this.uiState.menuVisible$.next(false);\n    }\n  }\n}\n","<h2>Save the game</h2>\n\n<app-saves-list\n  [selectedSave]=\"saveName\"\n  (change)=\"saveName = $event\"\n></app-saves-list>\n\n<label>\n  Save name:\n  <input type=\"text\" [(ngModel)]=\"saveName\" />\n</label>\n\n<div class=\"actions\">\n  <button (click)=\"return.next()\">Back</button>\n  <button [disabled]=\"!saveName\" (click)=\"save()\">Save</button>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\n\nimport { listSaveGames, deleteSaveGame, exportSave } from \"../../../api/saving\";\n\n@Component({\n  selector: \"app-saves-list\",\n  templateUrl: \"./saves-list.component.html\",\n  styleUrls: [\"./saves-list.component.scss\"],\n})\nexport class SavesListComponent implements OnInit {\n  @Input() selectedSave: string;\n\n  @Output() change = new EventEmitter<string>();\n\n  saves: string[];\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  delete(save: string) {\n    deleteSaveGame(save);\n    this.refresh();\n    if (this.selectedSave === save) {\n      this.change.next(\"\");\n    }\n  }\n\n  export(save: string) {\n    exportSave(save);\n  }\n\n  refresh() {\n    this.saves = listSaveGames();\n  }\n}\n","<div\n  class=\"save\"\n  *ngFor=\"let save of saves\"\n  [class.selected]=\"save === selectedSave\"\n  (click)=\"change.next(save)\"\n>\n  <span>{{ save }}</span>\n  <div class=\"save-actions\">\n    <button (click)=\"export(save)\">export</button>\n    <button (click)=\"delete(save)\">delete</button>\n  </div>\n</div>\n\n<div *ngIf=\"!saves.length\">\n  No saves yet\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { BehaviorSubject, Subject } from \"rxjs\";\nimport { distinctUntilChanged } from \"rxjs/operators\";\n7;\nimport { UIState } from \"./ui-state\";\nimport { Camera } from \"../renderer/camera\";\nimport { City } from \"../api/city\";\nimport { Unit } from \"../api/unit\";\nimport { GameApi } from \"../api\";\nimport { UnitDetails } from \"../api/unit-details\";\nimport { CityDetails } from \"../api/city-details\";\nimport { Area } from \"../renderer/area\";\nimport { Tile } from \"../api/tile.interface\";\n\n@Injectable()\nexport class MapUi {\n  private _hoveredTile$ = new BehaviorSubject<Tile | null>(null);\n  hoveredTile$ = this._hoveredTile$.asObservable().pipe(distinctUntilChanged());\n\n  private _clickedTile$ = new Subject<Tile>();\n  clickedTile$ = this._clickedTile$.asObservable();\n\n  private _selectedTile$ = new BehaviorSubject<Tile | null>(null);\n  selectedTile$ = this._selectedTile$.asObservable();\n\n  private _highlightedTiles$ = new BehaviorSubject<Set<Tile>>(new Set());\n  highlightedTiles$ = this._highlightedTiles$.asObservable();\n\n  private _activePath$ = new BehaviorSubject<Tile[][] | null>(null);\n  activePath$ = this._activePath$.asObservable();\n\n  private _yieldsVisible$ = new BehaviorSubject<boolean>(true);\n  yieldsVisible$ = this._yieldsVisible$.pipe(distinctUntilChanged());\n\n  private _selectedUnit$ = new BehaviorSubject<UnitDetails | null>(null);\n  selectedUnit$ = this._selectedUnit$.pipe();\n\n  private selectingTileEnabled = false;\n\n  private _cityLabelsVisible$ = new BehaviorSubject<boolean>(true);\n  cityLabelsVisible$ = this._cityLabelsVisible$.pipe(distinctUntilChanged());\n\n  allowMapPanning = true;\n\n  hoveredCity: City | null;\n\n  unitRangeArea: Area;\n\n  cityRangeArea: Area;\n  cityBordersOnlyArea: Area;\n  cityWorkedTilesArea: Area;\n  cityNotWorkedTilesArea: Area;\n\n  editorArea: Area;\n\n  constructor(\n    private game: GameApi,\n    private camera: Camera,\n    private uiState: UIState,\n  ) {\n    this.clickedTile$.subscribe((tile) => {\n      if (this.selectingTileEnabled) {\n        this._selectedTile$.next(tile);\n      } else if (tile.units.length) {\n        if (this.selectedUnit?.tile !== tile) {\n          this.selectUnit(tile.units[0]);\n        }\n      } else if (tile?.city) {\n        this.selectCity(tile.city);\n      } else {\n        this.selectUnit(null);\n        this.setPath(null);\n      }\n    });\n\n    this.hoveredTile$.subscribe((tile) => {\n      if (!this.uiState.selectedCity$.value) {\n        if (tile?.city) {\n          this.hoverCity(tile.city);\n        } else if (this.hoveredCity) {\n          this.unhoverCity();\n        }\n      }\n    });\n\n    this.game.state?.trackedPlayer$.subscribe((player) => {\n      this._selectedUnit$.next(null);\n      const tileOfInterest = player?.units[0]?.tile || player?.cities[0]?.tile;\n      if (tileOfInterest) {\n        this.camera.moveToTile(tileOfInterest);\n      }\n      this.setPath(null);\n    });\n\n    this.game.init$.subscribe(() => {\n      this.game.state!.citySpawned$.subscribe((city) => {\n        if (city.player.id === this.game.state!.trackedPlayer.id) {\n          this.selectCity(city);\n        }\n      });\n\n      this.game.state!.turn$.subscribe(() => this.setPath(null));\n\n      const areasContainer = this.camera[\"renderer\"].mapDrawer.areasContainer;\n\n      this.unitRangeArea = new Area(this.game.state!, {\n        color: 0xffffff,\n        container: areasContainer,\n        backgroundOpacity: 0.15,\n        borderShadow: 0.4,\n        borderSize: 0.0,\n        borderShadowStrength: 2,\n        visibleOnWater: true,\n      });\n\n      this.cityRangeArea = new Area(this.game.state!, {\n        color: 0xffffff,\n        container: areasContainer,\n        backgroundOpacity: 0.2,\n        borderShadow: 0.3,\n        borderSize: 0.1,\n        borderShadowStrength: 1.2,\n        visibleOnWater: false,\n      });\n\n      this.cityBordersOnlyArea = new Area(this.game.state!, {\n        color: 0xffffff,\n        container: areasContainer,\n        backgroundOpacity: 0,\n        borderShadow: 0.3,\n        borderSize: 0.1,\n        borderShadowStrength: 1.2,\n        visibleOnWater: false,\n      });\n\n      this.cityWorkedTilesArea = new Area(this.game.state!, {\n        color: 0xffa001,\n        container: areasContainer,\n        backgroundOpacity: 0.2,\n        borderShadow: 0.8,\n        borderSize: 0,\n        borderShadowStrength: 1,\n        visibleOnWater: true,\n      });\n\n      this.cityNotWorkedTilesArea = new Area(this.game.state!, {\n        color: 0xffffff,\n        container: areasContainer,\n        backgroundOpacity: 0.2,\n        borderShadow: 0.3,\n        borderSize: 0,\n        borderShadowStrength: 1.5,\n        visibleOnWater: false,\n      });\n\n      this.editorArea = new Area(this.game.state!, {\n        color: 0xffffff,\n        container: areasContainer,\n        backgroundOpacity: 0.25,\n        borderShadow: 0.5,\n        borderSize: 0.05,\n        borderShadowStrength: 1,\n        visibleOnWater: true,\n      });\n    });\n\n    this.game.stop$.subscribe(() => this.clear());\n  }\n\n  update() {\n    this._yieldsVisible$.next(this.camera.transform.scale > 40);\n  }\n\n  get hoveredTile() {\n    return this._hoveredTile$.value;\n  }\n\n  enableSelectingTile(enable: boolean) {\n    this.selectingTileEnabled = enable;\n    if (!enable) {\n      this._selectedTile$.next(null);\n    }\n  }\n\n  clickTile(tile: Tile) {\n    this._clickedTile$.next(tile);\n  }\n\n  hoverTile(tile: Tile | null) {\n    this._hoveredTile$.next(tile);\n  }\n\n  setPath(path: Tile[][] | null) {\n    this._activePath$.next(path);\n  }\n\n  selectCity(city: City | null) {\n    if (!city) {\n      this.uiState.selectedCity$.next(null);\n      this._cityLabelsVisible$.next(true);\n      this.allowMapPanning = true;\n      return;\n    }\n\n    if (city.player.id === this.game.state?.trackedPlayer.id) {\n      this.game.state.getCityDetails(city.id).then((data) => {\n        const cityDetails = new CityDetails(this.game.state!, data);\n        this.uiState.selectedCity$.next(cityDetails);\n        this._cityLabelsVisible$.next(false);\n        this.cityRangeArea.setTiles(Array.from(cityDetails.tiles));\n        this.allowMapPanning = false;\n      });\n    }\n  }\n\n  hoverCity(city: City) {\n    this.hoveredCity = city;\n\n    if (city.player.id === this.game.state?.trackedPlayer.id) {\n      city.getWorkTiles().then((data) => {\n        this.cityWorkedTilesArea.setTiles(data.workedTiles);\n        this.cityNotWorkedTilesArea.setTiles(data.notWorkedTiles);\n        this.cityBordersOnlyArea.setTiles(\n          data.notWorkedTiles.concat(data.workedTiles),\n        );\n      });\n    } else {\n      city.getRange().then((tiles) => {\n        this.cityRangeArea.setTiles(tiles);\n      });\n    }\n  }\n\n  unhoverCity() {\n    this.cityWorkedTilesArea.clear();\n    this.cityNotWorkedTilesArea.clear();\n    this.cityBordersOnlyArea.clear();\n    this.cityRangeArea.clear();\n    this.hoveredCity = null;\n  }\n\n  async selectUnit(unit: Unit | null) {\n    if (unit?.id === this.selectedUnit?.id) {\n      return;\n    }\n\n    this.clearSelectedUnit(!unit);\n\n    if (!unit) {\n      return;\n    }\n\n    if (unit.player.id === this.game.state?.trackedPlayer.id) {\n      const data = await this.game.state.getUnitDetails(unit.id);\n      if (data) {\n        const unitDetails = new UnitDetails(this.game.state!, data);\n        this._selectedUnit$.next(unitDetails);\n        this.game.state!.updateUnit(unitDetails.id);\n        unitDetails\n          .getRange()\n          .then((tiles) => this.unitRangeArea.setTiles(tiles));\n      }\n      this.setPath(this._selectedUnit$.value?.path || null);\n    }\n  }\n\n  private clearSelectedUnit(clearRange = true) {\n    const previousUnit = this.selectedUnit;\n    this._selectedUnit$.next(null);\n    if (clearRange) {\n      this.unitRangeArea.clear();\n    }\n    if (previousUnit) {\n      this.game.state!.updateUnit(previousUnit.id);\n    }\n  }\n\n  get selectedUnit() {\n    return this._selectedUnit$.value;\n  }\n\n  clear() {\n    this.selectingTileEnabled = false;\n    this._hoveredTile$.next(null);\n    this._selectedTile$.next(null);\n    this._highlightedTiles$.next(new Set());\n\n    this.editorArea.clear();\n    this.cityRangeArea.clear();\n    this.unitRangeArea.clear();\n    this.cityBordersOnlyArea.clear();\n    this.cityWorkedTilesArea.clear();\n    this.cityNotWorkedTilesArea.clear();\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport {\n  Component,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  OnDestroy,\n} from \"@angular/core\";\n\nimport { MinimapRenderer } from \"src/app/renderer/minimap\";\nimport { GameRenderer } from \"src/app/renderer/renderer\";\nimport { Camera } from \"src/app/renderer/camera\";\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-minimap\",\n  templateUrl: \"./minimap.component.html\",\n  styleUrls: [\"./minimap.component.scss\"],\n})\nexport class MinimapComponent implements AfterViewInit, OnDestroy {\n  app: PIXIE.Application | null = null;\n\n  minimapRenderer: MinimapRenderer | null = null;\n\n  @ViewChild(\"canvas\") canvas: ElementRef<HTMLCanvasElement>;\n\n  constructor(\n    private game: GameApi,\n    private renderer: GameRenderer,\n    private camera: Camera,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.create();\n  }\n\n  ngOnDestroy() {\n    this.minimapRenderer?.destroy();\n    this.app?.destroy();\n  }\n\n  create() {\n    if (this.minimapRenderer) {\n      this.minimapRenderer.destroy();\n    }\n\n    this.minimapRenderer = new MinimapRenderer(\n      this.game,\n      this.renderer,\n      this.camera,\n    );\n    this.minimapRenderer.calculateSize();\n\n    this.app = new PIXIE.Application({\n      view: this.canvas.nativeElement,\n      width: this.minimapRenderer.width,\n      height: this.minimapRenderer.height,\n      autoStart: false,\n    });\n\n    this.minimapRenderer.create(this.app);\n  }\n\n  moveViewport(event: MouseEvent) {\n    if (!this.minimapRenderer) {\n      return;\n    }\n\n    if (event.buttons === 1) {\n      const canvasRect = this.canvas.nativeElement.getBoundingClientRect();\n      this.camera.moveTo(\n        (event.clientX - canvasRect.x) / this.minimapRenderer.scale,\n        (event.clientY - canvasRect.y) / this.minimapRenderer.scale,\n      );\n    }\n  }\n}\n","<canvas\n  #canvas\n  (mousemove)=\"moveViewport($event)\"\n  (mousedown)=\"moveViewport($event)\"\n></canvas>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n} from \"@angular/core\";\n\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { NextTurnService } from \"../next-turn.service\";\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-next-turn-button\",\n  templateUrl: \"./next-turn-button.component.html\",\n  styleUrls: [\"./next-turn-button.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NextTurnButtonComponent implements OnInit, OnDestroy {\n  ngUnsubscribe = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private game: GameApi,\n    public nextTurnService: NextTurnService,\n  ) {}\n\n  ngOnInit() {\n    this.game.nextTask$\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  get cssClass() {\n    const nextTask = this.game.nextTask;\n\n    if (!nextTask) {\n      return \"\";\n    }\n\n    switch (nextTask.task) {\n      case \"city\":\n        return \"production-color\";\n      case \"unit\":\n        return \"\";\n    }\n  }\n\n  get label() {\n    const nextTask = this.game.nextTask;\n\n    if (!nextTask) {\n      return \"Next turn\";\n    }\n\n    switch (nextTask.task) {\n      case \"city\":\n        return \"Choose production\";\n      case \"unit\":\n        return \"Unit needs orders\";\n    }\n  }\n}\n","<button *ngIf=\"nextTurnService.waiting$ | async; else buttonTmpl\">\n  <app-spinner></app-spinner> Wait for other players\n</button>\n\n<ng-template #buttonTmpl>\n  <button [class]=\"cssClass\" (click)=\"nextTurnService.next()\">\n    {{ label }}\n  </button>\n</ng-template>\n","import { Injectable } from \"@angular/core\";\n\nimport { BehaviorSubject } from \"rxjs\";\n\nimport { MapUi } from \"./map-ui\";\nimport { Camera } from \"../renderer/camera\";\nimport { GameApi } from \"../api\";\n\n@Injectable()\nexport class NextTurnService {\n  private _waiting$ = new BehaviorSubject<boolean>(false);\n  waiting$ = this._waiting$.asObservable();\n\n  constructor(\n    public game: GameApi,\n    private camera: Camera,\n    private mapUi: MapUi,\n  ) {}\n\n  async next() {\n    if (this._waiting$.value) {\n      return;\n    }\n\n    const nextTask = this.game.nextTask;\n\n    if (!nextTask) {\n      this._waiting$.next(true);\n      await this.game.nextPlayer();\n      this._waiting$.next(false);\n      return;\n    }\n\n    const state = this.game.state!;\n\n    switch (nextTask.task) {\n      case \"city\":\n        const city = state.citiesMap.get(nextTask.id)!;\n        this.mapUi.selectCity(city);\n        break;\n\n      case \"unit\":\n        const unit = state.unitsMap.get(nextTask.id)!;\n        this.mapUi.selectUnit(unit);\n        this.camera.moveToTileWithEasing(unit.tile);\n        break;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"percentBonus\",\n})\nexport class PercentBonusPipe implements PipeTransform {\n  transform(value: number): string {\n    return (value * 100).toFixed(0) + \"%\";\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-player-yields\",\n  templateUrl: \"./player-yields.component.html\",\n  styleUrls: [\"./player-yields.component.scss\"],\n})\nexport class PlayerYieldsComponent implements OnInit {\n  constructor(private game: GameApi) {}\n\n  ngOnInit(): void {}\n\n  get yields() {\n    return this.game.state!.trackedPlayer.yields;\n  }\n}\n","<div class=\"public-works-color\" [appTooltip]=\"publicWorksTooltipTmpl\">\n  Public works: {{ yields.total.publicWorks }} ({{\n    yields.perTurn.publicWorks >= 0 ? \"+\" : \"\"\n  }}{{ yields.perTurn.publicWorks }})\n</div>\n\n<ng-template #publicWorksTooltipTmpl>\n  <div>From cities: {{ yields.income.publicWorks }}</div>\n  <div>Improvements maintainance: {{ yields.costs.publicWorks }}</div>\n  <div>Netto per turn: {{ yields.perTurn.publicWorks }}</div>\n</ng-template>\n","import {\n  Component,\n  Input,\n  ViewChild,\n  TemplateRef,\n  AfterViewInit,\n} from \"@angular/core\";\n\nimport { ProductDefinition, ProductRequirement } from \"src/app/core/product\";\nimport { CityCore } from \"src/app/core/city\";\nimport { BUILDINGS_MAP } from \"src/app/core/buildings\";\n\n@Component({\n  selector: \"app-product-requirements\",\n  templateUrl: \"./product-requirements.component.html\",\n  styleUrls: [\"./product-requirements.component.scss\"],\n})\nexport class ProductRequirementsComponent implements AfterViewInit {\n  @Input() product: ProductDefinition;\n\n  @Input() city: CityCore;\n\n  @ViewChild(\"buildingTmpl\") buildingRef: TemplateRef<any>;\n\n  @ViewChild(\"sizeTmpl\") sizeRef: TemplateRef<any>;\n\n  templates = new Map<string, TemplateRef<any>>();\n\n  failedRequirements: ProductRequirement[] = [];\n\n  constructor() {}\n\n  ngAfterViewInit(): void {\n    this.templates.set(\"building\", this.buildingRef);\n    this.templates.set(\"size\", this.sizeRef);\n\n    for (const r of this.product.weakRequirements) {\n      if (!r.check(this.city)) {\n        this.failedRequirements.push(r);\n      }\n    }\n  }\n\n  getBuildingName(id: string) {\n    return BUILDINGS_MAP.get(id)!.name;\n  }\n}\n","<ng-container *ngFor=\"let requirement of failedRequirements\">\n  <ng-container\n    *ngTemplateOutlet=\"\n      templates.get(requirement.id);\n      context: { requirement: requirement }\n    \"\n  ></ng-container>\n</ng-container>\n\n<ng-template #buildingTmpl let-requirement=\"requirement\">\n  <div>\n    <b>{{ getBuildingName(requirement.buildingId) }}</b> is required\n  </div>\n</ng-template>\n\n<ng-template #sizeTmpl let-requirement=\"requirement\">\n  <div>\n    City size <b>{{ requirement.size }}</b> is required\n  </div>\n</ng-template>\n","import { Component, OnInit, HostBinding } from \"@angular/core\";\n\nimport { filter } from \"rxjs/operators\";\n\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-turn-counter\",\n  templateUrl: \"./turn-counter.component.html\",\n  styleUrls: [\"./turn-counter.component.scss\"],\n})\nexport class TurnCounterComponent implements OnInit {\n  @HostBinding(\"class.is-visible\")\n  isVisible = false;\n\n  timeout: number;\n\n  constructor(public game: GameApi) {}\n\n  ngOnInit(): void {\n    this.game.state!.turn$.pipe(filter((turn) => turn > 1)).subscribe(() => {\n      this.isVisible = true;\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n      this.timeout = setTimeout(() => (this.isVisible = false), 2000) as any;\n    });\n  }\n}\n","<div class=\"turn\">turn {{ game.state!.turn$ | async }}</div>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"turns\",\n})\nexport class TurnsPipe implements PipeTransform {\n  transform(value: number | null): string {\n    if (value === null) {\n      return \"\";\n    }\n    if (value === Infinity) {\n      return \"∞\";\n    }\n    return value.toString();\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { CityDetails } from \"../api/city-details\";\n\nexport class UIState {\n  editorEnabled$ = new BehaviorSubject<boolean>(false);\n  menuVisible$ = new BehaviorSubject<boolean>(true);\n  selectedCity$ = new BehaviorSubject<CityDetails | null>(null);\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from \"@angular/core\";\n\nimport {\n  UnitAction,\n  getPublicWorksRequired,\n  getPublicWorksPerTurn,\n} from \"src/app/core/unit-actions\";\nimport { UnitDetails } from \"src/app/api/unit-details\";\n\n@Component({\n  selector: \"app-unit-action-requirements\",\n  templateUrl: \"./unit-action-requirements.component.html\",\n  styleUrls: [\"./unit-action-requirements.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitActionRequirementsComponent implements OnInit {\n  @Input() unit: UnitDetails;\n\n  @Input() action: UnitAction;\n\n  failedRequirements: string[] = [];\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  async ngOnInit() {\n    this.failedRequirements = await this.unit.getFailedActionRequirements(\n      this.action,\n    );\n    this.cdr.markForCheck();\n  }\n\n  get publicWorksRequired() {\n    return getPublicWorksRequired(this.action);\n  }\n\n  get publicWorksPerTurn() {\n    return getPublicWorksPerTurn(this.action);\n  }\n}\n","<div class=\"requirements\" *ngFor=\"let requirement of failedRequirements\">\n  <ng-container [ngSwitch]=\"requirement\">\n    <ng-container *ngSwitchCase=\"'ownTile'\">\n      Must be on owned tile.\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'notForeignTile'\">\n      Cannot be build on someone else's land.\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'sameImprovement'\">\n      Already built.\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'noRoad'\">\n      Already built.\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'improvementPossible'\">\n      Cannot be built here.\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'publicWorks'\">\n      Not enough public work points.\n    </ng-container>\n  </ng-container>\n</div>\n\n<div class=\"public-works-color\" *ngIf=\"publicWorksRequired\">\n  Will consume {{ publicWorksRequired }} public works points.\n</div>\n\n<div class=\"public-works-color\" *ngIf=\"publicWorksPerTurn\">\n  Costs per turn: {{ publicWorksPerTurn }} public works points.\n</div>\n\n<div *ngIf=\"action === 'foundCity'\">\n  Will consume the unit\n</div>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  OnDestroy,\n  ChangeDetectorRef,\n  Input,\n  HostBinding,\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { Camera } from \"src/app/renderer/camera\";\nimport { UnitDetails } from \"src/app/api/unit-details\";\nimport { TILE_SIZE } from \"src/app/renderer/constants\";\n\n@Component({\n  selector: \"app-unit-marker\",\n  templateUrl: \"./unit-marker.component.html\",\n  styleUrls: [\"./unit-marker.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitMarkerComponent implements OnInit, OnDestroy {\n  @Input() unit: UnitDetails;\n\n  ngUnsubscribe = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private domSanitizer: DomSanitizer,\n    private camera: Camera,\n  ) {}\n\n  ngOnInit(): void {\n    this.camera.transform$\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  @HostBinding(\"style.transform\")\n  get transform() {\n    if (!this.unit) {\n      return \"\";\n    }\n    const [x, y] = [this.unit.tile.x, this.unit.tile.y];\n    const [screenX, screenY] = this.camera.gameToScreen(x, y);\n    const scale = this.camera.transform.scale / TILE_SIZE;\n    return this.domSanitizer.bypassSecurityTrustStyle(\n      `translate(${screenX}px, ${screenY}px) scale(${scale})`,\n    );\n  }\n\n  @HostBinding(\"class.have-moves\")\n  get haveMoves() {\n    return this.unit.actionPointsLeft > 0;\n  }\n}\n","<div class=\"inner\"></div>\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  TemplateRef,\n} from \"@angular/core\";\n\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { UnitAction, ACTIONS } from \"src/app/core/unit-actions\";\nimport { MapUi } from \"../map-ui\";\nimport { UnitDetails } from \"src/app/api/unit-details\";\nimport { UnitOrder } from \"src/app/core/unit\";\nimport { GameApi } from \"src/app/api\";\nimport { Camera } from \"src/app/renderer/camera\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Component({\n  selector: \"app-unit-panel\",\n  templateUrl: \"./unit-panel.component.html\",\n  styleUrls: [\"./unit-panel.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitPanelComponent implements OnInit, OnDestroy {\n  unit: UnitDetails | null = null;\n\n  requirementsTemplates = new Map<UnitAction, TemplateRef<any>>();\n\n  private ngUnsubscribe = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private game: GameApi,\n    private mapUi: MapUi,\n  ) {}\n\n  ngOnInit(): void {\n    this.mapUi.selectedUnit$\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe((unit) => {\n        this.unit = unit;\n        this.cdr.markForCheck();\n      });\n\n    this.game\n      .state!.turn$.pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(async () => {\n        if (this.unit) {\n          await this.unit.refresh();\n          this.mapUi.unitRangeArea.setTiles(await this.unit.getRange());\n          this.cdr.markForCheck();\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  getActionName(action: UnitAction) {\n    return ACTIONS[action].name;\n  }\n\n  async setOrder(order: UnitOrder) {\n    await this.unit?.setOrder(order);\n    this.cdr.markForCheck();\n  }\n\n  destroy() {\n    if (this.unit) {\n      this.unit.disband();\n      this.mapUi.selectUnit(null);\n    }\n  }\n}\n","<div class=\"panel panel-top-right-corner\" *ngIf=\"unit\">\n  <h2>{{ unit.definition.name }}</h2>\n  <p>Moves: {{ unit.actionPointsLeft }}</p>\n  <p>Power: {{ unit.definition.power }}</p>\n  <p>Order: {{ unit.order }}</p>\n\n  <div class=\"actions\">\n    <button class=\"btn-danger\" (click)=\"destroy()\">Disband</button>\n\n    <button (click)=\"setOrder('skip')\">Skip move</button>\n\n    <button (click)=\"setOrder('sleep')\">Sleep</button>\n  </div>\n\n  <div class=\"actions\">\n    <button\n      *ngFor=\"let action of unit.definition.actions\"\n      [class.disabled]=\"!unit.canDoAction(action)\"\n      [appTooltip]=\"unitActionsTooltipTmpl\"\n      [tooltipContext]=\"{ action: action }\"\n      (click)=\"unit.doAction(action)\"\n    >\n      {{ getActionName(action) }}\n    </button>\n  </div>\n</div>\n\n<ng-template #unitActionsTooltipTmpl let-action=\"action\">\n  <app-unit-action-requirements\n    [unit]=\"unit\"\n    [action]=\"action\"\n  ></app-unit-action-requirements>\n</ng-template>\n\n<app-unit-marker *ngIf=\"unit\" [unit]=\"unit\"></app-unit-marker>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"panel\">\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\n\nimport { Option } from \"../option.interface\";\n\n@Component({\n  selector: \"app-multiselect\",\n  templateUrl: \"./multiselect.component.html\",\n  styleUrls: [\"./multiselect.component.scss\"],\n})\nexport class MultiselectComponent {\n  @Input() options: Option[];\n\n  @Input() value: any[];\n\n  @Output() changed = new EventEmitter<any[]>();\n\n  toggleOption(option: Option) {\n    if (this.value.includes(option.value)) {\n      const index = this.value.indexOf(option.value);\n      const newValue = [...this.value];\n      newValue.splice(index, 1);\n      this.changed.next(newValue);\n    } else {\n      this.changed.next([...this.value, option.value]);\n    }\n  }\n}\n","<div\n  class=\"option\"\n  *ngFor=\"let option of options\"\n  [class.selected]=\"value.includes(option.value)\"\n  (click)=\"toggleOption(option)\"\n>\n  {{ option.label }}\n</div>\n","import { Component, Input, ChangeDetectionStrategy } from \"@angular/core\";\n\n@Component({\n  selector: \"app-progress-bar\",\n  templateUrl: \"./progress-bar.component.html\",\n  styleUrls: [\"./progress-bar.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProgressBarComponent {\n  @Input() progress: number;\n\n  @Input() nextProgress: number;\n\n  @Input() total: number;\n\n  get progressPercent() {\n    return (this.progress / this.total) * 100;\n  }\n\n  get nextProgressPercent() {\n    return (this.nextProgress / this.total) * 100;\n  }\n}\n","<ng-container *ngIf=\"total\">\n  <div\n    class=\"progress next\"\n    *ngIf=\"nextProgress > progress\"\n    [style.width.%]=\"nextProgressPercent\"\n  ></div>\n\n  <div class=\"progress\" [style.width.%]=\"progressPercent\"></div>\n\n  <div\n    class=\"progress negative\"\n    *ngIf=\"nextProgress < progress\"\n    [style.width.%]=\"progressPercent - nextProgressPercent\"\n    [style.left.%]=\"nextProgressPercent\"\n  ></div>\n\n  <ng-content></ng-content>\n</ng-container>\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\n\nimport { Option } from \"../option.interface\";\n\n@Component({\n  selector: \"app-radio\",\n  templateUrl: \"./radio.component.html\",\n  styleUrls: [\"./radio.component.scss\"],\n})\nexport class RadioComponent {\n  @Input() options: Option[];\n\n  @Input() value: any;\n\n  @Output() changed = new EventEmitter<any>();\n}\n","<div\n  class=\"option\"\n  *ngFor=\"let option of options\"\n  [class.selected]=\"option.value === value\"\n  (click)=\"changed.next(option.value)\"\n>\n  {{ option.label }}\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export * from \"./tab/tab.component\";\nexport * from \"./tabs.component\";\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from \"@angular/core\";\n\nimport { BehaviorSubject } from \"rxjs\";\nimport { distinctUntilChanged } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-tab\",\n  templateUrl: \"./tab.component.html\",\n  styleUrls: [\"./tab.component.scss\"],\n})\nexport class TabComponent implements OnDestroy {\n  @Input() tabTitle: string;\n\n  @Output() select = new EventEmitter<void>();\n\n  private _isVisible$ = new BehaviorSubject<boolean>(false);\n  isVisible$ = this._isVisible$.asObservable().pipe(distinctUntilChanged());\n\n  ngOnDestroy() {\n    this.hide();\n  }\n\n  hide() {\n    this._isVisible$.next(false);\n  }\n\n  show() {\n    this._isVisible$.next(true);\n    this.select.next();\n  }\n\n  get isVisible() {\n    return this._isVisible$.value;\n  }\n}\n","<div class=\"content\">\n  <ng-content *ngIf=\"isVisible\"></ng-content>\n</div>\n","import {\n  Component,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n} from \"@angular/core\";\n\nimport { TabComponent } from \"./tab/tab.component\";\n\n@Component({\n  selector: \"app-tabs\",\n  templateUrl: \"./tabs.component.html\",\n  styleUrls: [\"./tabs.component.scss\"],\n})\nexport class TabsComponent implements AfterContentInit {\n  @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\n\n  activeTab: TabComponent;\n\n  ngAfterContentInit() {\n    this.activateTab(this.tabs.first);\n  }\n\n  activateTab(tab: TabComponent) {\n    if (this.activeTab) {\n      this.activeTab.hide();\n    }\n    this.activeTab = tab;\n    this.activeTab.show();\n  }\n}\n","<div class=\"tabs\">\n  <div\n    class=\"tab\"\n    *ngFor=\"let tab of tabs\"\n    [class.active]=\"tab === activeTab\"\n    (click)=\"activateTab(tab)\"\n  >{{ tab.tabTitle }}</div>\n</div>\n\n<ng-content></ng-content>\n","import {\n  Component,\n  OnInit,\n  Input,\n  HostBinding,\n  HostListener,\n  Output,\n  EventEmitter,\n} from \"@angular/core\";\n\n@Component({\n  selector: \"app-toggle\",\n  templateUrl: \"./toggle.component.html\",\n  styleUrls: [\"./toggle.component.scss\"],\n})\nexport class ToggleComponent implements OnInit {\n  @HostBinding(\"class.enabled\")\n  @Input()\n  value: boolean;\n\n  @Output() changed = new EventEmitter<boolean>();\n\n  @HostListener(\"click\")\n  toggle() {\n    this.value = !this.value;\n    this.changed.next(this.value);\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<ng-content></ng-content>\n","import {\n  Directive,\n  Input,\n  TemplateRef,\n  HostListener,\n  ElementRef,\n  OnDestroy,\n} from \"@angular/core\";\nimport {\n  Overlay,\n  OverlayRef,\n  ConnectionPositionPair,\n} from \"@angular/cdk/overlay\";\nimport { ComponentPortal } from \"@angular/cdk/portal\";\n\nimport { TooltipComponent } from \"./tooltip/tooltip.component\";\n\n@Directive({\n  selector: \"[appTooltip]\",\n})\nexport class TooltipDirective implements OnDestroy {\n  overlayRef: OverlayRef | null = null;\n\n  @Input(\"appTooltip\") templateRef: TemplateRef<any>;\n\n  @Input(\"tooltipContext\") context: any;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private overlay: Overlay,\n  ) {}\n\n  ngOnDestroy() {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n    }\n  }\n\n  @HostListener(\"mouseenter\")\n  showTooltip() {\n    this.overlayRef = this.overlay.create({\n      positionStrategy: this.overlay\n        .position()\n        .flexibleConnectedTo(this.elementRef)\n        .withPositions(this.getPositions()),\n    });\n\n    const tooltipPortal = new ComponentPortal<TooltipComponent>(\n      TooltipComponent,\n    );\n    const componentRef = this.overlayRef.attach(tooltipPortal);\n    componentRef.instance.templateRef = this.templateRef;\n    componentRef.instance.context = this.context;\n  }\n\n  @HostListener(\"mouseleave\")\n  hideTooltip() {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = null;\n    }\n  }\n\n  private getPositions(): ConnectionPositionPair[] {\n    return [\n      {\n        originX: \"center\",\n        originY: \"top\",\n        overlayX: \"center\",\n        overlayY: \"bottom\",\n      },\n      {\n        originX: \"center\",\n        originY: \"bottom\",\n        overlayX: \"center\",\n        overlayY: \"top\",\n      },\n    ];\n  }\n}\n","import { Component, OnInit, TemplateRef } from \"@angular/core\";\n\n@Component({\n  selector: \"app-tooltip\",\n  templateUrl: \"./tooltip.component.html\",\n  styleUrls: [\"./tooltip.component.scss\"],\n})\nexport class TooltipComponent implements OnInit {\n  templateRef: TemplateRef<any>;\n\n  context: any;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<ng-container *ngTemplateOutlet=\"templateRef; context: context\"></ng-container>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}