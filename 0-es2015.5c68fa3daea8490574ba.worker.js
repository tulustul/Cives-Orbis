!function(t){var e={};function i(s){if(e[s])return e[s].exports;var r=e[s]={i:s,l:!1,exports:{}};return t[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(s,r,(function(e){return t[e]}).bind(null,r));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s="OO65")}({Fu16:function(t,e,i){var s;!function(){"use strict";var r=.5*(Math.sqrt(3)-1),o=(3-Math.sqrt(3))/6,n=(Math.sqrt(5)-1)/4,a=(5-Math.sqrt(5))/20;function l(t){var e;e="function"==typeof t?t:t?function(){var t=0,e=0,i=0,s=1,r=u();t=r(" "),e=r(" "),i=r(" ");for(var o=0;o<arguments.length;o++)(t-=r(arguments[o]))<0&&(t+=1),(e-=r(arguments[o]))<0&&(e+=1),(i-=r(arguments[o]))<0&&(i+=1);return r=null,function(){var r=2091639*t+2.3283064365386963e-10*s;return t=e,e=i,i=r-(s=0|r)}}(t):Math.random,this.p=d(e),this.perm=new Uint8Array(512),this.permMod12=new Uint8Array(512);for(var i=0;i<512;i++)this.perm[i]=this.p[255&i],this.permMod12[i]=this.perm[i]%12}function d(t){var e,i=new Uint8Array(256);for(e=0;e<256;e++)i[e]=e;for(e=0;e<255;e++){var s=e+~~(t()*(256-e)),r=i[e];i[e]=i[s],i[s]=r}return i}function u(){var t=4022871197;return function(e){e=e.toString();for(var i=0;i<e.length;i++){var s=.02519603282416938*(t+=e.charCodeAt(i));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)}}l.prototype={grad3:new Float32Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1]),grad4:new Float32Array([0,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,1,0,1,1,1,0,1,-1,1,0,-1,1,1,0,-1,-1,-1,0,1,1,-1,0,1,-1,-1,0,-1,1,-1,0,-1,-1,1,1,0,1,1,1,0,-1,1,-1,0,1,1,-1,0,-1,-1,1,0,1,-1,1,0,-1,-1,-1,0,1,-1,-1,0,-1,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,0]),noise2D:function(t,e){var i,s,n=this.permMod12,a=this.perm,l=this.grad3,d=0,u=0,c=0,h=(t+e)*r,p=Math.floor(t+h),f=Math.floor(e+h),m=(p+f)*o,y=t-(p-m),g=e-(f-m);y>g?(i=1,s=0):(i=0,s=1);var v=y-i+o,w=g-s+o,b=y-1+2*o,P=g-1+2*o,T=255&p,M=255&f,k=.5-y*y-g*g;if(k>=0){var x=3*n[T+a[M]];d=(k*=k)*k*(l[x]*y+l[x+1]*g)}var W=.5-v*v-w*w;if(W>=0){var O=3*n[T+i+a[M+s]];u=(W*=W)*W*(l[O]*v+l[O+1]*w)}var S=.5-b*b-P*P;if(S>=0){var C=3*n[T+1+a[M+1]];c=(S*=S)*S*(l[C]*b+l[C+1]*P)}return 70*(d+u+c)},noise3D:function(t,e,i){var s,r,o,n,a,l,d,u,c,h,p=this.permMod12,f=this.perm,m=this.grad3,y=(t+e+i)*(1/3),g=Math.floor(t+y),v=Math.floor(e+y),w=Math.floor(i+y),b=(g+v+w)*(1/6),P=t-(g-b),T=e-(v-b),M=i-(w-b);P>=T?T>=M?(a=1,l=0,d=0,u=1,c=1,h=0):P>=M?(a=1,l=0,d=0,u=1,c=0,h=1):(a=0,l=0,d=1,u=1,c=0,h=1):T<M?(a=0,l=0,d=1,u=0,c=1,h=1):P<M?(a=0,l=1,d=0,u=0,c=1,h=1):(a=0,l=1,d=0,u=1,c=1,h=0);var k=P-a+1/6,x=T-l+1/6,W=M-d+1/6,O=P-u+1/6*2,S=T-c+1/6*2,C=M-h+1/6*2,F=P-1+.5,E=T-1+.5,I=M-1+.5,L=255&g,N=255&v,A=255&w,R=.6-P*P-T*T-M*M;if(R<0)s=0;else{var q=3*p[L+f[N+f[A]]];s=(R*=R)*R*(m[q]*P+m[q+1]*T+m[q+2]*M)}var D=.6-k*k-x*x-W*W;if(D<0)r=0;else{var Y=3*p[L+a+f[N+l+f[A+d]]];r=(D*=D)*D*(m[Y]*k+m[Y+1]*x+m[Y+2]*W)}var z=.6-O*O-S*S-C*C;if(z<0)o=0;else{var j=3*p[L+u+f[N+c+f[A+h]]];o=(z*=z)*z*(m[j]*O+m[j+1]*S+m[j+2]*C)}var B=.6-F*F-E*E-I*I;if(B<0)n=0;else{var U=3*p[L+1+f[N+1+f[A+1]]];n=(B*=B)*B*(m[U]*F+m[U+1]*E+m[U+2]*I)}return 32*(s+r+o+n)},noise4D:function(t,e,i,s){var r,o,l,d,u,c,h,p,f,m,y,g,v,w,b,P,T,M=this.perm,k=this.grad4,x=(t+e+i+s)*n,W=Math.floor(t+x),O=Math.floor(e+x),S=Math.floor(i+x),C=Math.floor(s+x),F=(W+O+S+C)*a,E=t-(W-F),I=e-(O-F),L=i-(S-F),N=s-(C-F),A=0,R=0,q=0,D=0;E>I?A++:R++,E>L?A++:q++,E>N?A++:D++,I>L?R++:q++,I>N?R++:D++,L>N?q++:D++;var Y=E-(c=A>=3?1:0)+a,z=I-(h=R>=3?1:0)+a,j=L-(p=q>=3?1:0)+a,B=N-(f=D>=3?1:0)+a,U=E-(m=A>=2?1:0)+2*a,G=I-(y=R>=2?1:0)+2*a,V=L-(g=q>=2?1:0)+2*a,_=N-(v=D>=2?1:0)+2*a,H=E-(w=A>=1?1:0)+3*a,$=I-(b=R>=1?1:0)+3*a,J=L-(P=q>=1?1:0)+3*a,K=N-(T=D>=1?1:0)+3*a,Q=E-1+4*a,X=I-1+4*a,Z=L-1+4*a,tt=N-1+4*a,et=255&W,it=255&O,st=255&S,rt=255&C,ot=.6-E*E-I*I-L*L-N*N;if(ot<0)r=0;else{var nt=M[et+M[it+M[st+M[rt]]]]%32*4;r=(ot*=ot)*ot*(k[nt]*E+k[nt+1]*I+k[nt+2]*L+k[nt+3]*N)}var at=.6-Y*Y-z*z-j*j-B*B;if(at<0)o=0;else{var lt=M[et+c+M[it+h+M[st+p+M[rt+f]]]]%32*4;o=(at*=at)*at*(k[lt]*Y+k[lt+1]*z+k[lt+2]*j+k[lt+3]*B)}var dt=.6-U*U-G*G-V*V-_*_;if(dt<0)l=0;else{var ut=M[et+m+M[it+y+M[st+g+M[rt+v]]]]%32*4;l=(dt*=dt)*dt*(k[ut]*U+k[ut+1]*G+k[ut+2]*V+k[ut+3]*_)}var ct=.6-H*H-$*$-J*J-K*K;if(ct<0)d=0;else{var ht=M[et+w+M[it+b+M[st+P+M[rt+T]]]]%32*4;d=(ct*=ct)*ct*(k[ht]*H+k[ht+1]*$+k[ht+2]*J+k[ht+3]*K)}var pt=.6-Q*Q-X*X-Z*Z-tt*tt;if(pt<0)u=0;else{var ft=M[et+1+M[it+1+M[st+1+M[rt+1]]]]%32*4;u=(pt*=pt)*pt*(k[ft]*Q+k[ft+1]*X+k[ft+2]*Z+k[ft+3]*tt)}return 27*(r+o+l+d+u)}},l._buildPermutationTable=d,void 0===(s=(function(){return l}).call(e,i,e,t))||(t.exports=s),e.SimplexNoise=l,t.exports=l}()},OO65:function(t,e,i){"use strict";i.r(e),i.d(e,"tileUpdate",(function(){return Lt})),i.d(e,"tileBulkUpdate",(function(){return Nt})),i.d(e,"getCityDetails",(function(){return At})),i.d(e,"cityProduce",(function(){return Rt})),i.d(e,"cityGetRange",(function(){return qt})),i.d(e,"cityGetWorkTiles",(function(){return Dt})),i.d(e,"cityWorkTile",(function(){return Yt})),i.d(e,"cityUnworkTile",(function(){return zt})),i.d(e,"cityOptimizeYields",(function(){return jt})),i.d(e,"getAreaTiles",(function(){return Bt}));var s=i("Fu16");const r={food:0,production:0,culture:0,publicWorks:0};function o(t){t.food=0,t.production=0,t.culture=0,t.publicWorks=0}function n(t,e){t.food+=e.food,t.production+=e.production,t.culture+=e.culture,t.publicWorks+=e.publicWorks}function a(t,e){t.food=e.food,t.production=e.production,t.culture=e.culture,t.publicWorks=e.publicWorks}var l=function(t){return t[t.farm=0]="farm",t[t.mine=1]="mine",t[t.sawmill=2]="sawmill",t}({}),d=function(t){return t[t.road=0]="road",t}({});const u={[l.farm]:15,[l.mine]:15,[l.sawmill]:15},c={[l.farm]:1,[l.mine]:1,[l.sawmill]:1},h={[d.road]:15},p={[d.road]:1};var f=function(t){return t[t.NW=0]="NW",t[t.NE=1]="NE",t[t.E=2]="E",t[t.SE=3]="SE",t[t.SW=4]="SW",t[t.W=5]="W",t[t.NONE=6]="NONE",t}({}),m=function(t){return t[t.tropical=0]="tropical",t[t.savanna=1]="savanna",t[t.desert=2]="desert",t[t.continental=3]="continental",t[t.oceanic=4]="oceanic",t[t.tundra=5]="tundra",t[t.arctic=6]="arctic",t}({}),y=function(t){return t[t.plains=0]="plains",t[t.hills=1]="hills",t[t.mountains=2]="mountains",t}({}),g=function(t){return t[t.none=0]="none",t[t.shallow=1]="shallow",t[t.deep=2]="deep",t}({});const v=new Set([m.continental,m.oceanic,m.tropical,m.tundra]),w=new Set([m.continental,m.oceanic,m.tropical]);function b(t){return t.seaLevel===g.none&&t.landForm===y.plains&&v.has(t.climate)}function P(t){return!(t.seaLevel!==g.none||t.landForm!==y.plains||!t.riverParts.length||!w.has(t.climate))}function T(t){return{turn:t.turn,map:M(t.map),players:t.players.map(t=>{return{id:(e=t).id,color:e.color,areaId:e.area.id};var e}),trackedPlayer:O(t.trackedPlayer),units:t.unitsManager.units.map(t=>S(t)),cities:t.citiesManager.cities.map(t=>x(t))}}function M(t){const e=[];for(let i=0;i<t.width;i++){const s=[];e.push(s);for(let e=0;e<t.height;e++)s.push(k(t.tiles[i][e]))}return{width:t.width,height:t.height,tiles:e}}function k(t){return{id:t.id,x:t.x,y:t.y,climate:t.climate,forest:t.forest,improvement:t.improvement,landForm:t.landForm,riverParts:t.riverParts,road:t.road,seaLevel:t.seaLevel,wetlands:t.wetlands,yields:t.yields,areaOf:t.areaOf?t.areaOf.id:null,unitsIds:t.units.map(t=>t.id),cityId:t.city?t.city.id:null}}function x(t){return{id:t.id,name:t.name,size:t.size,playerId:t.player.id,tileId:t.tile.id,totalFood:t.totalFood,foodToGrow:t.getFoodToGrow(),foodPerTurn:t.perTurn.food,turnsToGrow:t.turnsToGrow,totalProduction:t.totalProduction,productionPerTurn:t.yields.production,productionRequired:t.product?t.product.productDefinition.productionCost:null,turnsToProductionEnd:t.turnsToProductionEnd,productName:t.product?t.product.productDefinition.name:null}}function W(t){var e,i;return t.updateProductsList(),{id:t.id,name:t.name,size:t.size,playerId:t.player.id,tileId:t.tile.id,totalFood:t.totalFood,foodToGrow:t.getFoodToGrow(),turnsToGrow:t.turnsToGrow,totalProduction:t.totalProduction,turnsToProductionEnd:t.turnsToProductionEnd,availableBuildings:t.availableBuildings.map(t=>t.id),availableIdleProducts:t.availableIdleProducts.map(t=>t.id),availableUnits:t.availableUnits.map(t=>t.id),buildingsIds:Array.from(t.buildingsIds),cultureToExpand:t.getCultureToExpand(),disabledBuildings:Array.from(t.disabledBuildings).map(t=>t.id),disabledIdleProducts:Array.from(t.disabledIdleProducts).map(t=>t.id),disabledUnits:Array.from(t.disabledUnits).map(t=>t.id),foodConsumed:t.foodConsumed,perTurn:t.perTurn,productId:(null===(e=t.product)||void 0===e?void 0:e.productDefinition.id)||null,productType:(null===(i=t.product)||void 0===i?void 0:i.type)||null,tileYields:t.tileYields,tiles:Array.from(t.tiles).map(t=>t.id),totalCulture:t.totalCulture,workedTiles:Array.from(t.workedTiles).map(t=>t.id),yields:t.yields}}function O(t){return{id:t.id,color:t.color,exploredTiles:Array.from(t.exploredTiles).map(t=>t.id),units:t.units.map(t=>t.id),cities:t.cities.map(t=>t.id),yields:t.yields}}function S(t){return{id:t.id,tileId:t.tile.id,definitionId:t.definition.id,playerId:t.player.id,health:t.health}}function C(t){var e;return{id:t.id,tileId:t.tile.id,definitionId:t.definition.id,playerId:t.player.id,actionPointsLeft:t.actionPointsLeft,health:t.health,order:t.order,path:(null===(e=t.path)||void 0===e?void 0:e.map(t=>t.map(t=>t.id)))||null}}const F=new class{constructor(){this.tiles=new Set,this.units=new Set,this.unitsDestroyed=new Set,this.cities=new Set,this.citiesDestroyed=new Set,this.areaTilesAdded=new Map,this.areaTilesRemoved=new Map,this.tilesExplored=new Set,this.turn=0}flush(){const t=[];for(const e of this.units)t.push({type:"unit.updated",data:S(e)});for(const e of this.unitsDestroyed)t.push({type:"unit.destroyed",data:e});for(const e of this.cities)t.push({type:"city.updated",data:x(e)});for(const e of this.citiesDestroyed)t.push({type:"city.destroyed",data:e});this.tiles.size&&t.push({type:"tiles.updated",data:Array.from(this.tiles).map(t=>k(t))});for(const[e,i]of this.areaTilesAdded.entries())t.push({type:"area.tilesAdded",data:{id:e,tiles:i.map(t=>t.id)}});for(const[e,i]of this.areaTilesRemoved.entries())t.push({type:"area.tilesRemoved",data:{id:e,tiles:i.map(t=>t.id)}});return this.turn&&t.push({type:"game.turn",data:this.turn}),this.trackedPlayer&&t.push({type:"trackedPlayer.set",data:O(this.trackedPlayer)}),this.trackedPlayerYields&&t.push({type:"trackedPlayer.yields",data:this.trackedPlayerYields}),this.tilesExplored.size&&t.push({type:"trackedPlayer.tilesExplored",data:Array.from(this.tilesExplored)}),this.tiles.clear(),this.unitsDestroyed.clear(),this.units.clear(),this.cities.clear(),this.citiesDestroyed.clear(),this.areaTilesAdded.clear(),this.areaTilesRemoved.clear(),this.trackedPlayer=void 0,this.tilesExplored.clear(),this.turn=0,t}addAreaTiles(t,e){this.areaTilesAdded.has(t)?this.areaTilesAdded.get(t).push(...e):this.areaTilesAdded.set(t,e)}removeAreaTiles(t,e){this.areaTilesRemoved.has(t)?this.areaTilesRemoved.get(t).push(...e):this.areaTilesRemoved.set(t,e)}},E={[m.arctic]:Object.assign({},r),[m.continental]:Object.assign(Object.assign({},r),{food:1,production:1}),[m.desert]:Object.assign({},r),[m.oceanic]:Object.assign(Object.assign({},r),{food:2,production:1}),[m.savanna]:Object.assign(Object.assign({},r),{food:1,production:1}),[m.tropical]:Object.assign(Object.assign({},r),{food:1}),[m.tundra]:Object.assign(Object.assign({},r),{production:1})},I={[y.plains]:Object.assign({},r),[y.hills]:Object.assign(Object.assign({},r),{food:-1}),[y.mountains]:Object.assign(Object.assign({},r),{food:-1/0,production:-5})};class L{constructor(t,e,i){this.id=t,this.x=e,this.y=i,this.climate=m.continental,this.landForm=y.plains,this.seaLevel=g.deep,this.riverParts=[],this.forest=!1,this.wetlands=!1,this.improvement=null,this.road=null,this.units=[],this.city=null,this.areaOf=null,this.yields=Object.assign({},r),this.neighbours=[],this.fullNeighbours=[],this.neighboursCosts=new Map,this.sweetSpotValue=0,this.passableArea=0}computeMovementCosts(){for(const t of this.neighbours){const e=this.getDirectionTo(t);let i=1;t.seaLevel!==g.none||t.landForm===y.mountains?i=1/0:t.landForm===y.hills?i=2:this.riverParts.includes(e)?i=3:this.riverParts.length&&t.riverParts.length&&(i=.5),t.road===d.road&&(i/=3),this.neighboursCosts.set(t,i)}}getDirectionTo(t){return t.x===this.x-(this.y%2?0:1)&&t.y===this.y-1?f.NW:t.x===this.x+(this.y%2?1:0)&&t.y===this.y-1?f.NE:t.x===this.x+1&&t.y===this.y?f.E:t.x===this.x+(this.y%2?1:0)&&t.y===this.y+1?f.SE:t.x===this.x-(this.y%2?0:1)&&t.y===this.y+1?f.SW:t.x===this.x-1&&t.y===this.y?f.W:f.NONE}getDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}computeYields(){if(this.seaLevel===g.deep)this.yields.food=0,this.yields.production=0;else if(this.seaLevel===g.shallow)this.yields.food=1,this.yields.production=0;else{const t=E[this.climate],e=I[this.landForm];this.yields.food=t.food+e.food,this.yields.production=t.production+e.production,this.forest&&(this.yields.food--,this.yields.production++),this.wetlands&&(this.yields.food--,this.yields.production--),this.riverParts.length&&(this.yields.food+=this.climate===m.desert?3:1),this.improvement===l.farm?this.yields.food++:(this.improvement===l.mine||this.improvement===l.sawmill)&&this.yields.production++,this.yields.food=Math.max(0,this.yields.food),this.yields.production=Math.max(0,this.yields.production)}}get totalYields(){return this.yields.food+this.yields.production}getTilesInRange(t){const e=new Set([this]);for(let i=0;i<t;i++){let t=new Set;for(const i of e)for(const e of i.neighbours)t.add(e);for(const i of t)e.add(i)}return e}computeSweetSpotValue(){if(this.sweetSpotValue=0,this.areaOf||this.landForm===y.mountains||this.seaLevel!==g.none)return;const t=this.getTilesInRange(3);for(const e of t)this.sweetSpotValue+=e.yields.food,this.sweetSpotValue+=e.yields.production}update(){this.computeYields(),this.computeMovementCosts();for(const t of this.neighbours)t.computeMovementCosts();F.tiles.add(this)}}function N(t,e,i){return[R(t,t[e][i],f.NW),R(t,t[e][i],f.NE),R(t,t[e][i],f.E),R(t,t[e][i],f.SE),R(t,t[e][i],f.SW),R(t,t[e][i],f.W)]}function A(t,e,i){return N(t,e,i).filter(t=>!!t)}function R(t,e,i){switch(i){case f.NW:return e.y%2==0&&0===e.x||0===e.y?null:t[e.x-(e.y%2?0:1)][e.y-1];case f.NE:return e.y%2&&e.x===t.length-1||0===e.y?null:t[e.x+(e.y%2?1:0)][e.y-1];case f.E:return e.x===t.length-1?null:t[e.x+1][e.y];case f.SE:return e.y%2&&e.x===t.length-1||e.y===t[e.x].length-1?null:t[e.x+(e.y%2?1:0)][e.y+1];case f.SW:return e.y%2==0&&0===e.x||e.y===t[e.x].length-1?null:t[e.x-(e.y%2?0:1)][e.y+1];case f.W:return 0===e.x?null:t[e.x-1][e.y]}return null}class q{constructor(t,e){this.width=t,this.height=e,this.tiles=[],this.tilesMap=new Map;for(let i=0;i<t;i++){const s=[];this.tiles.push(s);for(let r=0;r<e;r++){const e=new L(i*t+r,i,r);s.push(e),this.tilesMap.set(e.id,e)}}for(let i=0;i<t;i++)for(let t=0;t<e;t++)this.tiles[i][t].neighbours=A(this.tiles,i,t),this.tiles[i][t].fullNeighbours=N(this.tiles,i,t)}precompute(){for(let t=0;t<this.width;t++)for(let e=0;e<this.height;e++){const i=this.tiles[t][e];i.computeYields(),i.computeMovementCosts(),i.computeSweetSpotValue()}this.precomputePassableAreas()}precomputePassableAreas(){const t=new Set;let e=1;for(let i=0;i<this.width;i++)for(let s=0;s<this.height;s++){const r=this.tiles[i][s];t.has(r)||r.landForm!==y.mountains&&this.computePassableArea(r,e++,t)}}computePassableArea(t,e,i){const s=[t];for(i.add(t);s.length;){const t=s.shift();t.passableArea=e;for(const e of t.neighbours){if(i.has(e))continue;const r=t.seaLevel===g.none&&e.seaLevel===g.none,o=t.seaLevel!==g.none&&e.seaLevel!==g.none;e.landForm===y.mountains||!r&&!o||(i.add(e),s.push(e))}}}get(t,e){return t<0||t>=this.width||e<0||e>=this.height?null:this.tiles[t][e]}}const D={[f.NW]:[[f.NE,f.NW],[f.NONE,f.NE]],[f.NE]:[[f.E,f.NE],[f.NONE,f.E]],[f.E]:[[f.SE,f.E],[f.NONE,f.SE]],[f.SE]:[[f.SW,f.SE],[f.NONE,f.SW]],[f.SW]:[[f.W,f.SW],[f.NONE,f.W]],[f.W]:[[f.NW,f.W],[f.NONE,f.NW]],[f.NONE]:[[f.NONE,f.NONE],[f.NONE,f.NONE]]},Y={[f.NW]:f.SE,[f.NE]:f.SW,[f.E]:f.W,[f.SE]:f.NW,[f.SW]:f.NE,[f.W]:f.E,[f.NONE]:f.NONE};class z{constructor(t){this.startingLocationsCount=t,this.startingLocations=[],this.riversSources=[],this.metadata=new Map}getStartingLocations(){return this.startingLocations}generate(t,e,i,s=.5,r=0){this.map=new q(t,e),this.width=t,this.height=e,this.seed=i,this.uniformity=s,this.seaLevel=r;for(let o=0;o<this.width;o++)for(let t=0;t<this.height;t++)this.metadata.set(this.map.tiles[o][t],{height:0,humidity:0,temperature:0});this.generateHeightmap(),this.generateTemperature(),this.generateHumidity();for(let o=0;o<this.width;o++)for(let t=0;t<this.height;t++){const e=this.map.tiles[o][t],i=this.metadata.get(e);i.height>1.3?e.landForm=y.mountains:i.height>.25&&(e.landForm=y.hills),e.climate=i.temperature<.2?i.temperature<.07?m.arctic:m.tundra:i.humidity<.1?m.desert:i.humidity<.3?m.savanna:i.humidity<.7&&i.temperature<.5?m.continental:i.temperature>.5?m.tropical:m.oceanic}for(const[o,n,a]of this.getNoisedTiles(new j([[.015,1],[.06,1],[.3,1]],this.seed)))n+(o.climate===m.tropical?.3:0)>-.2&&b(o)&&(o.forest=!0);return this.fixShallowWater(),this.adjustHeightmap(),this.placeRivers(),this.placeWetlands(),this.findStartingPositions(),this.map}generateHeightmap(){const t=Math.max(this.width,this.height),e=Math.floor(Math.pow(t,.4)),i=[];for(let a=0;a<e;a++)i.push([Math.pow(.6,a+4),1+this.uniformity*a]);const s=i.reduce((t,e)=>t+e[1],0),r=s*this.seaLevel,o=new j(i,this.seed),n=new j([[.015,1],[.06,1],[.3,1]],this.seed);for(let[a,l,d]of this.getNoisedTiles(o)){let t=0;const e=Math.min(a.x,this.width-a.x),i=.1*this.width;e<i&&(l-=s/2*Math.cos(Math.PI/2/i*e)),l>r&&(t=l,a.seaLevel=g.none,l>.05&&Math.random()>.97&&this.riversSources.push(a),t=n.at(a.x,a.y)),this.metadata.get(a).height=t}}generateTemperature(){for(const[t,e,i]of this.getNoisedTiles(new j([[.012,1],[.07,1]],this.seed))){const s=(1-i)/2,r=(e+1)/2*(1-i);this.metadata.get(t).temperature=Math.max(s,Math.min(1,s+r))}}generateHumidity(){for(const[t,e,i]of this.getNoisedTiles(new j([[.025,1],[.2,1]],this.seed))){const s=10*i,r=s<1.5*Math.PI?(Math.cos(s)+1)/2-.5:0,o=(e+1)/2;this.metadata.get(t).humidity=Math.max(0,Math.min(1,.8*r+o))}}*getNoisedTiles(t){for(let e=0;e<this.width;e++)for(let i=0;i<this.height;i++){const s=t.at(e,i),r=Math.floor(this.height/2),o=Math.abs((i-r)/r);yield[this.map.tiles[e][i],s,o]}}fixShallowWater(){for(let t=0;t<this.width;t++)for(let e=0;e<this.height;e++){const i=this.map.tiles[t][e];if(i.seaLevel===g.none)for(const t of i.neighbours)t.seaLevel===g.deep&&(t.seaLevel=g.shallow)}}adjustHeightmap(){let t=function(t){const e=[];for(let i=0;i<t.length;i++)for(let s=0;s<t[i].length;s++){const r=t[i][s];r.seaLevel===g.none&&r.neighbours.find(t=>t.seaLevel!==g.none)&&e.push(r)}return e}(this.map.tiles);const e=new Set,i=new Set(t);let s=0;for(;t.length;){s+=.7;for(const r of t)for(const t of r.neighbours)t.seaLevel!==g.none||i.has(t)||(i.add(t),e.add(t),this.metadata.get(t).height+=s);t=Array.from(e),e.clear()}}placeRivers(){for(const t of this.riversSources){if(t.riverParts.length)continue;let e=!0;for(const i of t.neighbours)i.seaLevel!==g.none&&(e=!1);e&&this.buildRiverPath(t,Math.round(5*Math.random()))}}buildRiverPath(t,e){if(e===f.NONE)return;const i=D[e].map(e=>e.map(e=>e===f.NONE?t:R(this.map.tiles,t,e))).filter(t=>t[0]&&t[1]&&t[0].seaLevel===g.none&&t[1].seaLevel===g.none&&t[0].riverParts.length<4&&t[1].riverParts.length<4);if(0===i.length)return;let s;if(1===i.length)s=i[0];else{const[t,e]=i;s=(this.metadata.get(t[0]).height+this.metadata.get(t[1]).height)/2<(this.metadata.get(e[0]).height+this.metadata.get(e[1]).height)/2?t:e}(function(t,e){const i=t.getDirectionTo(e);return!t.riverParts.includes(i)&&(t.riverParts.push(i),e.riverParts.push(Y[i]),!0)})(...s)&&this.buildRiverPath(s[0],s[0].getDirectionTo(s[1]))}placeWetlands(){for(const[t,e,i]of this.getNoisedTiles(new j([[.021,1],[.08,1],[.2,1]],this.seed)))e>0&&P(t)&&(t.wetlands=!0)}findStartingPositions(){let t=0;for(;t<1e4&&this.startingLocations.length<this.startingLocationsCount;){const e=Math.floor(Math.random()*this.width),i=Math.floor(Math.random()*this.height),s=this.map.tiles[e][i];s.seaLevel!==g.none||s.landForm===y.mountains||this.startingLocations.includes(s)||this.startingLocations.push(s),t++}}}class j{constructor(t,e){this.scales=t,this.noises=t.map(()=>new s(e))}at(t,e){let i=0;for(let s=0;s<this.noises.length;s++){const[r,o]=this.scales[s];i+=this.noises[s].noise2D(t*r,e*r)*o}return i}}const B={buildFarm:l.farm,buildMine:l.mine,buildSawmill:l.sawmill};class U{constructor(){this.id=this.constructor.id}}class G extends U{constructor(){super(...arguments),this.id="ownTile"}check(t){var e;return(null===(e=t.tile.areaOf)||void 0===e?void 0:e.player)===t.player}}class V extends U{constructor(t){super(),this.improvement=t,this.id="sameImprovement"}check(t){return t.tile.improvement!==this.improvement}}class _ extends U{constructor(t){super(),this.improvement=t,this.id="improvementPossible"}check(t){return e=t.tile,null===(i=this.improvement)||(i===l.farm?e.seaLevel===g.none&&e.landForm===y.plains&&e.climate!==m.arctic&&!e.forest&&!e.wetlands:i===l.mine?e.landForm===y.hills:i===l.sawmill&&e.forest&&!e.wetlands);var e,i}}class H extends U{constructor(){super(...arguments),this.id="publicWorks"}check(t,e){return t.player.yields.total.publicWorks>=function(t){if("buildRoad"===t)return h[d.road];const e=B[t];return void 0!==e?u[e]:0}(e)}}function $(t,e,i){e.actionPointsLeft=0,e.tile.improvement=i,e.tile.update(),e.player.updateUnitsWithoutOrders(),e.player.yields.total.publicWorks-=u[i],e.player.yields.costs.publicWorks+=c[i],e.player.yields.perTurn.publicWorks-=c[i]}const J={foundCity:{action:"foundCity",name:"Found a city",fn:function(t,e){t.citiesManager.spawn(e.tile,e.player)&&t.unitsManager.destroy(e)},requirements:[new class extends U{constructor(){super(...arguments),this.id="notForeignTile"}check(t){var e;return!t.tile.areaOf||(null===(e=t.tile.areaOf)||void 0===e?void 0:e.player)===t.player}}]},buildFarm:{action:"buildFarm",name:"Build a farm",fn:(t,e)=>$(0,e,l.farm),requirements:[new G,new V(l.farm),new _(l.farm),new H]},buildMine:{action:"buildMine",name:"Build a mine",fn:(t,e)=>$(0,e,l.mine),requirements:[new G,new V(l.mine),new _(l.mine),new H]},buildSawmill:{action:"buildSawmill",name:"Build a sawmill",fn:(t,e)=>$(0,e,l.sawmill),requirements:[new G,new V(l.sawmill),new _(l.sawmill),new H]},buildRoad:{action:"buildRoad",name:"Build a road",fn:(t,e)=>function(t,e){e.actionPointsLeft=0,e.tile.road=d.road,e.tile.update();for(const i of e.tile.neighbours)i.update();e.player.updateUnitsWithoutOrders(),e.player.yields.total.publicWorks-=h[d.road],e.player.yields.costs.publicWorks+=p[d.road],e.player.yields.perTurn.publicWorks-=p[d.road]}(0,e),requirements:[new class extends U{constructor(){super(...arguments),this.id="noRoad"}check(t){return null===t.tile.road}},new class extends U{constructor(){super(...arguments),this.id="roadPossible"}check(t){return(e=t.tile).seaLevel===g.none&&e.landForm!==y.mountains;var e}},new H]}};class K{}class Q extends K{constructor(t){super(),this.buildingId=t,this.id="building"}check(t){return t.buildingsIds.has(this.buildingId)}}class X extends K{constructor(t){super(),this.size=t,this.id="size"}check(t){return t.size>=this.size}}const Z=[{id:"settler",name:"Settler",type:"civilian",actionPoints:2,strength:0,actions:["foundCity"],productionCost:50,requirements:[],weakRequirements:[new Q("granary"),new X(3)]},{id:"worker",name:"Worker",type:"civilian",actionPoints:2,strength:0,actions:["buildFarm","buildMine","buildSawmill","buildRoad"],productionCost:20,requirements:[],weakRequirements:[new X(2)]},{id:"scout",name:"Scout",type:"military",actionPoints:2,strength:2,actions:[],productionCost:10,requirements:[],weakRequirements:[]},{id:"warrior",name:"Warrior",type:"military",actionPoints:2,strength:5,actions:[],productionCost:30,requirements:[],weakRequirements:[]}],tt=new Map;for(const Ut of Z)tt.set(Ut.id,Ut);class et{constructor(t,e,i){this.tile=t,this.definition=e,this.player=i,this.health=100,this.order=null,this.actionPointsLeft=e.actionPoints}doAction(t){this.canDoAction(t)&&(J[t].fn(this.player.game,this),F.units.add(this))}canDoAction(t){if(!this.actionPointsLeft)return!1;if(!this.definition.actions.includes(t))return!1;for(const e of J[t].requirements)if(!e.check(this,t))return!1;return!0}getFailedActionRequirements(t){return J[t].requirements.filter(e=>!e.check(this,t)).map(t=>t.id)}setOrder(t){this.order=t,this.player.updateUnitsWithoutOrders()}getPathDestination(){if(!this.path)return null;const t=this.path[this.path.length-1];return t[t.length-1]}getRange(){const t=new Set,e=new Map;return this._getRange(this.tile,this.actionPointsLeft,t,e),1===t.size&&t.delete(this.tile),t}_getRange(t=this.tile,e=this.actionPointsLeft,i,s){if(i.add(t),e<=0)return i;for(const r of t.neighbours){const o=s.get(r),n=t.neighboursCosts.get(r);if(n===1/0)continue;const a=e-n;(!o||a>o)&&(s.set(r,a),this._getRange(r,a,i,s))}return i}}var it=function(t){return t[t.hills=0]="hills",t[t.forest=1]="forest",t[t.river=2]="river",t[t.health=3]="health",t[t.flanks=4]="flanks",t}({}),st=function(t){return t[t.victory=0]="victory",t[t.undecided=1]="undecided",t[t.defeat=2]="defeat",t}({});function rt(t,e){const i=[...ot(t),...nt(t,e)],s=[...ot(e),...at(t,e)],r=t.definition.strength*i.reduce((t,e)=>t+e.value,1),o=e.definition.strength*s.reduce((t,e)=>t+e.value,1);return{attacker:{strength:r,modifiers:i,damage:lt(o/r)},defender:{strength:o,modifiers:s,damage:lt(r/o)}}}function ot(t){const e=[];return t.health<100&&e.push({type:it.health,value:(t.health-100)/200}),e}function nt(t,e){const i=[],s=dt(t,e);return s&&i.push({type:it.flanks,value:.15*s}),i}function at(t,e){const i=[];e.tile.landForm===y.hills&&i.push({type:it.hills,value:.5}),e.tile.forest&&i.push({type:it.forest,value:.3});const s=e.tile.getDirectionTo(t.tile);e.tile.riverParts.includes(s)&&i.push({type:it.river,value:.5});const r=dt(e,t);return r&&i.push({type:it.flanks,value:.15*r}),i}function lt(t){let e=(Math.pow((t+3)/4,4)+1)/2;return Math.round(30*e)}function dt(t,e){return e.tile.neighbours.filter(e=>!!e.units.find(e=>e.player===t.player&&e.definition.strength)).length-1}class ut{constructor(t){this.game=t,this.definitions=new Map,this.units=[],this.unitsMap=new Map,this.lastId=0;for(const e of Z)this.definitions.set(e.id,e)}spawn(t,e,i){const s=this.definitions.get(t);if(!s)throw Error(`UnitsManager: No unit with id "${t}"`);const r=new et(e,s,i);return r.id=this.lastId++,this.units.push(r),this.unitsMap.set(r.id,r),i.units.push(r),e.units.push(r),r.player.exploreTiles(r.tile.getTilesInRange(2)),r.player.unitsWithoutOrders.push(r),F.units.add(r),r}destroy(t){this.unitsMap.delete(t.id);let e=this.units.indexOf(t);-1!==e&&this.units.splice(e,1),e=t.player.units.indexOf(t),-1!==e&&t.player.units.splice(e,1),e=t.tile.units.indexOf(t),-1!==e&&t.tile.units.splice(e,1),t.player.updateUnitsWithoutOrders(),F.unitsDestroyed.add(t.id)}move(t,e){if(!t.actionPointsLeft)return;const i=this.getMovementCost(t,e);if(i===1/0)return;if(t.definition.strength)if(e.units.length){const i=e.units.find(e=>e.definition.strength&&e.player!==t.player);if(i&&(t.actionPointsLeft=Math.max(t.actionPointsLeft-3,0),function(t,e,i){const s=rt(e,i);return e.health-=s.attacker.damage,i.health-=s.defender.damage,e.health<0?(t.destroy(e),st.defeat):(F.units.add(e),i.health<0?(t.destroy(i),st.victory):(F.units.add(i),st.undecided))}(this,t,i)!==st.victory))return}else e.city&&e.city.player!==t.player&&e.city.changeOwner(t.player);const s=t.tile.units.indexOf(t);-1!==s&&t.tile.units.splice(s,1),e.units.push(t),t.tile=e,t.actionPointsLeft=Math.max(t.actionPointsLeft-i,0),t.player.exploreTiles(e.getTilesInRange(2))}moveAlongPath(t){if(t.path){for(t.setOrder(t.path.length?"go":null),F.units.add(t);t.actionPointsLeft&&t.path.length;)if(this.move(t,t.path[0][0]),t.path[0].shift(),t.path[0].length||t.path.shift(),!t.path.length)return t.path=null,void t.setOrder(null)}else t.setOrder(null)}getMovementCost(t,e){return t.tile.neighboursCosts.get(e)||1/0}nextTurn(){for(const t of this.units)t.path&&this.moveAlongPath(t),"skip"===t.order&&t.setOrder(null),t.actionPointsLeft=t.definition.actionPoints}}class ct{constructor(){this.revealMap=!1}}const ht=[{id:"granary",name:"Granary",productionCost:40,bonuses:{yieldValue:{food:3}},requirements:[],weakRequirements:[]},{id:"well",name:"Well",productionCost:20,bonuses:{yieldValue:{food:1}},requirements:[],weakRequirements:[]},{id:"bigGranary",name:"Grand granary",productionCost:100,bonuses:{yieldFactor:{food:.2}},requirements:[new Q("granary")],weakRequirements:[]},{id:"workshop",name:"Workshop",productionCost:80,bonuses:{yieldValue:{production:5}},requirements:[],weakRequirements:[]},{id:"bigWorkshop",name:"Grand workshop",productionCost:200,bonuses:{yieldFactor:{production:.2}},requirements:[new Q("workshop")],weakRequirements:[]},{id:"slaveMarket",name:"Slave market",productionCost:50,bonuses:{yieldValue:{publicWorks:2}},requirements:[],weakRequirements:[]},{id:"bigWorkshop",name:"Grand workshop",productionCost:200,bonuses:{yieldFactor:{production:.2}},requirements:[new Q("workshop")],weakRequirements:[]},{id:"monument",name:"Monument",productionCost:30,bonuses:{yieldValue:{culture:2}},requirements:[],weakRequirements:[]},{id:"allDoingBuilding",name:"All doing building",productionCost:500,bonuses:{yieldValue:{food:1,production:1},yieldFactor:{food:.1,production:.1}},requirements:[new Q("bigGranary"),new Q("bigWorkshop")],weakRequirements:[]}],pt=[{id:"growth",name:"Growth",productionCost:1/0,requirements:[],weakRequirements:[],bonuses:{transferProductionToFood:.25}},{id:"culture",name:"Culture",productionCost:1/0,requirements:[],weakRequirements:[],bonuses:{transferProductionToCulture:.25}},{id:"public-works",name:"Public works",productionCost:1/0,requirements:[],weakRequirements:[],bonuses:{transferProductionToPublicWorks:.25}}];class ft{constructor(t,e){this.tile=t,this.player=e,this.totalFood=0,this.foodConsumed=1,this.totalCulture=0,this.tileYields=Object.assign({},r),this.yields=Object.assign({},r),this.perTurn=Object.assign({},r),this.product=null,this.totalProduction=0,this.buildings=[],this.buildingsIds=new Set,this.tiles=new Set,this.workedTiles=new Set,this.notWorkedTiles=new Set,this.availableBuildings=[],this.disabledBuildings=new Set,this.availableUnits=[],this.disabledUnits=new Set,this.availableIdleProducts=[],this.disabledIdleProducts=new Set,this.changedSize=!1,this.addTile(t)}nextTurn(){this.changedSize=!1,this.progressExpansion(),this.progressProduction(),this.progressGrowth(),this.updateYields(),(this.player===this.player.game.trackedPlayer||this.changedSize)&&F.cities.add(this)}progressProduction(){this.product&&(this.totalProduction+=this.yields.production,this.totalProduction>=this.product.productDefinition.productionCost&&("unit"===this.product.type?this.player.game.unitsManager.spawn(this.product.productDefinition.id,this.tile,this.player):"building"===this.product.type&&(this.buildings.push(this.product.productDefinition),this.buildingsIds.add(this.product.productDefinition.id)),this.totalProduction=0,this.product=null))}progressGrowth(){this.totalFood+=this.yields.food-this.foodConsumed;const t=this.getFoodToGrow();if(this.totalFood>=t){this.size++,this.changedSize=!0;const e=this.pickBestTileToWork(this.notWorkedTiles);e&&this.workTile(e),this.totalFood-=t}else this.totalFood<0&&(this.size>1?(this.size--,this.changedSize=!0,this.totalFood+=t):this.totalFood=0)}progressExpansion(){this.totalCulture+=this.perTurn.culture;const t=this.getCultureToExpand();if(this.totalCulture>=t){this.totalCulture-=t;const e=this.pickBestTileToExpand(this.tile,this.getTilesAvailableForExpansion());e&&(this.addTile(e),e.sweetSpotValue=0)}}getCultureToExpand(){return Math.ceil(5*Math.pow(1.2,this.tiles.size))}getFoodToGrow(){return Math.ceil(15*Math.pow(1.2,this.size))}produceUnit(t){this.startProducing({type:"unit",productDefinition:t})}produceBuilding(t){this.canConstruct(t)&&this.startProducing({type:"building",productDefinition:t})}workOnIdleProduct(t){this.startProducing({type:"idleProduct",productDefinition:t}),this.updateYields(),this.player.updateYields()}cancelProduction(){if(this.product){const t=this.product.type;this.product=null,"idleProduct"===t&&(this.updateYields(),this.player.updateYields())}}startProducing(t){this.canProduce(t.productDefinition)&&(this.cancelProduction(),this.product=t,this.totalProduction=0,F.cities.add(this))}get turnsToGrow(){if(this.perTurn.food>=0){const t=this.getFoodToGrow()-this.totalFood;return Math.max(0,Math.ceil(t/this.perTurn.food))}return Math.max(0,Math.ceil(this.totalFood/this.perTurn.food)-1)}get turnsToProductionEnd(){return this.product?Math.ceil((this.product.productDefinition.productionCost-this.totalProduction)/this.yields.production):null}get turnsToExpand(){const t=this.getCultureToExpand()-this.totalCulture;return Math.ceil(t/this.perTurn.culture)}getTurnsToProduce(t){return Math.ceil(t.productionCost/this.yields.production)}updateYields(){var t,e;o(this.tileYields),this.tileYields.food=2,this.tileYields.production=1;for(const i of this.workedTiles)n(this.tileYields,i.yields);this.tileYields.production+=this.freeTileWorkers,a(this.yields,this.tileYields);for(const i of this.buildings)this.applyBonuses(i.bonuses);"idleProduct"===(null===(t=this.product)||void 0===t?void 0:t.type)&&this.applyBonuses(this.product.productDefinition.bonuses),(e=this.yields).food=Math.ceil(e.food),e.production=Math.ceil(e.production),e.culture=Math.ceil(e.culture),e.publicWorks=Math.ceil(e.publicWorks),this.foodConsumed=this.size,a(this.perTurn,this.yields),this.perTurn.food-=this.foodConsumed}applyBonuses(t){var e,i,s,r,o,n,a,l;this.yields.food+=(null===(e=t.yieldValue)||void 0===e?void 0:e.food)||0,this.yields.production+=(null===(i=t.yieldValue)||void 0===i?void 0:i.production)||0,this.yields.culture+=(null===(s=t.yieldValue)||void 0===s?void 0:s.culture)||0,this.yields.publicWorks+=(null===(r=t.yieldValue)||void 0===r?void 0:r.publicWorks)||0,(null===(o=t.yieldFactor)||void 0===o?void 0:o.food)&&(this.yields.food+=this.tileYields.food*t.yieldFactor.food),(null===(n=t.yieldFactor)||void 0===n?void 0:n.production)&&(this.yields.production+=this.tileYields.production*t.yieldFactor.production),(null===(a=t.yieldFactor)||void 0===a?void 0:a.culture)&&(this.yields.culture+=this.tileYields.culture*t.yieldFactor.culture),(null===(l=t.yieldFactor)||void 0===l?void 0:l.publicWorks)&&(this.yields.publicWorks+=this.tileYields.publicWorks*t.yieldFactor.publicWorks),t.transferProductionToFood&&(this.yields.food+=this.yields.production*t.transferProductionToFood),t.transferProductionToCulture&&(this.yields.culture+=this.yields.production*t.transferProductionToCulture),t.transferProductionToPublicWorks&&(this.yields.publicWorks+=this.yields.production*t.transferProductionToPublicWorks)}addTile(t){t.areaOf||(this.tiles.add(t),this.notWorkedTiles.add(t),t.areaOf=this,this.player.area.add(t),this.player.exploreTiles([t]),this.player.exploreTiles(t.neighbours),F.tiles.add(t))}removeTile(t){this.tiles.has(t)&&(this.tiles.delete(t),t.areaOf=null,this.player.area.remove(t),F.tiles.add(t))}workTile(t,e=!0){this.freeTileWorkers&&this.tiles.has(t)&&(this.workedTiles.add(t),this.notWorkedTiles.delete(t),e&&this.updateYields())}unworkTile(t,e=!0){this.workedTiles.delete(t),this.notWorkedTiles.add(t),e&&this.updateYields()}getTilesAvailableForExpansion(){const t=new Set;for(const e of this.tiles)for(const i of e.neighbours)i.areaOf||t.add(i);return t}pickBestTileToWork(t){let e=null,i=0;for(const s of t){const t=s.totalYields;t>i&&(i=t,e=s)}return e}pickBestTileToExpand(t,e){let i=null,s=-1/0;for(const r of e){const e=r.totalYields-t.getDistanceTo(r)/2;e>s&&(s=e,i=r)}return i}get freeTileWorkers(){return this.size-this.workedTiles.size}optimizeYields(){for(this.workedTiles.clear(),this.notWorkedTiles=new Set(this.tiles);this.freeTileWorkers&&this.notWorkedTiles.size;){const t=this.pickBestTileToWork(this.notWorkedTiles);if(!t)break;this.workTile(t,!1)}this.updateYields()}canConstruct(t){return!this.buildings.includes(t)}canProduce(t){for(const e of t.requirements)if(!e.check(this))return!1;for(const e of t.weakRequirements)if(!e.check(this))return!1;return!0}getAvailableProducts(t,e){const i=[];for(const s of t){let t=!0;for(const i of s.requirements)if(!i.check(e)){t=!1;break}t&&i.push(s)}return i}getDisabledProducts(t,e){const i=new Set;for(const s of t)for(const t of s.weakRequirements)t.check(e)||i.add(s);return i}updateProductsList(){this.availableUnits=this.getAvailableProducts(Z,this),this.disabledUnits=this.getDisabledProducts(this.availableUnits,this);const t=ht.filter(t=>{var e;return(null===(e=this.product)||void 0===e?void 0:e.productDefinition)!==t&&!this.buildings.includes(t)});this.availableBuildings=this.getAvailableProducts(t,this),this.disabledBuildings=this.getDisabledProducts(this.availableBuildings,this),this.availableIdleProducts=pt}changeOwner(t){if(this.player===t)return;const e=this.player;this.player=t;const i=Array.from(this.tiles);let s=e.cities.indexOf(this);-1!==s&&(e.cities.splice(s,1),e.area.removeBulk(i)),t.cities.push(this),t.area.addBulk(i),t.updateYields(),e.updateYields(),t.exploreTiles(this.tiles),this.cancelProduction(),F.cities.add(this);for(const r of this.tiles)F.tiles.add(r)}}class mt{constructor(){this.cities=[],this.citiesMap=new Map,this.lastId=0}spawn(t,e,i=!0){if(t.city)return null;if(t.landForm===y.mountains||t.seaLevel!==g.none)return null;const s=new ft(t,e);s.id=this.lastId++,s.size=1,s.name=`City ${s.id}`,s.tile=t,this.cities.push(s),this.citiesMap.set(s.id,s);for(const r of t.neighbours)s.addTile(r);e.addCity(s),t.city=s,t.forest=!1,t.wetlands=!1,t.road=d.road,t.update();for(const r of t.getTilesInRange(3))r.sweetSpotValue=0;return i&&s.optimizeYields(),F.cities.add(s),s}destroy(t){let e=this.cities.indexOf(t);-1!==e&&this.cities.splice(e,1),this.citiesMap.delete(t.id),e=t.player.cities.indexOf(t),-1!==e&&t.player.cities.splice(e,1),t.tile.city=null;for(const i of t.tiles)t.removeTile(i);F.citiesDestroyed.add(t.id)}nextTurn(){for(const t of this.cities)t.nextTurn()}}class yt{constructor(){this.id=0,this.tiles=new Set}add(t){this.tiles.add(t),F.addAreaTiles(this.id,[t])}addBulk(t){for(const e of t)this.tiles.add(e);F.addAreaTiles(this.id,t)}remove(t){this.tiles.delete(t),F.removeAreaTiles(this.id,[t])}removeBulk(t){for(const e of t)this.tiles.delete(e);F.removeAreaTiles(this.id,t)}}class gt{constructor(){this.areas=[],this.areasMap=new Map,this.lastId=0}make(){const t=new yt;return t.id=this.lastId++,this.areas.push(t),this.areasMap.set(t.id,t),t}destroy(t){this.areasMap.delete(t.id);const e=this.areas.indexOf(t);-1!==e&&this.areas.splice(e,1)}}class vt{constructor(){this.debug=new ct,this.players=[],this.playersMap=new Map,this.activePlayerIndex=-1,this.humanPlayer=null,this.turn=1,this.areasManager=new gt,this.unitsManager=new ut(this),this.citiesManager=new mt}start(){this.activePlayerIndex=-1,this.nextPlayer()}addPlayer(t){t.id=this.players.length,this.players.push(t),this.playersMap.set(t.id,t),this.trackedPlayer||(this.trackedPlayer=t)}nextPlayer(){this.activePlayerIndex++,this.activePlayerIndex>=this.players.length&&(this.nextTurn(),this.activePlayerIndex=0),this.activePlayer.ai?(this.activePlayer.ai.nextTurn(),this.nextPlayer()):this.trackedPlayer!==this.activePlayer&&(this.trackedPlayer=this.activePlayer,F.trackedPlayer=this.trackedPlayer)}nextTurn(){this.unitsManager.nextTurn(),this.citiesManager.nextTurn();for(const t of this.players)t.nextTurn();this.turn++,F.turn=this.turn}get activePlayer(){return this.players[this.activePlayerIndex]}}const wt=[16711680,65280,255,16776960,65535,16711935,10066329,14540253,16493740,15120499,3769899,3043694,7624635,11229115,7952444,11975654,11975910];class bt{constructor(t,e){this.game=t,this.color=e,this.exploredTiles=new Set,this.visibleTiles=new Set,this.units=[],this.cities=[],this.citiesWithoutProduction=[],this.unitsWithoutOrders=[],this.yields={costs:Object.assign({},r),income:Object.assign({},r),total:Object.assign({},r),perTurn:Object.assign({},r)},this.area=this.game.areasManager.make(),this.ai=null}exploreTiles(t){for(const e of t)this.exploredTiles.has(e)||(this.exploredTiles.add(e),this.id===this.game.trackedPlayer.id&&F.tilesExplored.add(e.id))}updateYields(){o(this.yields.income),o(this.yields.costs),o(this.yields.perTurn);for(const i of this.cities){for(const t of i.tiles)t.city||(null!==t.improvement&&this.yields.costs.publicWorks++,null!==t.road&&this.yields.costs.publicWorks++);n(this.yields.income,i.yields)}var t,e;a(this.yields.perTurn,this.yields.income),(t=this.yields.perTurn).food-=(e=this.yields.costs).food,t.production-=e.production,t.culture-=e.culture,t.publicWorks-=e.publicWorks,this===this.game.trackedPlayer&&(F.trackedPlayerYields=this.yields)}nextTurn(){this.updateYields(),n(this.yields.total,this.yields.perTurn),this.yields.total.publicWorks=Math.max(0,this.yields.total.publicWorks),this.updateCitiesWithoutProduction(),this.updateUnitsWithoutOrders()}updateCitiesWithoutProduction(){this.citiesWithoutProduction=this.cities.filter(t=>!t.product)}updateUnitsWithoutOrders(){this.unitsWithoutOrders=this.units.filter(t=>!t.order&&t.actionPointsLeft)}addCity(t){this.cities.push(t)}}const Pt=new Map;for(const Ut of pt)Pt.set(Ut.id,Ut);function Tt(t,e){const i=performance.now(),s=t.tile;if(s===e)return null;if(s.passableArea!==e.passableArea)return null;const r=new Set,o=new Map,n=new Map,a=new Map,l=1/t.definition.actionPoints;for(o.set(s,0),a.set(s,0),n.set(s,[0,t.definition.actionPoints,null]);o.size;){let s,d=1/0;for(const[t,e]of o.entries())e<d&&(d=e,s=t);let[u,c,...h]=n.get(s);if(c||(c=t.definition.actionPoints,u++),r.add(s),o.delete(s),s===e){const t=performance.now();return console.debug(`pathfinding took ${Math.round(t-i)}ms`),kt(n,e)}for(const i of s.neighbours)if(!r.has(i)){let r=t.player.exploredTiles.has(i)?s.neighboursCosts.get(i):1;if(r===1/0)continue;let d=Math.max(0,c-r);r*=l,d||(r=1);const h=a.get(s)+r;(!a.has(i)||h<a.get(i))&&(a.set(i,h),o.set(i,h+Mt(i,e)*l),n.set(i,[u,d,s]))}}const d=performance.now();return console.debug(`pathfinding took ${Math.round(d-i)}ms`),null}function Mt(t,e){return Math.sqrt((t.x-e.x)*(t.x-e.x)+(t.y-e.y)*(t.y-e.y))}function kt(t,e){let i=e,s=null,r=[e];const o=[r];for(;;){const[e,n,a]=t.get(i);if(!a||!t.has(a))return o;e!==s&&(s=e,r=[],o.unshift(r)),r.unshift(a),i=a}}class xt{constructor(t){this.player=t}nextTurn(){for(const t of this.player.unitsWithoutOrders)t.order||t.definition.actions.includes("foundCity")&&this.processSettler(t);for(const t of this.player.citiesWithoutProduction)t.updateProductsList(),t.product||this.produceNext(t)}processSettler(t){const e=t.getPathDestination();if(!e||e.areaOf){const e=this.findCityLocation(t.tile);if(!e)return void(t.order="sleep");t.tile===e?t.doAction("foundCity"):t.path=Tt(t,e)}t.path&&this.player.game.unitsManager.moveAlongPath(t)}produceNext(t){const e=tt.get("settler");if(Math.random()>.7&&t.canProduce(e)&&this.findCityLocation(t.tile))return void t.produceUnit(e);const i=t.availableBuildings.filter(e=>!t.disabledBuildings.has(e));i.length?t.produceBuilding(i[0]):t.workOnIdleProduct(Pt.get("culture"))}findCityLocation(t){const e=t.getTilesInRange(5);let i=0,s=null;for(const r of e)t.passableArea===r.passableArea&&r.sweetSpotValue>i&&(i=r.sweetSpotValue,s=r);return s}}const Wt=new Map;for(const Ut of ht)Wt.set(Ut.id,Ut);function Ot(t){const e=[];let i={};for(let s=0;s<t.width;s++)for(let r=0;r<t.height;r++){const o=t.tiles[s][r],n={};o.seaLevel!==i.seaLevel&&(n.seaLevel=o.seaLevel),o.climate!==i.climate&&(n.climate=o.climate),o.landForm!==i.landForm&&(n.landForm=o.landForm),o.forest!==i.forest&&(n.forest=o.forest),o.wetlands!==i.wetlands&&(n.wetlands=o.wetlands),o.improvement!==i.improvement&&(n.improvement=o.improvement),o.road!==i.road&&(n.road=o.road),o.riverParts.length&&(n.riverParts=o.riverParts),e.push(n),i=o}return e}function St(t,e){const i=new bt(t,e.color||0);e.ai&&(i.ai=new xt(i));for(const s of e.exploredTiles)i.exploredTiles.add(t.map.tilesMap.get(s));return i.yields.total=e.yieldsTotal,i.updateYields(),i}function Ct(t,e){const i=t.map.tilesMap.get(e.tile),s=t.citiesManager.spawn(i,t.players[e.player],!1);if(s){s.name=e.name,s.size=e.size,s.totalFood=e.totalFood,s.totalProduction=e.totalProduction,s.totalCulture=e.totalCulture;for(const i of e.tiles)s.addTile(t.map.tilesMap.get(i));for(const i of e.workedTiles)s.workTile(t.map.tilesMap.get(i));if(e.product){let i;i="unit"===e.product.type?t.unitsManager.definitions.get(e.product.id):"building"===e.product.type?Wt.get(e.product.id):Pt.get(e.product.id),s.product={type:e.product.type,productDefinition:i}}s.buildings=e.buildings.map(t=>Wt.get(t)),s.buildingsIds=new Set(s.buildings.map(t=>t.id)),s.updateYields()}}function Ft(t,e){var i;const s=t.map.tilesMap.get(e.tile),r=t.unitsManager.spawn(e.definition,s,t.players[e.player]);r.actionPointsLeft=e.actionPointsLeft,r.health=e.health,r.order=e.order,r.path=(null===(i=e.path)||void 0===i?void 0:i.map(e=>e.map(e=>t.map.tilesMap.get(e))))||null}let Et;const It={"game.new":function(t){Et=new vt;for(let i=0;i<t.humanPlayersCount+t.aiPlayersCount;i++){const e=new bt(Et,wt[i]);i>=t.humanPlayersCount&&(e.ai=new xt(e)),Et.addPlayer(e)}const e=new z(Et.players.length);Et.map=e.generate(t.width,t.height,t.seed,t.uniformity,t.seaLevel),Et.map.precompute();for(let i=0;i<Et.players.length;i++)Et.unitsManager.spawn("settler",e.getStartingLocations()[i],Et.players[i]);return Et.start(),T(Et)},"game.saveDump":function(){return JSON.stringify({turn:(t=Et).turn,trackedPlayerId:t.trackedPlayer.id,activePlayerIndex:t.activePlayerIndex,map:(e=t.map,{width:e.width,height:e.height,tiles:Ot(e)}),players:t.players.map(t=>{return{id:(e=t).id,ai:!!e.ai,color:e.color,exploredTiles:Array.from(e.exploredTiles).map(t=>t.id),yieldsTotal:e.yields.total};var e}),units:t.unitsManager.units.map(t=>{return{id:(e=t).id,tile:e.tile.id,definition:e.definition.id,actionPointsLeft:e.actionPointsLeft,health:e.health,player:e.player.id,order:e.order,path:(null===(i=e.path)||void 0===i?void 0:i.map(t=>t.map(t=>t.id)))||null};var e,i}),cities:t.citiesManager.cities.map(t=>{return{id:(e=t).id,name:e.name,size:e.size,player:e.player.id,tile:e.tile.id,totalFood:e.totalFood,totalProduction:e.totalProduction,totalCulture:e.totalCulture,product:e.product?{type:e.product.type,id:e.product.productDefinition.id}:null,tiles:Array.from(e.tiles).map(t=>t.id),workedTiles:Array.from(e.workedTiles).map(t=>t.id),buildings:e.buildings.map(t=>t.id)};var e})});var t,e},"game.loadDump":function(t){return Et=function(t){const e=new vt;e.turn=t.turn,e.map=function(t){const e=new q(t.width,t.height);let i=e.tiles[0][0],s=0;for(let r=0;r<t.width;r++)for(let o=0;o<t.height;o++){const n=t.tiles[s],a=e.tiles[r][o];a.climate=void 0!==n.climate?n.climate:i.climate,a.seaLevel=void 0!==n.seaLevel?n.seaLevel:i.seaLevel,a.landForm=void 0!==n.landForm?n.landForm:i.landForm,a.improvement=void 0!==n.improvement?n.improvement:i.improvement,a.road=void 0!==n.road?n.road:i.road,a.riverParts=n.riverParts||[],a.forest=void 0!==n.forest?n.forest:i.forest,i=a,s++}return e.precompute(),e}(t.map);for(const i of t.players){const t=St(e,i);e.addPlayer(t)}e.activePlayerIndex=t.activePlayerIndex;for(const i of t.units)Ft(e,i);for(const i of t.cities)Ct(e,i);for(const i of e.players)i.updateCitiesWithoutProduction(),i.updateUnitsWithoutOrders(),i.updateYields();return e}(JSON.parse(t)),T(Et)},"game.nextPlayer":function(){Et.nextPlayer()},"trackedPlayer.revealWorld":function(){for(let t=0;t<Et.map.width;t++)Et.trackedPlayer.exploreTiles(Et.map.tiles[t])},"trackedPlayer.set":function(t){const e=Et.players.find(e=>e.id===t);if(e)return Et.trackedPlayer=e,O(Et.trackedPlayer)},"unit.spawn":function(t){const e=Et.map.tilesMap.get(t.tileId),i=Et.playersMap.get(t.playerId);e&&i&&Et.unitsManager.spawn(t.definitionId,e,i)},"unit.getDetails":function(t){const e=Et.unitsManager.unitsMap.get(t);return e?C(e):null},"unit.doAction":function(t){const e=Et.unitsManager.unitsMap.get(t.unitId);return e?(e.doAction(t.action),C(e)):null},"unit.setOrder":function(t){const e=Et.unitsManager.unitsMap.get(t.unitId);return e?(e.setOrder(t.order),C(e)):null},"unit.findPath":function(t){const e=Et.unitsManager.unitsMap.get(t.unitId),i=Et.map.tilesMap.get(t.destinationId);return e&&i?(e.path=Tt(e,i),C(e)):null},"unit.disband":function(t){const e=Et.unitsManager.unitsMap.get(t);if(!e)return null;Et.unitsManager.destroy(e)},"unit.moveAlongPath":function(t){const e=Et.unitsManager.unitsMap.get(t);return e?(Et.unitsManager.moveAlongPath(e),C(e)):null},"unit.getRange":function(t){const e=Et.unitsManager.unitsMap.get(t);if(!e)return[];const i=e.getRange();return Array.from(i).map(t=>t.id)},"unit.getFailedActionRequirements":function(t){const e=Et.unitsManager.unitsMap.get(t.unitId);return e?e.getFailedActionRequirements(t.action):[]},"unit.simulateCombat":function(t){const e=Et.unitsManager.unitsMap.get(t.attackerId),i=Et.unitsManager.unitsMap.get(t.defenderId);return e&&i?rt(e,i):null},"tile.update":Lt,"tile.bulkUpdate":Nt,"city.getDetails":At,"city.produce":Rt,"city.getRange":qt,"city.getWorkTiles":Dt,"city.workTile":Yt,"city.unworkTile":zt,"city.optimizeYields":jt,"area.getTiles":Bt};function Lt(t){const e=Et.map.tilesMap.get(t.id);e&&(Object.assign(e,t),e.update())}function Nt(t){for(const e of t)Lt(e)}function At(t){const e=Et.citiesManager.citiesMap.get(t);if(e)return W(e)}function Rt(t){const e=Et.citiesManager.citiesMap.get(t.cityId);if(e)return"building"===t.type?e.produceBuilding(Wt.get(t.productId)):"unit"===t.type?e.produceUnit(tt.get(t.productId)):e.workOnIdleProduct(Pt.get(t.productId)),W(e)}function qt(t){const e=Et.citiesManager.citiesMap.get(t);if(e)return Array.from(e.tiles).map(t=>t.id)}function Dt(t){const e=Et.citiesManager.citiesMap.get(t);return e?{workedTiles:Array.from(e.workedTiles).map(t=>t.id),notWorkedTiles:Array.from(e.notWorkedTiles).map(t=>t.id)}:{}}function Yt(t){const e=Et.citiesManager.citiesMap.get(t.cityId),i=Et.map.tilesMap.get(t.tileId);return e&&i?(e.workTile(i),W(e)):null}function zt(t){const e=Et.citiesManager.citiesMap.get(t.cityId),i=Et.map.tilesMap.get(t.tileId);return e&&i?(e.unworkTile(i),W(e)):null}function jt(t){const e=Et.citiesManager.citiesMap.get(t);return e?(e.optimizeYields(),W(e)):null}function Bt(t){const e=Et.areasManager.areasMap.get(t);return e?Array.from(e.tiles).map(t=>t.id):[]}addEventListener("message",({data:t})=>{const e=It[t.command];if(!e)return void console.error(`No handler for command "${t.command}".`);const i=e(t.data),s=F.flush();Et.trackedPlayer.updateCitiesWithoutProduction(),Et.trackedPlayer.updateUnitsWithoutOrders();const r=function(){const t=Et.trackedPlayer;return t.citiesWithoutProduction.length?{task:"city",id:t.citiesWithoutProduction[0].id}:t.unitsWithoutOrders.length?{task:"unit",id:t.unitsWithoutOrders[0].id}:null}();postMessage({result:i,changes:s,nextTask:r})})}});