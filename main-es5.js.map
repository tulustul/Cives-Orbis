{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/core.worker.ts","webpack:///src/app/api/change-handlers.ts","webpack:///src/app/api/city-details.ts","webpack:///src/app/api/city.ts","webpack:///src/app/api/game.ts","webpack:///src/app/api/index.ts","webpack:///src/app/api/internal/changes.ts","webpack:///src/app/api/internal/commander.ts","webpack:///src/app/api/internal/listener.ts","webpack:///src/app/api/internal/worker.ts","webpack:///src/app/api/map.ts","webpack:///src/app/api/player.ts","webpack:///src/app/api/saving.ts","webpack:///src/app/api/state.ts","webpack:///src/app/api/tracked-player.ts","webpack:///src/app/api/unit-details.ts","webpack:///src/app/api/unit.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/controls.ts","webpack:///src/app/core/area.ts","webpack:///src/app/core/areas-manager.ts","webpack:///src/app/core/buildings.ts","webpack:///src/app/core/cities-manager.ts","webpack:///src/app/core/city.ts","webpack:///src/app/core/collector.ts","webpack:///src/app/core/debug.ts","webpack:///src/app/core/game.ts","webpack:///src/app/core/idle-product.ts","webpack:///src/app/core/product.ts","webpack:///src/app/core/serialization/channel.ts","webpack:///src/app/core/tile-improvements.ts","webpack:///src/app/core/unit-actions.ts","webpack:///src/app/core/unit-manager.ts","webpack:///src/app/core/unit.ts","webpack:///src/app/core/yields.ts","webpack:///src/app/data/buildings.ts","webpack:///src/app/data/idle-products.ts","webpack:///src/app/data/units.ts","webpack:///src/app/game-canvas/game-canvas.component.ts","webpack:///src/app/game-canvas/game-canvas.component.html","webpack:///src/app/map-generators/utils.ts","webpack:///src/app/renderer/animation.ts","webpack:///src/app/renderer/area.ts","webpack:///src/app/renderer/camera.ts","webpack:///src/app/renderer/constants.ts","webpack:///src/app/renderer/map.ts","webpack:///src/app/renderer/minimap.ts","webpack:///src/app/renderer/overlays.ts","webpack:///src/app/renderer/path.ts","webpack:///src/app/renderer/politics.ts","webpack:///src/app/renderer/renderer.ts","webpack:///src/app/renderer/tile-container.ts","webpack:///src/app/renderer/tile/city.ts","webpack:///src/app/renderer/tile/river.ts","webpack:///src/app/renderer/tile/terrain.ts","webpack:///src/app/renderer/tile/unit.ts","webpack:///src/app/renderer/tile/yields.ts","webpack:///src/app/renderer/utils.ts","webpack:///src/app/shared/hex-math.ts","webpack:///src/app/shared/index.ts","webpack:///src/app/shared/tile.interface.ts","webpack:///src/app/ui/bonuses/bonuses.component.ts","webpack:///src/app/ui/bonuses/bonuses.component.html","webpack:///src/app/ui/button.directive.ts","webpack:///src/app/ui/cities-layer/cities-layer.component.ts","webpack:///src/app/ui/cities-layer/cities-layer.component.html","webpack:///src/app/ui/cities-layer/city-info/city-info.component.ts","webpack:///src/app/ui/cities-layer/city-info/city-info.component.html","webpack:///src/app/ui/city-view/city-view.component.html","webpack:///src/app/ui/city-view/city-view.component.ts","webpack:///src/app/ui/city-view/work-tiles/work-tiles.component.html","webpack:///src/app/ui/city-view/work-tiles/work-tiles.component.ts","webpack:///src/app/ui/debug/debug.component.ts","webpack:///src/app/ui/debug/debug.component.html","webpack:///src/app/ui/editor/city-editor/city-editor.component.ts","webpack:///src/app/ui/editor/city-editor/city-editor.component.html","webpack:///src/app/ui/editor/constants.ts","webpack:///src/app/ui/editor/editor.component.ts","webpack:///src/app/ui/editor/editor.component.html","webpack:///src/app/ui/editor/players-editor/players-editor.component.html","webpack:///src/app/ui/editor/players-editor/players-editor.component.ts","webpack:///src/app/ui/editor/tile-editor/tile-editor.component.ts","webpack:///src/app/ui/editor/tile-editor/tile-editor.component.html","webpack:///src/app/ui/editor/tile-painting/tile-painting.component.ts","webpack:///src/app/ui/editor/tile-painting/tile-painting.component.html","webpack:///src/app/ui/editor/unit-editor/unit-editor.component.ts","webpack:///src/app/ui/editor/unit-editor/unit-editor.component.html","webpack:///src/app/ui/game-info/game-info.component.ts","webpack:///src/app/ui/game-info/game-info.component.html","webpack:///src/app/ui/game-menu/game-menu.component.ts","webpack:///src/app/ui/game-menu/game-menu.component.html","webpack:///src/app/ui/game-menu/load-view/load-view.component.html","webpack:///src/app/ui/game-menu/load-view/load-view.component.ts","webpack:///src/app/ui/game-menu/main-menu-view/main-menu-view.component.ts","webpack:///src/app/ui/game-menu/main-menu-view/main-menu-view.component.html","webpack:///src/app/ui/game-menu/new-game-view/new-game-view.component.html","webpack:///src/app/ui/game-menu/new-game-view/new-game-view.component.ts","webpack:///src/app/ui/game-menu/save-view/save-view.component.ts","webpack:///src/app/ui/game-menu/save-view/save-view.component.html","webpack:///src/app/ui/game-menu/saves-list/saves-list.component.ts","webpack:///src/app/ui/game-menu/saves-list/saves-list.component.html","webpack:///src/app/ui/map-ui.ts","webpack:///src/app/ui/minimap/minimap.component.ts","webpack:///src/app/ui/minimap/minimap.component.html","webpack:///src/app/ui/next-turn-button/next-turn-button.component.ts","webpack:///src/app/ui/next-turn-button/next-turn-button.component.html","webpack:///src/app/ui/next-turn.service.ts","webpack:///src/app/ui/percent-bonus.pipe.ts","webpack:///src/app/ui/player-yields/player-yields.component.ts","webpack:///src/app/ui/player-yields/player-yields.component.html","webpack:///src/app/ui/product-requirements/product-requirements.component.ts","webpack:///src/app/ui/product-requirements/product-requirements.component.html","webpack:///src/app/ui/turn-counter/turn-counter.component.ts","webpack:///src/app/ui/turn-counter/turn-counter.component.html","webpack:///src/app/ui/turns.pipe.ts","webpack:///src/app/ui/ui-state.ts","webpack:///src/app/ui/unit-action-requirements/unit-action-requirements.component.html","webpack:///src/app/ui/unit-action-requirements/unit-action-requirements.component.ts","webpack:///src/app/ui/unit-marker/unit-marker.component.ts","webpack:///src/app/ui/unit-marker/unit-marker.component.html","webpack:///src/app/ui/unit-panel/unit-panel.component.html","webpack:///src/app/ui/unit-panel/unit-panel.component.ts","webpack:///src/app/ui/widgets/modal/modal.component.ts","webpack:///src/app/ui/widgets/modal/modal.component.html","webpack:///src/app/ui/widgets/multiselect/multiselect.component.ts","webpack:///src/app/ui/widgets/multiselect/multiselect.component.html","webpack:///src/app/ui/widgets/progress-bar/progress-bar.component.ts","webpack:///src/app/ui/widgets/progress-bar/progress-bar.component.html","webpack:///src/app/ui/widgets/radio/radio.component.ts","webpack:///src/app/ui/widgets/radio/radio.component.html","webpack:///src/app/ui/widgets/spinner/spinner.component.ts","webpack:///src/app/ui/widgets/tabs/index.ts","webpack:///src/app/ui/widgets/tabs/tab/tab.component.ts","webpack:///src/app/ui/widgets/tabs/tab/tab.component.html","webpack:///src/app/ui/widgets/tabs/tabs.component.ts","webpack:///src/app/ui/widgets/tabs/tabs.component.html","webpack:///src/app/ui/widgets/toggle/toggle.component.ts","webpack:///src/app/ui/widgets/toggle/toggle.component.html","webpack:///src/app/ui/widgets/tooltip.directive.ts","webpack:///src/app/ui/widgets/tooltip/tooltip.component.ts","webpack:///src/app/ui/widgets/tooltip/tooltip.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","HANDLERS","onTilesUpdate","onUnitUpdate","onUnitDestroyed","onCityUpdate","onTurn","onAreaDestroyed","onAreaTilesAdded","onAreaTilesRemoved","onTrackedPlayerSet","onPlayerYieldsUpdate","onTilesExplored","initChangeHandlers","state","unitChanneled","unit","unitsMap","get","update","next","newUnit","units","push","destroy","cityChanneled","city","citiesMap","newCity","cities","turn","data","area","areasMap","addTiles","map","getTilesFromIds","tiles","removeTiles","yields","trackedPlayer","tilesIds","tilesMap","exploreTiles","tilesChanneled","tileChanneled","tile","Object","assign","areaOf","cityId","CityDetails","game","citySimple","name","size","tileId","player","playersMap","playerId","totalFood","foodToGrow","turnsToGrow","totalProduction","turnsToProductionEnd","product","productId","productType","defition","type","productDefinition","foodConsumed","totalCulture","cultureToExpand","tileYields","perTurn","buildings","buildingsIds","Set","workedTiles","availableBuildings","availableIdleProducts","availableUnits","disabledBuildings","disabledUnits","disabledIdleProducts","Math","ceil","productionCost","production","cityData","building","idleProduct","notWorkedTiles","has","remainingCulture","culture","City","set","foodPerTurn","productionRequired","productionPerTurn","productName","ids","GameApi","_state$","state$","asObservable","init$","pipe","stop$","_nextTask$","nextTask$","mapGeneratorOptions","gameChanneled","value","gameApi","changeHandlers","Map","setChangesHandlers","handlers","entries","changeType","handler","makeCommand","command","reject","postMessage","initWorkerListeners","addEventListener","onError","onMessage","event","executor","shift","console","error","changes","length","change","debug","result","nextTask","message","worker","Worker","awaitingExecutors","TilesMap","width","height","x","y","neighbours","fullNeighbours","Player","color","cssColor","toString","padStart","vec4Color","parseInt","areaId","savesKeyPrefix","listKey","saveGameData","saveName","storeData","loadGameData","getSave","deleteSaveGame","saveGames","listSaveGames","includes","localStorage","removeItem","index","indexOf","splice","saveList","getItem","JSON","parse","exportSave","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","importSave","file","extension","filename","endsWith","originalName","slice","saves","i","readFile","reader","FileReader","readAsText","onload","setItem","stringify","GameState","_turn$","turn$","players","_tilesUpdated$","tilesUpdated$","_unitSpawned$","unitSpawned$","_unitUpdated$","unitUpdated$","_unitDestroyed$","unitDestroyed$","_citySpawned$","citySpawned$","_cityUpdated$","cityUpdated$","_cityDestroyed$","cityDestroyed$","_areaSpawned$","areaSpawned$","_areaUpdated$","areaUpdated$","_areaDestroyed$","areaDestroyed$","_tilesExplored$","tilesExplored$","_trackedPlayer$","trackedPlayer$","restorePlayers","restoreUnits","restoreCities","preprocess","unitId","serializeTileToUpdate","climate","landForm","seaLevel","riverParts","forest","wetlands","improvement","road","t","tileIds","TrackedPlayer","exploredTiles","add","UnitDetails","path","definition","definitionId","actionPointsLeft","order","action","destination","destinationId","Unit","AppComponent","uiState","mapUi","title","selector","templateUrl","styleUrls","changeDetection","OnPush","AppModule","provide","useValue","declarations","imports","providers","bootstrap","Controls","camera","nextTurnService","isMousePressed","_mouseButton$","mouseButton$","button","preventDefault","stopPropagation","selectedUnit","mouseButton","getTileFromMouseEvent","findPath","setPath","hoveredTile","clickTile","screenToGame","clientX","clientY","moveAlongPath","unitRangeArea","getRange","setTiles","hoverTile","allowMapPanning","moveBy","movementX","movementY","scaleByWithEasing","deltaY","key","menuVisible$","AreaCore","addAreaTiles","removeAreaTiles","AreasManager","areas","lastId","BUILDINGS_MAP","CitiesManager","isNew","mountains","none","neighbour","addTile","addCity","getTilesInRange","sweetSpotValue","optimizeYields","removeTile","citiesDestroyed","nextTurn","CityCore","changedSize","progressExpansion","progressProduction","progressGrowth","updateYields","unitsManager","spawn","food","bestWorkableTile","pickBestTileToWork","workTile","pow","pickBestTileToExpand","getTilesAvailableForExpansion","startProducing","canConstruct","canProduce","cancelProduction","freeTileWorkers","applyBonuses","bonuses","yieldValue","publicWorks","yieldFactor","transferProductionToFood","transferProductionToCulture","transferProductionToPublicWorks","remove","availableTiles","bestTile","bestYields","totalYields","cityTile","bestScore","Infinity","score","getDistanceTo","clear","requirements","r","check","weakRequirements","products","results","p","ok","getAvailableProducts","getDisabledProducts","notBuildBuildings","filter","b","newOwner","oldOwner","cityTiles","Array","from","removeBulk","addBulk","remainingFood","remainingProduction","Collector","unitsDestroyed","areaTilesAdded","areaTilesRemoved","tilesExplored","trackedPlayerYields","undefined","collector","Debug","revealMap","Game","activePlayerIndex","humanPlayer","areasManager","citiesManager","nextPlayer","activePlayer","ai","IDLE_PRODUCTS_MAP","ProductRequirement","BuildingRequirement","buildingId","SizeRequirement","gameToChannel","mapToChannel","playerToChannel","trackedPlayerToChannel","u","unitToChannel","c","cityToChannel","row","tileToChannel","unitsIds","cityDetailsToChannel","updateProductsList","unitDetailsToChannel","TileImprovement","TileRoad","IMPROVEMENT_PUBLIC_WORKS_COSTS","farm","mine","sawmill","IMPROVEMENT_PUBLIC_WORKS_COSTS_PER_TURN","ROAD_PUBLIC_WORKS_COSTS","ROAD_PUBLIC_WORKS_COSTS_PER_TURN","ACTION_TO_IMPROVEMENT","buildFarm","buildMine","buildSawmill","getPublicWorksRequired","getPublicWorksPerTurn","ActionRequirement","constructor","OwnTileRequirement","NotForeignTileRequirement","ImprovementNotYetBuiltRequirement","IsImprovementPossibleRequirement","NoRoadRequirement","isRoadPossibleRequirement","PublicWorksPointsRequirement","total","foundCity","buildImprovement","updateUnitsWithoutOrders","costs","buildRoad","ACTIONS","fn","UnitsManager","definitions","unitsWithoutOrders","cost","getMovementCost","power","find","changeOwner","max","setOrder","move","target","neighboursCosts","actionPoints","UNITS_MAP","UnitCore","canDoAction","actions","lastPathTurn","actionPointsLeftAtTile","_getRange","oldActionPointsLeft","newActionPointsLeft","EMPTY_YIELDS","zeroYields","addYields","targetYields","subtractYields","copyYields","roundYields","BUILDINGS","IDLE_PRODUCTS","UNITS_DEFINITIONS","GameCanvasComponent","controls","renderer","setCanvas","canvas","nativeElement","resize","window","innerWidth","innerHeight","onKeyDown","onKeyUp","onContextMenu","findCoastline","coastline","placeRiverBetweenTiles","tileA","tileB","direction","getDirectionTo","OPPOSITE_DIRECTIONS","POSSIBLE_RIVER_DIRECTION_FROM_WATER_TILE","NW","NE","W","E","SE","SW","NONE","POSSIBLE_BORDER_PATHS","Animation","start","end","duration","progress","diff","stepTime","eased","ease","min","AnimationEaseOutQuad","AnimationEaseOutCubic","VS_BORDER_PROGRAM","FRAG_BORDER_PROGRAM","VS_BACKGROUND_PROGRAM","FRAG_BACKGROUND_PROGRAM","TRIANGLES","LEFT_SIDE_TRIANGLES","RIGHT_SIDE_TRIANGLES","borderGeometries","borderProgram","backgroundProgram","makeBorderGeometry","borders","vertices","uvs","leftNeighbour","rightNeighbour","addAttribute","Area","options","drawer","AreaDrawer","computeAllBorders","drawTileBorders","backgroundOpacity","drawTileBackground","computeBordersForTiles","visited","computeTileBorders","updateTileBorders","n","join","bordersMap","backgroundMap","borderShader","borderSize","borderShadow","borderShadowStrength","backgroundShader","opacity","mesh","visibleOnWater","position","container","addChild","visible","geometry","values","obj","Camera","MAX_ZOOM","MIN_ZOOM","transform","scale","_transform$","transform$","transformChanged","scaleAnimation","moveXAnimation","moveYAnimation","tileBoundingBox","xStart","yStart","xEnd","yEnd","tick$","subscribe","newScale","screenPivotX","screenPivotY","scalePivotX","scalePivotY","scaleFactor","currentScale","scaleToWithEasing","screenToCanvas","x1","y1","x2","y2","moveTo","screenX","screenY","floor","canvasX","canvasY","gameX","gameY","canvasToScreen","elapsedMS","app","ticker","step","scaleTo","newX","newY","updateBoundingBox","updateProjectionMatrix","m","projection","projectionMatrix","tx","ty","d","TILE_SIZE","MapDrawer","waterContainer","terrainContainer","riverContainer","cityContainer","yieldsContainer","unitsContainer","areasContainer","overlaysContainer","limitViewToPlayer","reveal","updateTile","build","terrainDrawer","unitsDrawer","yieldsDrawer","riverDrawer","cityDrawer","objects","displayObjects","politicsDrawer","gameState","bindToMap","drawTile","clearTile","hideAllTiles","SEA_COLORS","deep","shallow","CLIMATE_COLORS","continental","desert","oceanic","savanna","tropical","tundra","arctic","maxSize","MinimapRenderer","mapScene","cameraGraphics","mapSprite","destroyed$","updateMap","mapTexture","create","texture","drawMap","stage","updateCamera","complete","children","lineStyle","drawRect","render","g","beginFill","endFill","renderRivers","graphics","river","lineTo","OverlaysRenderer","hoveredTileGraphics","selectedTileGraphics","highlightedTilesGraphics","buildHoveredTileGraphics","buildSelectedTileGraphics","hoveredTile$","displayAtTile","selectedTile$","highlightedTiles$","buildHighlightedTiles","removeChild","PathRenderer","pathGraphics","labels","activePath$","buildPath","label","align","fill","dropShadow","dropShadowBlur","dropShadowDistance","fontSize","metrics","measureText","style","PoliticsDrawer","makeAreas","getAreaTiles","mapDrawer","GameRenderer","loader","atlas","load","onLoad","_tick$","setRenderer","view","overlays","interactiveChildren","isLoaded","onReady","uniforms","setTransform","resources","spritesheet","baseTexture","mipmap","POW2","textures","TileWrapperContainer","TileContainer","bBox","grid","childrenMap","child","parent","_parentID","_boundsID","emit","getChildsFor","worldAlpha","renderable","batch","flush","updateTransform","alpha","SMALL_CITY_TEXTURES","BIG_CITY_TEXTURES","CityDrawer","citiesGraphics","variants","textureName","destroyAllChildren","RiverDrawer","SEA_TEXTURES","CLIMATE_TEXTURES","plains","hills","FOREST_TEXTURES","WETLANDS_TEXTURES","WETLANDS_FOREST_TEXTURES","DESERT_FLOOD_PLAINS_TEXTURES","FARM_TEXTURES","MINE_TEXTURES","SAWMILL_TEXTURES","TerrainDrawer","sprite","isVisible","drawRoads","drawImprovement","roadId","UnitsDrawer","unitGraphics","backgroundTextureName","backgroundTexture","unitTextureName","unitTexture","backgroundSprite","tint","unitSprite","layoutTile","interactive","on","selectUnit","objs","oldTile","xOffset","sprites","moveChild","YiedsDrawer","yieldsVisible$","drawYield","quantity","HEX_GEOMETRY","getTileCenter","getTileCoords","drawHex","drawClosedHex","clearContainer","removeChildAt","getTileVariants","tileName","drawTileSprite","putContainerAtTile","drawTileSpriteCentered","putSpriteAtTileCentered","pickRandom","items","random","getTileFullNeighbours","getTileInDirection","getTileNeighbours","fromtile","toTile","range","TileDirection","Climate","LandForm","SeaLevel","FORESTABLE_CLIMATES","WETLANDS_CLIMATES","isForestable","areWetlandsPossible","isImprovementPossible","isRoadPossible","BonusesComponent","ButtonDirective","elementRef","blur","CitiesLayerComponent","cdr","ngUnsubscribe","updateCities","markForCheck","updateTransforms","el","box","citiesComponents","cityComponent","cityEl","display","cityScale","setTimeout","CityInfoComponent","thisCity","setProperty","selectCity","_city","CityViewComponent","quit$","hoverCity","produceBuilding","produceUnit","workOnIdleProduct","workTilesComponent","updateWorkedTilesArea","unhoverCity","moveToTileWithEasing","clickedTile$","quit","WorkTilesComponent","domSanitizer","toggle","unworkTile","isStopped","cityWorkedTilesArea","cityNotWorkedTilesArea","getNotWorkedTiles","gameToScreen","bypassSecurityTrustStyle","DebugComponent","revealWorld","CityEditorComponent","shown","isVisible$","v","hidden","enableSelectingTile","SEA_LEVEL_OPTIONS","LAND_FORM_OPTIONS","CLIMATE_OPTIONS","FOREST_OPTIONS","WETLANDS_OPTIONS","IMPROVEMENT_OPTIONS","ROAD_OPTIONS","RIVER_OPTIONS","EditorComponent","editorArea","editorEnabled$","close","PlayersEditorComponent","setTrackedPlayer","TileEditorComponent","dir","hasRiver","oppositeDir","neighbourRiverParts","IGNORE_OPTION","TilePaintingComponent","SIZE_OPTIONS","DEFAULT_PAINT_DATA","paintData","paint","pivotTile","updateTiles","reset","UnitEditorComponent","spawnMode","definitionOptions","GameInfoComponent","debugModalVisible","openEditor","openMenu","GameMenuComponent","LoadViewComponent","waiting","loadGame","moveToTile","files","savesListComponent","refresh","MainMenuViewComponent","NewGameViewComponent","uniformity","humanPlayersCount","aiPlayersCount","seed","mapOptions","newGame","SaveViewComponent","saveGame","save","SavesListComponent","selectedSave","MapUi","_hoveredTile$","_clickedTile$","_selectedTile$","_highlightedTiles$","_activePath$","_yieldsVisible$","_selectedUnit$","selectedUnit$","selectingTileEnabled","_cityLabelsVisible$","cityLabelsVisible$","selectedCity$","hoveredCity","tileOfInterest","cityRangeArea","cityBordersOnlyArea","enable","getCityDetails","cityDetails","getWorkTiles","concat","clearSelectedUnit","getUnitDetails","unitDetails","updateUnit","clearRange","previousUnit","MinimapComponent","minimapRenderer","calculateSize","autoStart","buttons","canvasRect","getBoundingClientRect","moveViewport","NextTurnButtonComponent","task","NextTurnService","_waiting$","waiting$","PercentBonusPipe","toFixed","PlayerYieldsComponent","ProductRequirementsComponent","templates","failedRequirements","buildingRef","sizeRef","TurnCounterComponent","timeout","clearTimeout","TurnsPipe","UIState","UnitActionRequirementsComponent","getFailedActionRequirements","UnitMarkerComponent","UnitPanelComponent","requirementsTemplates","disband","ModalComponent","MultiselectComponent","changed","option","newValue","ProgressBarComponent","nextProgress","RadioComponent","SpinnerComponent","TabComponent","select","_isVisible$","hide","TabsComponent","activateTab","tabs","first","tab","activeTab","show","ToggleComponent","TooltipDirective","overlay","overlayRef","dispose","positionStrategy","flexibleConnectedTo","withPositions","getPositions","tooltipPortal","componentRef","attach","instance","templateRef","context","originX","originY","overlayX","overlayY","TooltipComponent","environment","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = __webpack_public_path__ + \"0-es2015.worker.js\"","import { Unit } from \"./unit\";\nimport { City } from \"./city\";\nimport { TrackedPlayer } from \"./tracked-player\";\nimport { setChangesHandlers } from \"./internal/changes\";\nimport { GameState } from \"./state\";\nimport {\n  UnitChanneled,\n  CityChanneled,\n  TrackedPlayerChanneled,\n  TileChanneled,\n} from \"../core/serialization/channel\";\nimport { Tile } from \"./tile.interface\";\nimport { PlayerYields } from \"../shared\";\n\nconst HANDLERS = {\n  \"tiles.updated\": onTilesUpdate,\n\n  \"unit.updated\": onUnitUpdate,\n  \"unit.destroyed\": onUnitDestroyed,\n\n  \"city.updated\": onCityUpdate,\n\n  \"game.turn\": onTurn,\n\n  \"area.destroyed\": onAreaDestroyed,\n  \"area.tilesAdded\": onAreaTilesAdded,\n  \"area.tilesRemoved\": onAreaTilesRemoved,\n\n  \"trackedPlayer.set\": onTrackedPlayerSet,\n  \"trackedPlayer.yields\": onPlayerYieldsUpdate,\n  \"trackedPlayer.tilesExplored\": onTilesExplored,\n};\n\nexport function initChangeHandlers() {\n  setChangesHandlers(HANDLERS);\n}\n\nfunction onUnitUpdate(state: GameState, unitChanneled: UnitChanneled) {\n  const unit = state.unitsMap.get(unitChanneled.id);\n  if (unit) {\n    unit.update(state, unitChanneled);\n    state[\"_unitUpdated$\"].next(unit);\n  } else {\n    const newUnit = new Unit(state, unitChanneled);\n    state.units.push(newUnit);\n    state[\"_unitSpawned$\"].next(newUnit);\n  }\n}\n\nfunction onUnitDestroyed(state: GameState, id: number) {\n  const unit = state.unitsMap.get(id);\n  if (unit) {\n    unit.destroy(state);\n    state[\"_unitDestroyed$\"].next(unit);\n  }\n}\n\nfunction onCityUpdate(state: GameState, cityChanneled: CityChanneled) {\n  const city = state.citiesMap.get(cityChanneled.id);\n  if (city) {\n    city.update(cityChanneled);\n    state[\"_cityUpdated$\"].next(city);\n  } else {\n    const newCity = new City(state, cityChanneled);\n    state.cities.push(newCity);\n    state[\"_citySpawned$\"].next(newCity);\n  }\n}\n\nfunction onTurn(state: GameState, turn: number) {\n  state[\"_turn$\"].next(turn);\n}\n\nfunction onAreaDestroyed(state: GameState, turn: number) {\n  state[\"_turn$\"].next(turn);\n}\n\nfunction onAreaTilesAdded(state: GameState, data) {\n  const area = state.areasMap.get(data.id);\n  if (!area) {\n    return;\n  }\n\n  area.addTiles(state.map.getTilesFromIds(data.tiles));\n}\n\nfunction onAreaTilesRemoved(state: GameState, data) {\n  const area = state.areasMap.get(data.id);\n  if (!area) {\n    return;\n  }\n\n  area.removeTiles(state.map.getTilesFromIds(data.tiles));\n}\n\nfunction onPlayerYieldsUpdate(state: GameState, yields: PlayerYields) {\n  state.trackedPlayer.yields = yields;\n}\n\nfunction onTilesExplored(state: GameState, tilesIds: number[]) {\n  const tiles = tilesIds.map((id) => state.map.tilesMap.get(id)!);\n  state.trackedPlayer.exploreTiles(tiles);\n  state[\"_tilesExplored$\"].next(tiles);\n}\n\nfunction onTrackedPlayerSet(\n  state: GameState,\n  trackedPlayer: TrackedPlayerChanneled,\n) {\n  state.trackedPlayer = new TrackedPlayer(state, trackedPlayer);\n  state[\"_trackedPlayer$\"].next(state.trackedPlayer);\n}\n\nfunction onTilesUpdate(state: GameState, tilesChanneled: TileChanneled[]) {\n  const tiles: Tile[] = [];\n  for (const tileChanneled of tilesChanneled) {\n    const tile = state.map.tilesMap.get(tileChanneled.id)!;\n    Object.assign(tile, tileChanneled);\n    if (tileChanneled.areaOf !== null) {\n      tile.areaOf = state.citiesMap.get(tileChanneled.areaOf)!;\n    }\n    if (tileChanneled.cityId !== null) {\n      tile.city = state.citiesMap.get(tileChanneled.cityId)!;\n    }\n    tiles.push(tile);\n  }\n  state[\"_tilesUpdated$\"].next(tiles);\n}\n","import { Player } from \"./player\";\nimport { Product, ProductType } from \"../core/city\";\nimport { Yields } from \"../core/yields\";\nimport { Building, BUILDINGS_MAP } from \"../core/buildings\";\nimport { UnitDefinition } from \"../core/unit.interface\";\nimport { IdleProduct, IDLE_PRODUCTS_MAP } from \"../core/idle-product\";\nimport { GameState } from \"./state\";\nimport { ProductDefinition } from \"../core/product\";\nimport { UNITS_MAP } from \"../core/unit\";\nimport { makeCommand } from \"./internal/commander\";\nimport { CityDetailsChanneled } from \"../core/serialization/channel\";\nimport { Tile } from \"./tile.interface\";\nimport { City } from \"./city\";\n\nexport class CityDetails {\n  id: number;\n  name: string;\n  size: number;\n  tile: Tile;\n  player: Player;\n\n  totalFood: number;\n  foodToGrow: number;\n  turnsToGrow: number;\n\n  totalProduction: number;\n  turnsToProductionEnd: number | null;\n\n  product: Product | null;\n\n  foodConsumed: number;\n\n  totalCulture: number;\n  cultureToExpand: number;\n\n  tileYields: Yields;\n  yields: Yields;\n  perTurn: Yields;\n\n  buildings: Building[];\n  buildingsIds: Set<string>;\n\n  tiles: Set<Tile>;\n\n  workedTiles: Set<Tile>;\n\n  availableBuildings: Building[];\n\n  disabledBuildings: Set<Building>;\n\n  availableUnits: UnitDefinition[];\n  disabledUnits: Set<UnitDefinition>;\n\n  availableIdleProducts: IdleProduct[];\n  disabledIdleProducts: Set<IdleProduct>;\n\n  citySimple: City;\n\n  constructor(private game: GameState, city: CityDetailsChanneled) {\n    this.id = city.id;\n    this.update(city);\n    this.citySimple = game.citiesMap.get(city.id)!;\n  }\n\n  private update(city: CityDetailsChanneled) {\n    this.name = city.name;\n    this.size = city.size;\n    this.tile = this.game.map.tilesMap.get(city.tileId)!;\n    this.player = this.game.playersMap.get(city.playerId)!;\n\n    this.totalFood = city.totalFood;\n    this.foodToGrow = city.foodToGrow;\n    this.turnsToGrow = city.turnsToGrow;\n\n    this.totalProduction = city.totalProduction;\n    this.turnsToProductionEnd = city.turnsToProductionEnd;\n\n    this.product = null;\n    if (city.productId && city.productType) {\n      let defition: ProductDefinition;\n      if (city.productType === \"building\") {\n        defition = BUILDINGS_MAP.get(city.productId)!;\n      } else if (city.productType === \"unit\") {\n        defition = UNITS_MAP.get(city.productId)!;\n      } else {\n        defition = IDLE_PRODUCTS_MAP.get(city.productId)!;\n      }\n      this.product = {\n        type: city.productType,\n        productDefinition: defition,\n      };\n    }\n\n    this.foodConsumed = city.foodConsumed;\n\n    this.totalCulture = city.totalCulture;\n    this.cultureToExpand = city.cultureToExpand;\n\n    this.tileYields = city.tileYields;\n    this.yields = city.yields;\n    this.perTurn = city.perTurn;\n\n    this.buildings = city.buildingsIds.map((id) => BUILDINGS_MAP.get(id)!);\n    this.buildingsIds = new Set(city.buildingsIds);\n\n    this.tiles = new Set(\n      city.tiles.map((id) => this.game.map.tilesMap.get(id)!),\n    );\n    this.workedTiles = new Set(\n      city.workedTiles.map((id) => this.game.map.tilesMap.get(id)!),\n    );\n\n    this.availableBuildings = city.availableBuildings.map(\n      (id) => BUILDINGS_MAP.get(id)!,\n    );\n    this.availableIdleProducts = city.availableIdleProducts.map(\n      (id) => IDLE_PRODUCTS_MAP.get(id)!,\n    );\n    this.availableUnits = city.availableUnits.map((id) => UNITS_MAP.get(id)!);\n\n    this.disabledBuildings = new Set(\n      city.disabledBuildings.map((id) => BUILDINGS_MAP.get(id)!),\n    );\n    this.disabledUnits = new Set(\n      city.disabledUnits.map((id) => UNITS_MAP.get(id)!),\n    );\n    this.disabledIdleProducts = new Set(\n      city.disabledIdleProducts.map((id) => IDLE_PRODUCTS_MAP.get(id)!),\n    );\n  }\n\n  getTurnsToProduce(product: ProductDefinition) {\n    return Math.ceil(product.productionCost / this.yields.production);\n  }\n\n  get turnsToExpand() {\n    const remainingCulture = this.cultureToExpand - this.totalCulture;\n    return Math.ceil(remainingCulture / this.perTurn.culture);\n  }\n\n  async workTile(tile: Tile) {\n    const cityData = await makeCommand<CityDetailsChanneled>(\"city.workTile\", {\n      cityId: this.id,\n      tileId: tile.id,\n    });\n\n    this.update(cityData);\n  }\n\n  async unworkTile(tile: Tile) {\n    const cityData = await makeCommand<CityDetailsChanneled>(\n      \"city.unworkTile\",\n      {\n        cityId: this.id,\n        tileId: tile.id,\n      },\n    );\n\n    this.update(cityData);\n  }\n\n  async produceBuilding(building: Building) {\n    const cityData = await makeCommand<CityDetailsChanneled>(\"city.produce\", {\n      cityId: this.id,\n      type: \"building\" as ProductType,\n      productId: building.id,\n    });\n    this.update(cityData);\n  }\n\n  async produceUnit(unit: UnitDefinition) {\n    const cityData = await makeCommand<CityDetailsChanneled>(\"city.produce\", {\n      cityId: this.id,\n      type: \"unit\" as ProductType,\n      productId: unit.id,\n    });\n    this.update(cityData);\n  }\n\n  async workOnIdleProduct(idleProduct: IdleProduct) {\n    const cityData = await makeCommand<CityDetailsChanneled>(\"city.produce\", {\n      cityId: this.id,\n      type: \"idleProduct\" as ProductType,\n      productId: idleProduct.id,\n    });\n    this.update(cityData);\n  }\n\n  async optimizeYields() {\n    const cityData = await makeCommand<CityDetailsChanneled>(\n      \"city.optimizeYields\",\n      this.id,\n    );\n    this.update(cityData);\n  }\n\n  getNotWorkedTiles() {\n    const notWorkedTiles: Tile[] = [];\n    for (const tile of this.tiles) {\n      if (!this.workedTiles.has(tile)) {\n        notWorkedTiles.push(tile);\n      }\n    }\n    return notWorkedTiles;\n  }\n}\n","import { GameState } from \"./state\";\nimport { Player } from \"./player\";\nimport { CityChanneled } from \"../core/serialization/channel\";\nimport { makeCommand } from \"./internal/commander\";\nimport { Tile } from \"./tile.interface\";\n\nexport class City {\n  id: number;\n  player: Player;\n  tile: Tile;\n\n  name: string;\n  size: number;\n\n  totalFood: number;\n  foodToGrow: number;\n  foodPerTurn: number;\n  turnsToGrow: number;\n\n  totalProduction: number;\n  productionRequired: number | null;\n  productionPerTurn: number;\n  turnsToProductionEnd: number | null;\n  productName: string | null;\n\n  constructor(private game: GameState, city: CityChanneled) {\n    this.id = city.id;\n    this.tile = game.map.tilesMap.get(city.tileId)!;\n\n    this.tile.city = this;\n\n    this.update(city);\n\n    game.citiesMap.set(this.id, this);\n  }\n\n  update(city: CityChanneled) {\n    this.name = city.name;\n    this.size = city.size;\n\n    this.player = this.game.playersMap.get(city.playerId)!;\n\n    this.totalFood = city.totalFood;\n    this.foodToGrow = city.foodToGrow;\n    this.foodPerTurn = city.foodPerTurn;\n    this.turnsToGrow = city.turnsToGrow;\n\n    this.totalProduction = city.totalProduction;\n    this.productionRequired = city.productionRequired;\n    this.productionPerTurn = city.productionPerTurn;\n    this.turnsToProductionEnd = city.turnsToProductionEnd;\n    this.productName = city.productName;\n  }\n\n  async getRange() {\n    const ids = await makeCommand<number[]>(\"city.getRange\", this.id);\n    return ids.map((id) => this.game.map.tilesMap.get(id)!);\n  }\n\n  async getWorkTiles() {\n    const data = await makeCommand<{\n      workedTiles: number[];\n      notWorkedTiles: number[];\n    }>(\"city.getWorkTiles\", this.id);\n\n    return {\n      workedTiles: data.workedTiles.map(\n        (id) => this.game.map.tilesMap.get(id)!,\n      ),\n      notWorkedTiles: data.notWorkedTiles.map(\n        (id) => this.game.map.tilesMap.get(id)!,\n      ),\n    };\n  }\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\nimport { filter, skip } from \"rxjs/operators\";\n\nimport { MapGeneratorOptions } from \"./game.interface\";\nimport { makeCommand } from \"./internal/commander\";\nimport { GameState } from \"./state\";\nimport { GameChanneled } from \"../core/serialization/channel\";\nimport { PlayerTask } from \"../shared\";\n\nexport class GameApi {\n  private _state$ = new BehaviorSubject<GameState | null>(null);\n  state$ = this._state$.asObservable();\n\n  init$ = this.state$.pipe(filter((state) => !!state)) as Observable<GameState>;\n\n  stop$ = this.state$.pipe(\n    filter((state) => !state),\n    skip(1),\n  );\n\n  private _nextTask$ = new BehaviorSubject<PlayerTask | null>(null);\n  nextTask$ = this._nextTask$.asObservable();\n\n  async newGame(mapGeneratorOptions: MapGeneratorOptions): Promise<GameState> {\n    if (this.state) {\n      this._state$.next(null);\n    }\n\n    const gameChanneled = await makeCommand<GameChanneled>(\n      \"game.new\",\n      mapGeneratorOptions,\n    );\n\n    this._state$.next(new GameState(gameChanneled));\n    return this._state$.value as GameState;\n  }\n\n  async loadGame(data: string): Promise<GameState | null> {\n    if (this.state) {\n      this._state$.next(null);\n    }\n\n    const gameChanneled = await makeCommand<GameChanneled>(\n      \"game.loadDump\",\n      data,\n    );\n\n    this._state$.next(new GameState(gameChanneled));\n    return this._state$.value;\n  }\n\n  saveGame() {\n    return makeCommand<string>(\"game.saveDump\");\n  }\n\n  nextPlayer() {\n    return makeCommand(\"game.nextPlayer\");\n  }\n\n  get state() {\n    return this._state$.value;\n  }\n\n  get nextTask() {\n    return this._nextTask$.value;\n  }\n}\n\nexport const gameApi = new GameApi();\n","import { initWorkerListeners } from \"./internal/listener\";\nimport { initChangeHandlers } from \"./change-handlers\";\n\nexport * from \"./game\";\nexport * from \"./game.interface\";\n\ninitWorkerListeners();\ninitChangeHandlers();\n","import { GameState } from \"../state\";\n\nexport type ChangeHandler = (state: GameState, data: any) => void;\n\nexport const changeHandlers = new Map<string, ChangeHandler>();\n\nexport function setChangesHandlers(handlers: { [key: string]: ChangeHandler }) {\n  for (const [changeType, handler] of Object.entries(handlers)) {\n    changeHandlers.set(changeType, handler);\n  }\n}\n","import { awaitingExecutors, worker } from \"./worker\";\n\nexport function makeCommand<T>(command: string, data: any = {}) {\n  return new Promise<T>((resolve, reject) => {\n    awaitingExecutors.push(resolve);\n    worker.postMessage({ command, data });\n  });\n}\n","import { worker, awaitingExecutors } from \"./worker\";\nimport { changeHandlers } from \"./changes\";\nimport { gameApi } from \"../game\";\n\nexport function initWorkerListeners() {\n  worker.addEventListener(\"error\", onError, false);\n  worker.addEventListener(\"message\", onMessage, false);\n}\n\nfunction onMessage(event: MessageEvent) {\n  const executor = awaitingExecutors.shift();\n  if (!executor) {\n    console.error(\"No awaiting executors but message received.\");\n    return;\n  }\n\n  if (event.data.changes.length && !gameApi.state) {\n    console.error(\"Received change events but state is not instantiated yet.\");\n  } else {\n    for (const change of event.data.changes) {\n      console.debug(`change received: ${change.type}`);\n      const handler = changeHandlers.get(change.type);\n      if (!handler) {\n        console.error(`No handler for change with type \"${change.type}\"`);\n        continue;\n      }\n\n      handler(gameApi.state!, change.data);\n    }\n  }\n\n  executor(event.data.result);\n\n  gameApi[\"_nextTask$\"].next(event.data.nextTask);\n}\n\nfunction onError(error: any) {\n  console.error(`Webworker error: ${error.message}`);\n}\n","export const worker = new Worker(\"../../core.worker\", { type: \"module\" });\n\nexport const awaitingExecutors: ((value: any) => void)[] = [];\n","import { getTileNeighbours, getTileFullNeighbours } from \"../shared/hex-math\";\nimport { MapChanneled } from \"../core/serialization/channel\";\nimport { GameState } from \"./state\";\nimport { Tile } from \"./tile.interface\";\n\nexport class TilesMap {\n  width = 0;\n  height = 0;\n  tiles: Tile[][] = [];\n  tilesMap = new Map<number, Tile>();\n\n  constructor(map: MapChanneled) {\n    this.width = map.width;\n    this.height = map.height;\n    this.tiles = (map.tiles as unknown) as Tile[][];\n\n    for (let x = 0; x < this.width; x++) {\n      for (let y = 0; y < this.height; y++) {\n        const tile: Tile = this.tiles[x][y];\n        this.tilesMap.set(tile.id, tile);\n        tile.neighbours = getTileNeighbours(this.tiles, x, y);\n        tile.fullNeighbours = getTileFullNeighbours(this.tiles, x, y);\n        tile.units = [];\n      }\n    }\n  }\n\n  preprocess(game: GameState) {\n    for (let x = 0; x < this.width; x++) {\n      for (let y = 0; y < this.height; y++) {\n        const tile: Tile = this.tiles[x][y];\n        if (tile.areaOf !== null) {\n          tile.areaOf = game.citiesMap.get(tile.areaOf as any)!;\n        }\n      }\n    }\n  }\n\n  get(x: number, y: number): Tile | null {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return null;\n    }\n    return this.tiles[x][y];\n  }\n\n  getTilesFromIds(ids: number[]): Tile[] {\n    return ids.map((id) => this.tilesMap.get(id)!);\n  }\n}\n","import { PlayerChanneled } from \"../core/serialization/channel\";\n\nexport class Player {\n  id: number;\n  color: number;\n  cssColor: string;\n  vec4Color: number[];\n\n  areaId: number;\n\n  constructor(player: PlayerChanneled) {\n    this.id = player.id;\n    this.color = player.color;\n    this.cssColor = \"#\" + this.color.toString(16).padStart(6, \"0\");\n    this.vec4Color = [\n      parseInt(this.cssColor[1] + this.cssColor[2], 16) / 255,\n      parseInt(this.cssColor[3] + this.cssColor[4], 16) / 255,\n      parseInt(this.cssColor[5] + this.cssColor[6], 16) / 255,\n      1,\n    ];\n\n    this.areaId = player.areaId;\n  }\n}\n","const savesKeyPrefix = \"saves:\";\nconst listKey = \"savesList\";\n\nexport function saveGameData(data: string, saveName: string) {\n  storeData(saveName, data);\n}\n\nexport function loadGameData(saveName: string): string | null {\n  const data = getSave(saveName);\n  if (!data) {\n    console.error(`No save with name ${saveName}`);\n    return null;\n  }\n  return data;\n}\n\nexport function deleteSaveGame(saveName: string) {\n  const saveGames = listSaveGames();\n  if (!saveGames.includes(saveName)) {\n    console.error(`No save with name ${saveName}`);\n    return;\n  }\n\n  localStorage.removeItem(`${savesKeyPrefix}${saveName}`);\n\n  const index = saveGames.indexOf(saveName);\n  saveGames.splice(index, 1);\n  saveList(saveGames);\n}\n\nexport function listSaveGames(): string[] {\n  const data = localStorage.getItem(listKey);\n  if (!data) {\n    return [];\n  }\n  return JSON.parse(data) || [];\n}\n\nexport function exportSave(saveName: string) {\n  const data = getSave(saveName);\n  if (!data) {\n    return;\n  }\n  const blob = new Blob([data], { type: \"text/plain\" });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = `${saveName}.json`;\n  a.click();\n}\n\nexport async function importSave(file: File) {\n  const extension = \".json\";\n  let filename = file.name;\n\n  if (!filename.endsWith(extension)) {\n    return;\n  }\n\n  const originalName = filename.slice(0, -extension.length);\n  let name = originalName;\n\n  const saves = listSaveGames();\n\n  let i = 1;\n  while (saves.includes(name)) {\n    name = `${originalName}_${i++}`;\n  }\n\n  const data = await readFile(file);\n  storeData(name, data);\n}\n\n// private functions below\n\nasync function readFile(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = () => {\n      if (reader.result) {\n        resolve(reader.result as string);\n      } else {\n        reject();\n      }\n    };\n  });\n}\n\nfunction storeData(saveName: string, data: string) {\n  localStorage.setItem(`${savesKeyPrefix}${saveName}`, data);\n  const saveGames = listSaveGames();\n  if (!saveGames.includes(saveName)) {\n    saveGames.push(saveName);\n  }\n  saveList(saveGames);\n}\n\nfunction getSave(saveName: string): string | null {\n  return localStorage.getItem(`${savesKeyPrefix}${saveName}`);\n}\n\nfunction saveList(saveGames: string[]) {\n  localStorage.setItem(listKey, JSON.stringify(saveGames));\n}\n","import { TilesMap } from \"./map\";\nimport { Unit } from \"./unit\";\nimport { City } from \"./city\";\nimport { TrackedPlayer } from \"./tracked-player\";\nimport { makeCommand } from \"./internal/commander\";\nimport { Subject, BehaviorSubject } from \"rxjs\";\nimport { Area } from \"../renderer/area\";\nimport { BaseTile } from \"../shared\";\nimport { Player } from \"./player\";\nimport {\n  GameChanneled,\n  TrackedPlayerChanneled,\n  UnitDetailsChanneled,\n  CityDetailsChanneled,\n} from \"../core/serialization/channel\";\nimport { Tile } from \"./tile.interface\";\n\nexport class GameState {\n  private _turn$ = new BehaviorSubject<number>(0);\n  turn$ = this._turn$.asObservable();\n\n  map: TilesMap;\n  players: Player[] = [];\n  trackedPlayer: TrackedPlayer;\n  units: Unit[] = [];\n  cities: City[] = [];\n\n  unitsMap = new Map<number, Unit>();\n  citiesMap = new Map<number, City>();\n  areasMap = new Map<number, Area>();\n\n  playersMap = new Map<number, Player>();\n\n  private _tilesUpdated$ = new Subject<Tile[]>();\n  tilesUpdated$ = this._tilesUpdated$.asObservable();\n\n  private _unitSpawned$ = new Subject<Unit>();\n  unitSpawned$ = this._unitSpawned$.asObservable();\n\n  private _unitUpdated$ = new Subject<Unit>();\n  unitUpdated$ = this._unitUpdated$.asObservable();\n\n  private _unitDestroyed$ = new Subject<Unit>();\n  unitDestroyed$ = this._unitDestroyed$.asObservable();\n\n  private _citySpawned$ = new Subject<City>();\n  citySpawned$ = this._citySpawned$.asObservable();\n\n  private _cityUpdated$ = new Subject<City>();\n  cityUpdated$ = this._cityUpdated$.asObservable();\n\n  private _cityDestroyed$ = new Subject<City>();\n  cityDestroyed$ = this._cityDestroyed$.asObservable();\n\n  private _areaSpawned$ = new Subject<Area>();\n  areaSpawned$ = this._areaSpawned$.asObservable();\n\n  private _areaUpdated$ = new Subject<Area>();\n  areaUpdated$ = this._areaUpdated$.asObservable();\n\n  private _areaDestroyed$ = new Subject<Area>();\n  areaDestroyed$ = this._areaDestroyed$.asObservable();\n\n  private _tilesExplored$ = new Subject<Tile[]>();\n  tilesExplored$ = this._tilesExplored$.asObservable();\n\n  private _trackedPlayer$ = new Subject<TrackedPlayer>();\n  trackedPlayer$ = this._trackedPlayer$.asObservable();\n\n  constructor(game: GameChanneled) {\n    this._turn$.next(game.turn);\n    this.map = new TilesMap(game.map);\n\n    this.players = this.restorePlayers(game);\n    for (const player of this.players) {\n      this.playersMap.set(player.id, player);\n    }\n\n    this.units = this.restoreUnits(game);\n    this.cities = this.restoreCities(game);\n\n    this.trackedPlayer = new TrackedPlayer(this, game.trackedPlayer);\n\n    this.map.preprocess(this);\n  }\n\n  private restorePlayers(game: GameChanneled): Player[] {\n    return game.players.map((player) => new Player(player));\n  }\n\n  private restoreUnits(game: GameChanneled): Unit[] {\n    return game.units.map((unit) => new Unit(this, unit));\n  }\n\n  private restoreCities(game: GameChanneled): City[] {\n    return game.cities.map((city) => new City(this, city));\n  }\n\n  async setTrackedPlayer(playerId: number) {\n    const data = await makeCommand<TrackedPlayerChanneled>(\n      \"trackedPlayer.set\",\n      playerId,\n    );\n    this.trackedPlayer = new TrackedPlayer(this, data);\n    this._trackedPlayer$.next(this.trackedPlayer);\n  }\n\n  getUnitDetails(unitId: number): Promise<UnitDetailsChanneled | null> {\n    return makeCommand<UnitDetailsChanneled | null>(\"unit.getDetails\", unitId);\n  }\n\n  updateTile(tile: Tile) {\n    return makeCommand(\"tile.update\", this.serializeTileToUpdate(tile));\n  }\n\n  private serializeTileToUpdate(tile: Tile) {\n    return {\n      id: tile.id,\n      climate: tile.climate,\n      landForm: tile.landForm,\n      seaLevel: tile.seaLevel,\n      riverParts: tile.riverParts,\n      forest: tile.forest,\n      wetlands: tile.wetlands,\n      improvement: tile.improvement,\n      road: tile.road,\n    } as Partial<BaseTile>;\n  }\n\n  updateTiles(tiles: Tile[]) {\n    const data = tiles.map((t) => this.serializeTileToUpdate(t));\n    return makeCommand(\"tile.bulkUpdate\", data);\n  }\n\n  getCityDetails(cityId: number) {\n    return makeCommand<CityDetailsChanneled>(\"city.getDetails\", cityId);\n  }\n\n  async getAreaTiles(areaId: number) {\n    const tileIds = await makeCommand<number[]>(\"area.getTiles\", areaId);\n    return tileIds.map((id) => this.map.tilesMap.get(id)!);\n  }\n\n  updateUnit(unitId: number) {\n    this._unitUpdated$.next(this.unitsMap.get(unitId));\n  }\n}\n","import { GameState } from \"./state\";\nimport { makeCommand } from \"./internal/commander\";\nimport { Unit } from \"./unit\";\nimport { City } from \"./city\";\nimport { TrackedPlayerChanneled } from \"../core/serialization/channel\";\nimport { Tile } from \"./tile.interface\";\nimport { PlayerYields } from \"../shared\";\n\nexport class TrackedPlayer {\n  id: number;\n  color: number;\n  exploredTiles = new Set<Tile>();\n\n  units: Unit[] = [];\n  cities: City[] = [];\n\n  yields: PlayerYields;\n\n  constructor(game: GameState, player: TrackedPlayerChanneled) {\n    this.id = player.id;\n    this.color = player.color;\n    this.exploredTiles = new Set(\n      player.exploredTiles.map((id) => game.map.tilesMap.get(id)!),\n    );\n\n    this.units = player.units.map((id) => game.unitsMap.get(id)!);\n    this.cities = player.cities.map((id) => game.citiesMap.get(id)!);\n\n    this.yields = player.yields;\n  }\n\n  exploreTiles(tiles: Tile[]) {\n    for (const tile of tiles) {\n      this.exploredTiles.add(tile);\n    }\n  }\n\n  revealWorld() {\n    return makeCommand(\"trackedPlayer.revealWorld\");\n  }\n}\n","import { UnitAction } from \"../core/unit-actions\";\nimport { UnitOrder, UNITS_MAP } from \"../core/unit\";\nimport { GameState } from \"./state\";\nimport { UnitDefinition } from \"../core/unit.interface\";\nimport { Player } from \"./player\";\nimport { makeCommand } from \"./internal/commander\";\nimport { UnitDetailsChanneled } from \"../core/serialization/channel\";\nimport { Tile } from \"./tile.interface\";\n\nexport class UnitDetails {\n  id: number;\n  tile: Tile;\n  definition: UnitDefinition;\n  player: Player;\n  actionPointsLeft: number;\n  path: Tile[][] | null = null;\n  order: UnitOrder;\n\n  constructor(private game: GameState, unit: UnitDetailsChanneled) {\n    this.id = unit.id;\n    this.definition = UNITS_MAP.get(unit.definitionId)!;\n    this.update(unit);\n  }\n\n  private update(unit: UnitDetailsChanneled) {\n    this.tile = this.game.map.tilesMap.get(unit.tileId)!;\n    this.player = this.game.playersMap.get(unit.playerId)!;\n    this.actionPointsLeft = unit.actionPointsLeft;\n    this.order = unit.order;\n\n    this.path = null;\n    if (unit.path) {\n      this.path = unit.path.map((turn) =>\n        turn.map((id) => this.game.map.tilesMap.get(id)!),\n      );\n    }\n  }\n\n  async doAction(action: UnitAction) {\n    const data = await makeCommand<UnitDetailsChanneled>(\"unit.doAction\", {\n      unitId: this.id,\n      action,\n    });\n    this.update(data);\n  }\n\n  canDoAction(action: UnitAction): boolean {\n    return true;\n  }\n\n  async setOrder(order: UnitOrder) {\n    const data = await makeCommand<UnitDetailsChanneled>(\"unit.setOrder\", {\n      unitId: this.id,\n      order,\n    });\n    this.update(data);\n  }\n\n  disband() {\n    return makeCommand(\"unit.disband\", this.id);\n  }\n\n  async findPath(destination: Tile) {\n    const data = await makeCommand<UnitDetailsChanneled>(\"unit.findPath\", {\n      unitId: this.id,\n      destinationId: destination.id,\n    });\n    this.update(data);\n  }\n\n  async moveAlongPath() {\n    const data = await makeCommand<UnitDetailsChanneled>(\n      \"unit.moveAlongPath\",\n      this.id,\n    );\n    this.update(data);\n  }\n\n  async getRange(): Promise<Tile[]> {\n    const ids = await makeCommand<number[]>(\"unit.getRange\", this.id);\n    return ids.map((tileId) => this.game.map.tilesMap.get(tileId)!);\n  }\n\n  getFailedActionRequirements(action: UnitAction) {\n    // Returns failed requirements.\n    return makeCommand<UnitAction[]>(\"unit.getFailedActionRequirements\", {\n      unitId: this.id,\n      action,\n    });\n  }\n\n  async refresh() {\n    const data = await makeCommand<UnitDetailsChanneled>(\n      \"unit.getDetails\",\n      this.id,\n    );\n    this.update(data);\n  }\n}\n","import { UnitDefinition } from \"../core/unit.interface\";\nimport { GameState } from \"./state\";\nimport { UNITS_MAP } from \"../core/unit\";\nimport { Player } from \"./player\";\nimport { UnitChanneled } from \"../core/serialization/channel\";\nimport { Tile } from \"./tile.interface\";\n\nexport class Unit {\n  id: number;\n  definition: UnitDefinition;\n  player: Player;\n  tile: Tile;\n\n  constructor(game: GameState, unit: UnitChanneled) {\n    this.id = unit.id;\n    this.tile = game.map.tilesMap.get(unit.tileId)!;\n    this.player = game.playersMap.get(unit.playerId)!;\n    this.definition = UNITS_MAP.get(unit.definitionId)!;\n\n    this.tile.units.push(this);\n    game.unitsMap.set(this.id, this);\n  }\n\n  update(game: GameState, unit: UnitChanneled) {\n    const index = this.tile.units.indexOf(this);\n    if (index !== -1) {\n      this.tile.units.splice(index, 1);\n    }\n\n    this.tile = game.map.tilesMap.get(unit.tileId)!;\n    this.tile.units.push(this);\n  }\n\n  destroy(game: GameState) {\n    const index = this.tile.units.indexOf(this);\n    if (index !== -1) {\n      this.tile.units.splice(index, 1);\n    }\n\n    game.unitsMap.delete(this.id);\n  }\n}\n","import { Component, ChangeDetectionStrategy } from \"@angular/core\";\n\nimport { UIState } from \"./ui/ui-state\";\nimport { MapUi } from \"./ui/map-ui\";\nimport { GameApi } from \"./api\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  title = \"civ\";\n\n  constructor(\n    public game: GameApi,\n    public uiState: UIState,\n    public mapUi: MapUi,\n  ) {}\n}\n","<app-game-menu *ngIf=\"uiState.menuVisible$ | async\"></app-game-menu>\n\n<app-game-canvas></app-game-canvas>\n\n<ng-container *ngIf=\"game.state$ | async\">\n  <app-editor\n    class=\"panel\"\n    *ngIf=\"uiState.editorEnabled$ | async; else gameUiTmpl\"\n  ></app-editor>\n</ng-container>\n\n<ng-template #gameUiTmpl>\n  <app-cities-layer *ngIf=\"mapUi.cityLabelsVisible$ | async\"></app-cities-layer>\n  <app-turn-counter></app-turn-counter>\n\n  <app-city-view\n    *ngIf=\"uiState.selectedCity$ | async as city\"\n    [city]=\"city\"\n  ></app-city-view>\n\n  <div [class.hidden]=\"uiState.selectedCity$ | async\">\n    <app-unit-panel></app-unit-panel>\n    <app-game-info class=\"panel panel-bottom-left-corner\"></app-game-info>\n    <app-player-yields\n      class=\"panel panel-bottom-right-corner\"\n    ></app-player-yields>\n\n    <div class=\"panel panel-top-left-corner\">\n      <app-next-turn-button></app-next-turn-button>\n      <app-minimap></app-minimap>\n    </div>\n  </div>\n</ng-template>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\n\nimport { AppComponent } from \"./app.component\";\nimport { GameCanvasComponent } from \"./game-canvas/game-canvas.component\";\nimport { UnitPanelComponent } from \"./ui/unit-panel/unit-panel.component\";\nimport { NextTurnButtonComponent } from \"./ui/next-turn-button/next-turn-button.component\";\nimport { GameInfoComponent } from \"./ui/game-info/game-info.component\";\nimport { DebugComponent } from \"./ui/debug/debug.component\";\nimport { TurnCounterComponent } from \"./ui/turn-counter/turn-counter.component\";\nimport { EditorComponent } from \"./ui/editor/editor.component\";\nimport { UIState } from \"./ui/ui-state\";\nimport { TabsComponent, TabComponent } from \"./ui/widgets/tabs\";\nimport { TileEditorComponent } from \"./ui/editor/tile-editor/tile-editor.component\";\nimport { RadioComponent } from \"./ui/widgets/radio/radio.component\";\nimport { MultiselectComponent } from \"./ui/widgets/multiselect/multiselect.component\";\nimport { ToggleComponent } from \"./ui/widgets/toggle/toggle.component\";\nimport { TilePaintingComponent } from \"./ui/editor/tile-painting/tile-painting.component\";\nimport { GameMenuComponent } from \"./ui/game-menu/game-menu.component\";\nimport { SavesListComponent } from \"./ui/game-menu/saves-list/saves-list.component\";\nimport { SaveViewComponent } from \"./ui/game-menu/save-view/save-view.component\";\nimport { LoadViewComponent } from \"./ui/game-menu/load-view/load-view.component\";\nimport { MainMenuViewComponent } from \"./ui/game-menu/main-menu-view/main-menu-view.component\";\nimport { NewGameViewComponent } from \"./ui/game-menu/new-game-view/new-game-view.component\";\nimport { UnitEditorComponent } from \"./ui/editor/unit-editor/unit-editor.component\";\nimport { CityEditorComponent } from \"./ui/editor/city-editor/city-editor.component\";\nimport { CitiesLayerComponent } from \"./ui/cities-layer/cities-layer.component\";\nimport { CityInfoComponent } from \"./ui/cities-layer/city-info/city-info.component\";\nimport { CityViewComponent } from \"./ui/city-view/city-view.component\";\nimport { TurnsPipe } from \"./ui/turns.pipe\";\nimport { WorkTilesComponent } from \"./ui/city-view/work-tiles/work-tiles.component\";\nimport { ProgressBarComponent } from \"./ui/widgets/progress-bar/progress-bar.component\";\nimport { ButtonDirective } from \"./ui/button.directive\";\nimport { MinimapComponent } from \"./ui/minimap/minimap.component\";\nimport { TooltipDirective } from \"./ui/widgets/tooltip.directive\";\nimport { TooltipComponent } from \"./ui/widgets/tooltip/tooltip.component\";\nimport { BonusesComponent } from \"./ui/bonuses/bonuses.component\";\nimport { PercentBonusPipe } from \"./ui/percent-bonus.pipe\";\nimport { ProductRequirementsComponent } from \"./ui/product-requirements/product-requirements.component\";\nimport { PlayerYieldsComponent } from \"./ui/player-yields/player-yields.component\";\nimport { Controls } from \"./controls\";\nimport { NextTurnService } from \"./ui/next-turn.service\";\nimport { GameRenderer } from \"./renderer/renderer\";\nimport { MapUi } from \"./ui/map-ui\";\nimport { UnitActionRequirementsComponent } from \"./ui/unit-action-requirements/unit-action-requirements.component\";\nimport { GameApi, gameApi } from \"./api/game\";\nimport { Game } from \"./core/game\";\nimport { Camera } from \"./renderer/camera\";\nimport { PlayersEditorComponent } from './ui/editor/players-editor/players-editor.component';\nimport { SpinnerComponent } from './ui/widgets/spinner/spinner.component';\nimport { ModalComponent } from './ui/widgets/modal/modal.component';\nimport { UnitMarkerComponent } from './ui/unit-marker/unit-marker.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameCanvasComponent,\n    UnitPanelComponent,\n    NextTurnButtonComponent,\n    GameInfoComponent,\n    DebugComponent,\n    TurnCounterComponent,\n    EditorComponent,\n    TabsComponent,\n    TabComponent,\n    TileEditorComponent,\n    RadioComponent,\n    MultiselectComponent,\n    ToggleComponent,\n    TilePaintingComponent,\n    GameMenuComponent,\n    SavesListComponent,\n    SaveViewComponent,\n    LoadViewComponent,\n    MainMenuViewComponent,\n    NewGameViewComponent,\n    UnitEditorComponent,\n    CityEditorComponent,\n    CitiesLayerComponent,\n    CityInfoComponent,\n    CityViewComponent,\n    TurnsPipe,\n    WorkTilesComponent,\n    ProgressBarComponent,\n    ButtonDirective,\n    MinimapComponent,\n    TooltipDirective,\n    TooltipComponent,\n    BonusesComponent,\n    PercentBonusPipe,\n    ProductRequirementsComponent,\n    PlayerYieldsComponent,\n    UnitActionRequirementsComponent,\n    PlayersEditorComponent,\n    SpinnerComponent,\n    ModalComponent,\n    UnitMarkerComponent,\n  ],\n  imports: [BrowserModule, FormsModule, OverlayModule],\n  providers: [\n    Game,\n    { provide: GameApi, useValue: gameApi },\n    UIState,\n    Controls,\n    NextTurnService,\n    GameRenderer,\n    Camera,\n    MapUi,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\n\nimport { BehaviorSubject } from \"rxjs\";\n\nimport { NextTurnService } from \"./ui/next-turn.service\";\nimport { MapUi } from \"./ui/map-ui\";\nimport { UIState } from \"./ui/ui-state\";\nimport { Camera } from \"./renderer/camera\";\nimport { GameApi } from \"./api/game\";\n\n@Injectable()\nexport class Controls {\n  isMousePressed = false;\n\n  private _mouseButton$ = new BehaviorSubject<number | null>(null);\n  mouseButton$ = this._mouseButton$.asObservable();\n\n  constructor(\n    private game: GameApi,\n    private camera: Camera,\n    private nextTurnService: NextTurnService,\n    private mapUi: MapUi,\n    private uiState: UIState,\n  ) {}\n\n  onMouseDown(event: MouseEvent) {\n    this.isMousePressed = true;\n    this._mouseButton$.next(event.button);\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.mapUi.selectedUnit && this.mouseButton === 2) {\n      const tile = this.getTileFromMouseEvent(event);\n      if (tile) {\n        this.mapUi.selectedUnit.findPath(tile).then(() => {\n          if (this.mapUi.selectedUnit) {\n            this.mapUi.setPath(this.mapUi.selectedUnit.path);\n          }\n        });\n      }\n    }\n\n    return false;\n  }\n\n  onClick(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const hoveredTile = this.mapUi.hoveredTile;\n    if (hoveredTile) {\n      this.mapUi.clickTile(hoveredTile);\n    }\n\n    return false;\n  }\n\n  onMouseUp(event: MouseEvent) {\n    const [x, y] = this.camera.screenToGame(event.clientX, event.clientY);\n\n    const selectedUnit = this.mapUi.selectedUnit;\n    if (selectedUnit && this.mouseButton === 2) {\n      const tile = this.game.state!.map.get(x, y);\n      if (tile) {\n        selectedUnit.moveAlongPath().then(async () => {\n          this.mapUi.setPath(selectedUnit.path);\n          // to refresh the ui\n          this.mapUi[\"_selectedUnit$\"].next(selectedUnit);\n          this.mapUi.unitRangeArea.setTiles(await selectedUnit.getRange());\n        });\n      }\n    }\n\n    this.isMousePressed = false;\n    this._mouseButton$.next(null);\n  }\n\n  onMouseMove(event: MouseEvent) {\n    const tile = this.getTileFromMouseEvent(event);\n\n    if (tile !== this.mapUi.hoveredTile) {\n      this.mapUi.hoverTile(tile);\n\n      if (tile && this.mapUi.selectedUnit && this.mouseButton === 2) {\n        this.mapUi.selectedUnit.findPath(tile).then(() => {\n          if (this.mapUi.selectedUnit) {\n            this.mapUi.setPath(this.mapUi.selectedUnit.path);\n          }\n        });\n      }\n    }\n\n    if (this.mapUi.allowMapPanning && this.isMousePressed) {\n      if (this.mouseButton === 1) {\n        this.camera.moveBy(event.movementX, event.movementY);\n      }\n    }\n  }\n\n  onWheel(event: WheelEvent) {\n    this.camera.scaleByWithEasing(\n      1 + (event.deltaY > 0 ? -0.3 : 0.3),\n      event.clientX,\n      event.clientY,\n      300,\n    );\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    if (event.key === \"Enter\") {\n      this.nextTurnService.next();\n    } else if (event.key === \"Escape\") {\n      this.uiState.menuVisible$.next(true);\n    }\n  }\n\n  onKeyUp(event: KeyboardEvent) {}\n\n  getTileFromMouseEvent(event: MouseEvent) {\n    const [x, y] = this.camera.screenToGame(event.clientX, event.clientY);\n    return this.game.state!.map.get(x, y);\n  }\n\n  nextTurn() {\n    // this.mapUi.setPath(this.activeUnit?.path || null);\n  }\n\n  get mouseButton() {\n    return this._mouseButton$.value;\n  }\n}\n","import { TileCore } from \"./tile\";\nimport { collector } from \"./collector\";\n\nexport class AreaCore {\n  id = 0;\n\n  tiles = new Set<TileCore>();\n\n  add(tile: TileCore) {\n    this.tiles.add(tile);\n    collector.addAreaTiles(this.id, [tile]);\n  }\n\n  addBulk(tiles: TileCore[]) {\n    for (const tile of tiles) {\n      this.tiles.add(tile);\n    }\n    collector.addAreaTiles(this.id, tiles);\n  }\n\n  remove(tile: TileCore) {\n    this.tiles.delete(tile);\n    collector.removeAreaTiles(this.id, [tile]);\n  }\n\n  removeBulk(tiles: TileCore[]) {\n    for (const tile of tiles) {\n      this.tiles.delete(tile);\n    }\n    collector.removeAreaTiles(this.id, tiles);\n  }\n}\n","import { AreaCore } from \"./area\";\n\nexport class AreasManager {\n  areas: AreaCore[] = [];\n\n  areasMap = new Map<number, AreaCore>();\n\n  lastId = 0;\n\n  make() {\n    const area = new AreaCore();\n    area.id = this.lastId++;\n    this.areas.push(area);\n    this.areasMap.set(area.id, area);\n    return area;\n  }\n\n  destroy(area: AreaCore) {\n    this.areasMap.delete(area.id);\n    const index = this.areas.indexOf(area);\n    if (index !== -1) {\n      this.areas.splice(index, 1);\n    }\n  }\n}\n","import { Bonuses } from \"./bonus\";\nimport { BUILDINGS } from \"../data/buildings\";\nimport { ProductDefinition } from \"./product\";\n\nexport interface Building extends ProductDefinition {\n  bonuses: Bonuses;\n}\n\nexport const BUILDINGS_MAP = new Map<string, Building>();\n\nfor (const definition of BUILDINGS) {\n  BUILDINGS_MAP.set(definition.id, definition);\n}\n","import { CityCore } from \"./city\";\nimport { PlayerCore } from \"./player\";\nimport { TileRoad } from \"./tile-improvements\";\nimport { TileCore } from \"./tile\";\nimport { LandForm, SeaLevel } from \"../shared\";\nimport { collector } from \"./collector\";\n\nexport class CitiesManager {\n  cities: CityCore[] = [];\n\n  citiesMap = new Map<number, CityCore>();\n\n  lastId = 0;\n\n  spawn(tile: TileCore, player: PlayerCore, isNew = true) {\n    if (tile.city) {\n      return null;\n    }\n\n    if (\n      tile.landForm === LandForm.mountains ||\n      tile.seaLevel !== SeaLevel.none\n    ) {\n      return null;\n    }\n\n    const city = new CityCore(tile, player);\n    city.id = this.lastId++;\n    city.size = 1;\n    city.name = `City ${city.id}`;\n    city.tile = tile;\n    this.cities.push(city);\n    this.citiesMap.set(city.id, city);\n\n    for (const neighbour of tile.neighbours) {\n      city.addTile(neighbour);\n    }\n\n    player.addCity(city);\n\n    tile.city = city;\n    tile.forest = false;\n    tile.wetlands = false;\n    tile.road = TileRoad.road;\n    tile.update();\n\n    for (const t of tile.getTilesInRange(3)) {\n      t.sweetSpotValue = 0;\n    }\n\n    if (isNew) {\n      city.optimizeYields();\n    }\n\n    collector.cities.add(city);\n\n    return city;\n  }\n\n  destroy(city: CityCore) {\n    // TODO rewrite to sets for better performance?\n    let index = this.cities.indexOf(city);\n    if (index !== -1) {\n      this.cities.splice(index, 1);\n    }\n\n    this.citiesMap.delete(city.id);\n\n    index = city.player.cities.indexOf(city);\n    if (index !== -1) {\n      city.player.cities.splice(index, 1);\n    }\n\n    city.tile.city = null;\n\n    for (const tile of city.tiles) {\n      city.removeTile(tile);\n    }\n\n    collector.citiesDestroyed.add(city.id);\n  }\n\n  nextTurn() {\n    for (const city of this.cities) {\n      city.nextTurn();\n    }\n  }\n}\n","import { TileCore } from \"./tile\";\nimport { PlayerCore } from \"./player\";\nimport { UnitDefinition } from \"./unit.interface\";\nimport { Building } from \"./buildings\";\nimport { ProductDefinition } from \"./product\";\nimport { IdleProduct } from \"./idle-product\";\nimport { Bonuses } from \"./bonus\";\nimport {\n  EMPTY_YIELDS,\n  Yields,\n  zeroYields,\n  addYields,\n  copyYields,\n  roundYields,\n} from \"./yields\";\n\nimport { UNITS_DEFINITIONS } from \"../data/units\";\nimport { BUILDINGS } from \"../data/buildings\";\nimport { IDLE_PRODUCTS } from \"../data/idle-products\";\nimport { collector } from \"./collector\";\n\nexport type ProductType = \"unit\" | \"building\" | \"idleProduct\";\n\nexport interface Product {\n  type: ProductType;\n  productDefinition: ProductDefinition;\n}\n\nexport class CityCore {\n  id: number;\n  name: string;\n  size: number;\n\n  totalFood = 0;\n  foodToGrow = 20;\n  foodConsumed = 1;\n\n  totalCulture = 0;\n  cultureToExpand = 20;\n\n  tileYields: Yields = { ...EMPTY_YIELDS };\n  yields: Yields = { ...EMPTY_YIELDS };\n  perTurn: Yields = { ...EMPTY_YIELDS };\n\n  product: Product | null = null;\n  totalProduction = 0;\n\n  buildings: Building[] = [];\n  buildingsIds = new Set<string>();\n\n  tiles = new Set<TileCore>();\n\n  workedTiles = new Set<TileCore>();\n\n  notWorkedTiles = new Set<TileCore>();\n\n  availableBuildings: Building[] = [];\n  disabledBuildings = new Set<Building>();\n\n  availableUnits: UnitDefinition[] = [];\n  disabledUnits = new Set<UnitDefinition>();\n\n  availableIdleProducts: IdleProduct[] = [];\n  disabledIdleProducts = new Set<IdleProduct>();\n\n  changedSize = false;\n\n  constructor(public tile: TileCore, public player: PlayerCore) {\n    this.addTile(tile);\n  }\n\n  nextTurn() {\n    this.changedSize = false;\n\n    this.progressExpansion();\n    this.progressProduction();\n    this.progressGrowth();\n    this.updateYields();\n\n    if (this.player === this.player.game.trackedPlayer || this.changedSize) {\n      collector.cities.add(this);\n    }\n  }\n\n  private progressProduction() {\n    if (!this.product) {\n      return;\n    }\n\n    this.totalProduction += this.yields.production;\n\n    if (this.totalProduction >= this.product.productDefinition.productionCost) {\n      if (this.product.type === \"unit\") {\n        this.player.game.unitsManager.spawn(\n          this.product.productDefinition.id,\n          this.tile,\n          this.player,\n        );\n      } else if (this.product.type === \"building\") {\n        this.buildings.push(this.product.productDefinition as Building);\n        this.buildingsIds.add(this.product.productDefinition.id);\n      }\n      this.totalProduction = 0;\n      this.product = null;\n    }\n  }\n\n  private progressGrowth() {\n    this.totalFood += this.yields.food - this.foodConsumed;\n    if (this.totalFood >= this.foodToGrow) {\n      this.size++;\n      this.changedSize = true;\n      const bestWorkableTile = this.pickBestTileToWork(this.notWorkedTiles);\n      if (bestWorkableTile) {\n        this.workTile(bestWorkableTile);\n      }\n      this.totalFood -= this.foodToGrow;\n    } else if (this.totalFood < 0) {\n      if (this.size > 1) {\n        this.size--;\n        this.changedSize = true;\n        this.totalFood += this.foodToGrow;\n      } else {\n        this.totalFood = 0;\n      }\n    }\n    this.foodToGrow = 15 * Math.pow(1.2, this.size);\n  }\n\n  private progressExpansion() {\n    this.totalCulture += this.perTurn.culture;\n    if (this.totalCulture >= this.cultureToExpand) {\n      this.totalCulture -= this.cultureToExpand;\n      this.cultureToExpand = 5 * Math.pow(1.2, this.tiles.size);\n\n      const tile = this.pickBestTileToExpand(\n        this.tile,\n        this.getTilesAvailableForExpansion(),\n      );\n      if (tile) {\n        this.addTile(tile);\n        tile.sweetSpotValue = 0;\n      }\n    }\n  }\n\n  produceUnit(unit: UnitDefinition) {\n    this.startProducing({\n      type: \"unit\",\n      productDefinition: unit,\n    });\n  }\n\n  produceBuilding(building: Building) {\n    if (this.canConstruct(building)) {\n      this.startProducing({\n        type: \"building\",\n        productDefinition: building,\n      });\n    }\n  }\n\n  workOnIdleProduct(idleProduct: IdleProduct) {\n    this.startProducing({\n      type: \"idleProduct\",\n      productDefinition: idleProduct,\n    });\n    this.updateYields();\n    this.player.updateYields();\n  }\n\n  cancelProduction() {\n    if (this.product) {\n      const type = this.product.type;\n      this.product = null;\n      if (type === \"idleProduct\") {\n        this.updateYields();\n        this.player.updateYields();\n      }\n    }\n  }\n\n  private startProducing(product: Product) {\n    if (!this.canProduce(product.productDefinition)) {\n      return;\n    }\n\n    this.cancelProduction();\n\n    this.product = product;\n    this.totalProduction = 0;\n    collector.cities.add(this);\n  }\n\n  get turnsToGrow() {\n    if (this.perTurn.food >= 0) {\n      const remainingFood = this.foodToGrow - this.totalFood;\n      return Math.ceil(remainingFood / this.perTurn.food);\n    } else {\n      return Math.ceil(this.totalFood / this.perTurn.food) - 1;\n    }\n  }\n\n  get turnsToProductionEnd() {\n    if (!this.product) {\n      return null;\n    }\n    const remainingProduction =\n      this.product.productDefinition.productionCost - this.totalProduction;\n\n    return Math.ceil(remainingProduction / this.yields.production);\n  }\n\n  get turnsToExpand() {\n    const remainingCulture = this.cultureToExpand - this.totalCulture;\n    return Math.ceil(remainingCulture / this.perTurn.culture);\n  }\n\n  getTurnsToProduce(unit: UnitDefinition) {\n    return Math.ceil(unit.productionCost / this.yields.production);\n  }\n\n  updateYields() {\n    zeroYields(this.tileYields);\n\n    this.tileYields.food = 2;\n    this.tileYields.production = 1;\n\n    for (const tile of this.workedTiles) {\n      addYields(this.tileYields, tile.yields);\n    }\n\n    this.tileYields.production += this.freeTileWorkers;\n\n    copyYields(this.yields, this.tileYields);\n\n    for (const building of this.buildings) {\n      this.applyBonuses(building.bonuses);\n    }\n\n    if (this.product?.type === \"idleProduct\") {\n      const idleProduct = this.product.productDefinition as IdleProduct;\n      this.applyBonuses(idleProduct.bonuses);\n    }\n    roundYields(this.yields);\n\n    this.foodConsumed = this.size;\n\n    copyYields(this.perTurn, this.yields);\n    this.perTurn.food -= this.foodConsumed;\n  }\n\n  applyBonuses(bonuses: Bonuses) {\n    this.yields.food += bonuses.yieldValue?.food || 0;\n    this.yields.production += bonuses.yieldValue?.production || 0;\n    this.yields.culture += bonuses.yieldValue?.culture || 0;\n    this.yields.publicWorks += bonuses.yieldValue?.publicWorks || 0;\n\n    if (bonuses.yieldFactor?.food) {\n      this.yields.food += this.tileYields.food * bonuses.yieldFactor.food;\n    }\n    if (bonuses.yieldFactor?.production) {\n      this.yields.production +=\n        this.tileYields.production * bonuses.yieldFactor.production;\n    }\n    if (bonuses.yieldFactor?.culture) {\n      this.yields.culture +=\n        this.tileYields.culture * bonuses.yieldFactor.culture;\n    }\n    if (bonuses.yieldFactor?.publicWorks) {\n      this.yields.publicWorks +=\n        this.tileYields.publicWorks * bonuses.yieldFactor.publicWorks;\n    }\n\n    if (bonuses.transferProductionToFood) {\n      this.yields.food +=\n        this.yields.production * bonuses.transferProductionToFood;\n    }\n\n    if (bonuses.transferProductionToCulture) {\n      this.yields.culture +=\n        this.yields.production * bonuses.transferProductionToCulture;\n    }\n\n    if (bonuses.transferProductionToPublicWorks) {\n      this.yields.publicWorks +=\n        this.yields.production * bonuses.transferProductionToPublicWorks;\n    }\n  }\n\n  addTile(tile: TileCore) {\n    if (!tile.areaOf) {\n      this.tiles.add(tile);\n      this.notWorkedTiles.add(tile);\n      tile.areaOf = this;\n      this.player.area.add(tile);\n      this.player.exploreTiles([tile]);\n      this.player.exploreTiles(tile.neighbours);\n      collector.tiles.add(tile);\n    }\n  }\n\n  removeTile(tile: TileCore) {\n    if (this.tiles.has(tile)) {\n      this.tiles.delete(tile);\n      tile.areaOf = null;\n      this.player.area.remove(tile);\n      collector.tiles.add(tile);\n    }\n  }\n\n  workTile(tile: TileCore, updateYields = true) {\n    if (this.freeTileWorkers && this.tiles.has(tile)) {\n      this.workedTiles.add(tile);\n      this.notWorkedTiles.delete(tile);\n      if (updateYields) {\n        this.updateYields();\n      }\n    }\n  }\n\n  unworkTile(tile: TileCore, updateYields = true) {\n    this.workedTiles.delete(tile);\n    this.notWorkedTiles.add(tile);\n    if (updateYields) {\n      this.updateYields();\n    }\n  }\n\n  getTilesAvailableForExpansion(): Set<TileCore> {\n    const availableTiles = new Set<TileCore>();\n    for (const tile of this.tiles) {\n      for (const neighbour of tile.neighbours) {\n        if (!neighbour.areaOf) {\n          availableTiles.add(neighbour);\n        }\n      }\n    }\n    return availableTiles;\n  }\n\n  pickBestTileToWork(tiles: Set<TileCore>): TileCore | null {\n    let bestTile: TileCore | null = null;\n    let bestYields = 0;\n\n    for (const tile of tiles) {\n      const yields = tile.totalYields;\n      if (yields > bestYields) {\n        bestYields = yields;\n        bestTile = tile;\n      }\n    }\n\n    return bestTile;\n  }\n\n  pickBestTileToExpand(\n    cityTile: TileCore,\n    tiles: Set<TileCore>,\n  ): TileCore | null {\n    let bestTile: TileCore | null = null;\n    let bestScore = -Infinity;\n\n    for (const tile of tiles) {\n      const score = tile.totalYields - cityTile.getDistanceTo(tile) / 2;\n      if (score > bestScore) {\n        bestScore = score;\n        bestTile = tile;\n      }\n    }\n\n    return bestTile;\n  }\n\n  get freeTileWorkers() {\n    return this.size - this.workedTiles.size;\n  }\n\n  optimizeYields() {\n    this.workedTiles.clear();\n    this.notWorkedTiles = new Set(this.tiles);\n    while (this.freeTileWorkers && this.notWorkedTiles.size) {\n      const tile = this.pickBestTileToWork(this.notWorkedTiles);\n      if (!tile) {\n        break;\n      }\n      this.workTile(tile, false);\n    }\n    this.updateYields();\n  }\n\n  canConstruct(building: Building) {\n    return !this.buildings.includes(building);\n  }\n\n  canProduce(product: ProductDefinition): boolean {\n    for (const r of product.requirements) {\n      if (!r.check(this)) {\n        return false;\n      }\n    }\n\n    for (const r of product.weakRequirements) {\n      if (!r.check(this)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private getAvailableProducts<T extends ProductDefinition>(\n    products: T[],\n    city: CityCore,\n  ): T[] {\n    const results: T[] = [];\n    for (const p of products) {\n      let ok = true;\n      for (const r of p.requirements) {\n        if (!r.check(city)) {\n          ok = false;\n          break;\n        }\n      }\n      if (ok) {\n        results.push(p);\n      }\n    }\n    return results;\n  }\n\n  private getDisabledProducts<T extends ProductDefinition>(\n    products: T[],\n    city: CityCore,\n  ): Set<T> {\n    const results = new Set<T>();\n    for (const p of products) {\n      for (const r of p.weakRequirements) {\n        if (!r.check(city)) {\n          results.add(p);\n        }\n      }\n    }\n    return results;\n  }\n\n  updateProductsList() {\n    this.availableUnits = this.getAvailableProducts<UnitDefinition>(\n      UNITS_DEFINITIONS,\n      this,\n    );\n    this.disabledUnits = this.getDisabledProducts<UnitDefinition>(\n      this.availableUnits,\n      this,\n    );\n\n    const notBuildBuildings = BUILDINGS.filter(\n      (b) =>\n        this.product?.productDefinition !== b && !this.buildings.includes(b),\n    );\n\n    this.availableBuildings = this.getAvailableProducts<Building>(\n      notBuildBuildings,\n      this,\n    );\n    this.disabledBuildings = this.getDisabledProducts<Building>(\n      this.availableBuildings,\n      this,\n    );\n\n    this.availableIdleProducts = IDLE_PRODUCTS;\n  }\n\n  changeOwner(newOwner: PlayerCore) {\n    if (this.player === newOwner) {\n      return;\n    }\n\n    const oldOwner = this.player;\n\n    this.player = newOwner;\n\n    const cityTiles = Array.from(this.tiles);\n\n    let index = oldOwner.cities.indexOf(this);\n    if (index !== -1) {\n      oldOwner.cities.splice(index, 1);\n      oldOwner.area.removeBulk(cityTiles);\n    }\n\n    newOwner.cities.push(this);\n    newOwner.area.addBulk(cityTiles);\n\n    newOwner.updateYields();\n    oldOwner.updateYields();\n\n    // TODO explored area should be bigger then city tiles. Change this once fog of war is implement (probably a city should store it's visible tiles)\n    newOwner.exploreTiles(this.tiles);\n\n    collector.cities.add(this);\n    for (const tile of this.tiles) {\n      collector.tiles.add(tile);\n    }\n  }\n}\n","import { TileCore } from \"./tile\";\nimport { UnitCore } from \"./unit\";\nimport { CityCore } from \"./city\";\nimport { PlayerCore } from \"./player\";\nimport {\n  tileToChannel,\n  unitToChannel,\n  cityToChannel,\n  trackedPlayerToChannel,\n} from \"./serialization/channel\";\nimport { PlayerYields } from \"../shared\";\n\nclass Collector {\n  tiles = new Set<TileCore>();\n\n  units = new Set<UnitCore>();\n  unitsDestroyed = new Set<number>();\n\n  cities = new Set<CityCore>();\n  citiesDestroyed = new Set<number>();\n\n  areaTilesAdded = new Map<number, TileCore[]>();\n  areaTilesRemoved = new Map<number, TileCore[]>();\n\n  trackedPlayer: PlayerCore | undefined;\n  trackedPlayerYields: PlayerYields | undefined;\n  tilesExplored = new Set<number>();\n\n  turn = 0;\n\n  flush() {\n    const changes: any[] = [];\n\n    for (const unit of this.units) {\n      changes.push({ type: \"unit.updated\", data: unitToChannel(unit) });\n    }\n    for (const id of this.unitsDestroyed) {\n      changes.push({ type: \"unit.destroyed\", data: id });\n    }\n\n    for (const city of this.cities) {\n      changes.push({ type: \"city.updated\", data: cityToChannel(city) });\n    }\n    for (const id of this.citiesDestroyed) {\n      changes.push({ type: \"city.destroyed\", data: id });\n    }\n\n    if (this.tiles.size) {\n      changes.push({\n        type: \"tiles.updated\",\n        data: Array.from(this.tiles).map((tile) => tileToChannel(tile)),\n      });\n    }\n\n    for (const [id, tiles] of this.areaTilesAdded.entries()) {\n      changes.push({\n        type: \"area.tilesAdded\",\n        data: { id, tiles: tiles.map((t) => t.id) },\n      });\n    }\n    for (const [id, tiles] of this.areaTilesRemoved.entries()) {\n      changes.push({\n        type: \"area.tilesRemoved\",\n        data: { id, tiles: tiles.map((t) => t.id) },\n      });\n    }\n\n    if (this.turn) {\n      changes.push({ type: \"game.turn\", data: this.turn });\n    }\n\n    if (this.trackedPlayer) {\n      changes.push({\n        type: \"trackedPlayer.set\",\n        data: trackedPlayerToChannel(this.trackedPlayer),\n      });\n    }\n    if (this.trackedPlayerYields) {\n      changes.push({\n        type: \"trackedPlayer.yields\",\n        data: this.trackedPlayerYields,\n      });\n    }\n    if (this.tilesExplored.size) {\n      changes.push({\n        type: \"trackedPlayer.tilesExplored\",\n        data: Array.from(this.tilesExplored),\n      });\n    }\n\n    this.tiles.clear();\n\n    this.unitsDestroyed.clear();\n    this.units.clear();\n\n    this.cities.clear();\n    this.citiesDestroyed.clear();\n\n    this.areaTilesAdded.clear();\n    this.areaTilesRemoved.clear();\n\n    this.trackedPlayer = undefined;\n    this.tilesExplored.clear();\n\n    this.turn = 0;\n\n    return changes;\n  }\n\n  addAreaTiles(areaId: number, tiles: TileCore[]) {\n    if (!this.areaTilesAdded.has(areaId)) {\n      this.areaTilesAdded.set(areaId, tiles);\n    } else {\n      this.areaTilesAdded.get(areaId)!.push(...tiles);\n    }\n  }\n\n  removeAreaTiles(areaId: number, tiles: TileCore[]) {\n    if (!this.areaTilesRemoved.has(areaId)) {\n      this.areaTilesRemoved.set(areaId, tiles);\n    } else {\n      this.areaTilesRemoved.get(areaId)!.push(...tiles);\n    }\n  }\n}\n\nexport const collector = new Collector();\n","export class Debug {\n  revealMap = false;\n}\n","import { PlayerCore } from \"./player\";\nimport { TilesMapCore } from \"./tiles-map\";\nimport { UnitsManager } from \"./unit-manager\";\nimport { Debug } from \"./debug\";\nimport { CitiesManager } from \"./cities-manager\";\nimport { AreasManager } from \"./areas-manager\";\nimport { collector } from \"./collector\";\n\nexport class Game {\n  debug = new Debug();\n\n  map: TilesMapCore;\n\n  players: PlayerCore[] = [];\n\n  activePlayerIndex = -1;\n\n  trackedPlayer: PlayerCore;\n\n  humanPlayer: PlayerCore | null = null;\n\n  turn = 1;\n\n  areasManager = new AreasManager();\n\n  unitsManager = new UnitsManager(this);\n\n  citiesManager = new CitiesManager();\n\n  start() {\n    this.activePlayerIndex = -1;\n    this.nextPlayer();\n  }\n\n  addPlayer(player: PlayerCore) {\n    player.id = this.players.length;\n    this.players.push(player);\n    if (!this.trackedPlayer) {\n      this.trackedPlayer = player;\n    }\n  }\n\n  nextPlayer() {\n    this.activePlayerIndex++;\n    if (this.activePlayerIndex >= this.players.length) {\n      this.nextTurn();\n      this.activePlayerIndex = 0;\n    }\n    if (this.activePlayer.ai) {\n      this.activePlayer.ai.nextTurn();\n      this.nextPlayer();\n    } else {\n      if (this.trackedPlayer !== this.activePlayer) {\n        this.trackedPlayer = this.activePlayer;\n        collector.trackedPlayer = this.trackedPlayer;\n      }\n    }\n  }\n\n  nextTurn() {\n    this.unitsManager.nextTurn();\n    this.citiesManager.nextTurn();\n    for (const player of this.players) {\n      player.nextTurn();\n    }\n    this.turn++;\n    collector.turn = this.turn;\n  }\n\n  get activePlayer() {\n    return this.players[this.activePlayerIndex];\n  }\n}\n","import { ProductDefinition } from \"./product\";\nimport { Bonuses } from \"./bonus\";\nimport { IDLE_PRODUCTS } from \"../data/idle-products\";\n\nexport interface IdleProduct extends ProductDefinition {\n  bonuses: Bonuses;\n}\n\nexport const IDLE_PRODUCTS_MAP = new Map<string, IdleProduct>();\n\nfor (const definition of IDLE_PRODUCTS) {\n  IDLE_PRODUCTS_MAP.set(definition.id, definition);\n}\n","import { CityCore } from \"./city\";\n\nexport abstract class ProductRequirement {\n  static id: string;\n  abstract check(city: CityCore): boolean;\n}\n\nexport interface ProductDefinition {\n  id: string;\n  name: string;\n  productionCost: number;\n\n  // product will be hidden from products list\n  requirements: ProductRequirement[];\n\n  // product will be disabled on the products list\n  weakRequirements: ProductRequirement[];\n}\n\nexport class BuildingRequirement extends ProductRequirement {\n  id = \"building\";\n\n  constructor(public buildingId: string) {\n    super();\n  }\n\n  check(city: CityCore) {\n    return city.buildingsIds.has(this.buildingId);\n  }\n}\n\nexport class SizeRequirement extends ProductRequirement {\n  id = \"size\";\n\n  constructor(public size: number) {\n    super();\n  }\n\n  check(city: CityCore) {\n    return city.size >= this.size;\n  }\n}\n","import { Yields } from \"../yields\";\nimport { ProductType, CityCore } from \"../city\";\nimport { Game } from \"../game\";\nimport { PlayerCore } from \"../player\";\nimport { BaseTile, PlayerYields } from \"src/app/shared\";\nimport { TilesMapCore } from \"../tiles-map\";\nimport { UnitOrder, UnitCore } from \"../unit\";\nimport { TileCore } from \"../tile\";\n\nexport interface GameChanneled {\n  turn: number;\n  map: MapChanneled;\n  players: PlayerChanneled[];\n  trackedPlayer: TrackedPlayerChanneled;\n  units: UnitChanneled[];\n  cities: CityChanneled[];\n}\n\nexport interface MapChanneled {\n  width: number;\n  height: number;\n  tiles: TileChanneled[][];\n}\n\nexport interface TileChanneled extends BaseTile {\n  areaOf: number | null;\n  cityId: number | null;\n  unitsIds: number[];\n}\n\nexport interface CityChanneled {\n  id: number;\n  name: string;\n  size: number;\n  tileId: number;\n  playerId: number;\n\n  totalFood: number;\n  foodToGrow: number;\n  foodPerTurn: number;\n  turnsToGrow: number;\n\n  totalProduction: number;\n  productionPerTurn: number;\n  productionRequired: number | null;\n  turnsToProductionEnd: number | null;\n  productName: string | null;\n}\n\nexport interface CityDetailsChanneled {\n  id: number;\n  name: string;\n  size: number;\n  tileId: number;\n  playerId: number;\n\n  totalFood: number;\n  foodToGrow: number;\n  turnsToGrow: number;\n\n  totalProduction: number;\n  turnsToProductionEnd: number | null;\n  foodConsumed: number;\n\n  totalCulture: number;\n  cultureToExpand: number;\n\n  tileYields: Yields;\n  yields: Yields;\n  perTurn: Yields;\n\n  productId: string | null;\n  productType: ProductType | null;\n\n  buildingsIds: string[];\n\n  tiles: number[];\n\n  workedTiles: number[];\n\n  availableBuildings: string[];\n\n  disabledBuildings: string[];\n\n  availableUnits: string[];\n  disabledUnits: string[];\n\n  availableIdleProducts: string[];\n  disabledIdleProducts: string[];\n}\n\nexport interface PlayerChanneled {\n  id: number;\n  color: number;\n  areaId: number;\n}\n\nexport interface TrackedPlayerChanneled {\n  id: number;\n  color: number;\n  exploredTiles: number[];\n  units: number[];\n  cities: number[];\n\n  yields: PlayerYields;\n}\n\nexport interface UnitChanneled {\n  id: number;\n  tileId: number;\n  definitionId: string;\n  playerId: number;\n}\n\nexport interface UnitDetailsChanneled {\n  id: number;\n  tileId: number;\n  definitionId: string;\n  playerId: number;\n  actionPointsLeft: number;\n  order: UnitOrder;\n  path: number[][] | null;\n}\n\nexport function gameToChannel(game: Game): GameChanneled {\n  return {\n    turn: game.turn,\n    map: mapToChannel(game.map),\n    players: game.players.map((p) => playerToChannel(p)),\n    trackedPlayer: trackedPlayerToChannel(game.trackedPlayer),\n    units: game.unitsManager.units.map((u) => unitToChannel(u)),\n    cities: game.citiesManager.cities.map((c) => cityToChannel(c)),\n  };\n}\n\nexport function mapToChannel(map: TilesMapCore): MapChanneled {\n  const tiles: TileChanneled[][] = [];\n  for (let x = 0; x < map.width; x++) {\n    const row: TileChanneled[] = [];\n    tiles.push(row);\n    for (let y = 0; y < map.height; y++) {\n      row.push(tileToChannel(map.tiles[x][y]));\n    }\n  }\n\n  return {\n    width: map.width,\n    height: map.height,\n    tiles,\n  };\n}\n\nexport function tileToChannel(tile: TileCore): TileChanneled {\n  return {\n    id: tile.id,\n    x: tile.x,\n    y: tile.y,\n    climate: tile.climate,\n    forest: tile.forest,\n    improvement: tile.improvement,\n    landForm: tile.landForm,\n    riverParts: tile.riverParts,\n    road: tile.road,\n    seaLevel: tile.seaLevel,\n    wetlands: tile.wetlands,\n    yields: tile.yields,\n    areaOf: tile.areaOf ? tile.areaOf.id : null,\n    unitsIds: tile.units.map((u) => u.id),\n    cityId: tile.city ? tile.city.id : null,\n  };\n}\n\nexport function cityToChannel(city: CityCore): CityChanneled {\n  return {\n    id: city.id,\n    name: city.name,\n    size: city.size,\n    playerId: city.player.id,\n    tileId: city.tile.id,\n\n    totalFood: city.totalFood,\n    foodToGrow: city.foodToGrow,\n    foodPerTurn: city.perTurn.food,\n    turnsToGrow: city.turnsToGrow,\n\n    totalProduction: city.totalProduction,\n    productionPerTurn: city.yields.production,\n    productionRequired: city.product\n      ? city.product.productDefinition.productionCost\n      : null,\n    turnsToProductionEnd: city.turnsToProductionEnd,\n    productName: city.product ? city.product.productDefinition.name : null,\n  };\n}\n\nexport function cityDetailsToChannel(city: CityCore): CityDetailsChanneled {\n  city.updateProductsList();\n\n  return {\n    id: city.id,\n    name: city.name,\n    size: city.size,\n    playerId: city.player.id,\n    tileId: city.tile.id,\n\n    totalFood: city.totalFood,\n    foodToGrow: city.foodToGrow,\n    turnsToGrow: city.turnsToGrow,\n\n    totalProduction: city.totalProduction,\n    turnsToProductionEnd: city.turnsToProductionEnd,\n    availableBuildings: city.availableBuildings.map((b) => b.id),\n    availableIdleProducts: city.availableIdleProducts.map((p) => p.id),\n    availableUnits: city.availableUnits.map((u) => u.id),\n    buildingsIds: Array.from(city.buildingsIds),\n    cultureToExpand: city.cultureToExpand,\n    disabledBuildings: Array.from(city.disabledBuildings).map((b) => b.id),\n    disabledIdleProducts: Array.from(city.disabledIdleProducts).map(\n      (p) => p.id,\n    ),\n    disabledUnits: Array.from(city.disabledUnits).map((u) => u.id),\n    foodConsumed: city.foodConsumed,\n    perTurn: city.perTurn,\n    productId: city.product?.productDefinition.id || null,\n    productType: city.product?.type || null,\n    tileYields: city.tileYields,\n    tiles: Array.from(city.tiles).map((t) => t.id),\n    totalCulture: city.totalCulture,\n    workedTiles: Array.from(city.workedTiles).map((t) => t.id),\n    yields: city.yields,\n  };\n}\n\nexport function playerToChannel(player: PlayerCore): PlayerChanneled {\n  return {\n    id: player.id,\n    color: player.color,\n    areaId: player.area.id,\n  };\n}\n\nexport function trackedPlayerToChannel(\n  player: PlayerCore,\n): TrackedPlayerChanneled {\n  return {\n    id: player.id,\n    color: player.color,\n    exploredTiles: Array.from(player.exploredTiles).map((t) => t.id),\n    units: player.units.map((u) => u.id),\n    cities: player.cities.map((c) => c.id),\n    yields: player.yields,\n  };\n}\n\nexport function unitToChannel(unit: UnitCore): UnitChanneled {\n  return {\n    id: unit.id,\n    tileId: unit.tile.id,\n    definitionId: unit.definition.id,\n    playerId: unit.player.id,\n  };\n}\n\nexport function unitDetailsToChannel(unit: UnitCore): UnitDetailsChanneled {\n  return {\n    id: unit.id,\n    tileId: unit.tile.id,\n    definitionId: unit.definition.id,\n    playerId: unit.player.id,\n    actionPointsLeft: unit.actionPointsLeft,\n    order: unit.order,\n    path: unit.path?.map((row) => row.map((tile) => tile.id)) || null,\n  };\n}\n","export enum TileImprovement {\n  farm,\n  mine,\n  sawmill,\n}\n\nexport enum TileRoad {\n  road,\n}\n\nexport const IMPROVEMENT_PUBLIC_WORKS_COSTS: Record<TileImprovement, number> = {\n  [TileImprovement.farm]: 15,\n  [TileImprovement.mine]: 15,\n  [TileImprovement.sawmill]: 15,\n};\n\nexport const IMPROVEMENT_PUBLIC_WORKS_COSTS_PER_TURN: Record<\n  TileImprovement,\n  number\n> = {\n  [TileImprovement.farm]: 1,\n  [TileImprovement.mine]: 1,\n  [TileImprovement.sawmill]: 1,\n};\n\nexport const ROAD_PUBLIC_WORKS_COSTS: Record<TileRoad, number> = {\n  [TileRoad.road]: 15,\n};\n\nexport const ROAD_PUBLIC_WORKS_COSTS_PER_TURN: Record<TileRoad, number> = {\n  [TileRoad.road]: 1,\n};\n","import { Game } from \"./game\";\nimport { UnitCore } from \"./unit\";\nimport {\n  TileImprovement,\n  TileRoad,\n  IMPROVEMENT_PUBLIC_WORKS_COSTS,\n  IMPROVEMENT_PUBLIC_WORKS_COSTS_PER_TURN,\n  ROAD_PUBLIC_WORKS_COSTS,\n  ROAD_PUBLIC_WORKS_COSTS_PER_TURN,\n} from \"./tile-improvements\";\nimport { isImprovementPossible, isRoadPossible } from \"../shared\";\n\nexport type UnitAction =\n  | \"foundCity\"\n  | \"buildRoad\"\n  | \"buildFarm\"\n  | \"buildMine\"\n  | \"buildSawmill\";\n\nconst ACTION_TO_IMPROVEMENT: Partial<Record<UnitAction, TileImprovement>> = {\n  buildFarm: TileImprovement.farm,\n  buildMine: TileImprovement.mine,\n  buildSawmill: TileImprovement.sawmill,\n};\n\nexport function getPublicWorksRequired(action: UnitAction) {\n  if (action === \"buildRoad\") {\n    return ROAD_PUBLIC_WORKS_COSTS[TileRoad.road];\n  }\n  const improvement = ACTION_TO_IMPROVEMENT[action];\n  if (improvement !== undefined) {\n    return IMPROVEMENT_PUBLIC_WORKS_COSTS[improvement];\n  }\n  return 0;\n}\n\nexport function getPublicWorksPerTurn(action: UnitAction) {\n  if (action === \"buildRoad\") {\n    return ROAD_PUBLIC_WORKS_COSTS_PER_TURN[TileRoad.road];\n  }\n  const improvement = ACTION_TO_IMPROVEMENT[action];\n  if (improvement !== undefined) {\n    return IMPROVEMENT_PUBLIC_WORKS_COSTS_PER_TURN[improvement];\n  }\n  return 0;\n}\n\nexport abstract class ActionRequirement {\n  static id: string;\n\n  id: string;\n\n  constructor() {\n    this.id = this.constructor[\"id\"];\n  }\n\n  abstract check(unit: UnitCore, action: UnitAction): boolean;\n}\n\nexport class OwnTileRequirement extends ActionRequirement {\n  id = \"ownTile\";\n\n  check(unit: UnitCore) {\n    return unit.tile.areaOf?.player === unit.player;\n  }\n}\n\nexport class NotForeignTileRequirement extends ActionRequirement {\n  id = \"notForeignTile\";\n\n  check(unit: UnitCore) {\n    return !unit.tile.areaOf || unit.tile.areaOf?.player === unit.player;\n  }\n}\n\nexport class ImprovementNotYetBuiltRequirement extends ActionRequirement {\n  id = \"sameImprovement\";\n\n  constructor(public improvement: TileImprovement) {\n    super();\n  }\n\n  check(unit: UnitCore) {\n    return unit.tile.improvement !== this.improvement;\n  }\n}\nexport class IsImprovementPossibleRequirement extends ActionRequirement {\n  id = \"improvementPossible\";\n\n  constructor(public improvement: TileImprovement) {\n    super();\n  }\n\n  check(unit: UnitCore) {\n    return isImprovementPossible(unit.tile, this.improvement);\n  }\n}\n\nexport class NoRoadRequirement extends ActionRequirement {\n  id = \"noRoad\";\n\n  check(unit: UnitCore) {\n    return unit.tile.road === null;\n  }\n}\n\nexport class isRoadPossibleRequirement extends ActionRequirement {\n  id = \"roadPossible\";\n\n  check(unit: UnitCore) {\n    return isRoadPossible(unit.tile);\n  }\n}\n\nexport class PublicWorksPointsRequirement extends ActionRequirement {\n  id = \"publicWorks\";\n\n  check(unit: UnitCore, action: UnitAction) {\n    return (\n      unit.player.yields.total.publicWorks >= getPublicWorksRequired(action)\n    );\n  }\n}\n\ninterface ActionDefinition {\n  action: UnitAction;\n  name: string;\n  fn: (game: Game, unit: UnitCore) => void;\n  requirements: ActionRequirement[];\n}\n\nfunction foundCity(game: Game, unit: UnitCore) {\n  const city = game.citiesManager.spawn(unit.tile, unit.player);\n  if (city) {\n    game.unitsManager.destroy(unit);\n  }\n}\n\nfunction buildImprovement(\n  game: Game,\n  unit: UnitCore,\n  improvement: TileImprovement,\n) {\n  unit.actionPointsLeft = 0;\n  unit.tile.improvement = improvement;\n  unit.tile.update();\n  unit.player.updateUnitsWithoutOrders();\n\n  unit.player.yields.total.publicWorks -=\n    IMPROVEMENT_PUBLIC_WORKS_COSTS[improvement];\n\n  unit.player.yields.costs.publicWorks +=\n    IMPROVEMENT_PUBLIC_WORKS_COSTS_PER_TURN[improvement];\n\n  unit.player.yields.perTurn.publicWorks -=\n    IMPROVEMENT_PUBLIC_WORKS_COSTS_PER_TURN[improvement];\n}\n\nfunction buildRoad(game: Game, unit: UnitCore) {\n  unit.actionPointsLeft = 0;\n  unit.tile.road = TileRoad.road;\n  unit.tile.update();\n  for (const neighbour of unit.tile.neighbours) {\n    neighbour.update();\n  }\n  unit.player.updateUnitsWithoutOrders();\n\n  unit.player.yields.total.publicWorks -=\n    ROAD_PUBLIC_WORKS_COSTS[TileRoad.road];\n\n  unit.player.yields.costs.publicWorks +=\n    ROAD_PUBLIC_WORKS_COSTS_PER_TURN[TileRoad.road];\n\n  unit.player.yields.perTurn.publicWorks -=\n    ROAD_PUBLIC_WORKS_COSTS_PER_TURN[TileRoad.road];\n}\n\nexport const ACTIONS: Record<UnitAction, ActionDefinition> = {\n  foundCity: {\n    action: \"foundCity\",\n    name: \"Found a city\",\n    fn: foundCity,\n    requirements: [new NotForeignTileRequirement()], // TODO add minimal distance to other city\n  },\n  buildFarm: {\n    action: \"buildFarm\",\n    name: \"Build a farm\",\n    fn: (game, unit) => buildImprovement(game, unit, TileImprovement.farm),\n    requirements: [\n      new OwnTileRequirement(),\n      new ImprovementNotYetBuiltRequirement(TileImprovement.farm),\n      new IsImprovementPossibleRequirement(TileImprovement.farm),\n      new PublicWorksPointsRequirement(),\n    ],\n  },\n  buildMine: {\n    action: \"buildMine\",\n    name: \"Build a mine\",\n    fn: (game, unit) => buildImprovement(game, unit, TileImprovement.mine),\n    requirements: [\n      new OwnTileRequirement(),\n      new ImprovementNotYetBuiltRequirement(TileImprovement.mine),\n      new IsImprovementPossibleRequirement(TileImprovement.mine),\n      new PublicWorksPointsRequirement(),\n    ],\n  },\n  buildSawmill: {\n    action: \"buildSawmill\",\n    name: \"Build a sawmill\",\n    fn: (game, unit) => buildImprovement(game, unit, TileImprovement.sawmill),\n    requirements: [\n      new OwnTileRequirement(),\n      new ImprovementNotYetBuiltRequirement(TileImprovement.sawmill),\n      new IsImprovementPossibleRequirement(TileImprovement.sawmill),\n      new PublicWorksPointsRequirement(),\n    ],\n  },\n  buildRoad: {\n    action: \"buildRoad\",\n    name: \"Build a road\",\n    fn: (game, unit) => buildRoad(game, unit),\n    requirements: [\n      new NoRoadRequirement(),\n      new isRoadPossibleRequirement(),\n      new PublicWorksPointsRequirement(),\n    ],\n  },\n};\n","import { UnitDefinition } from \"./unit.interface\";\nimport { UnitCore } from \"./unit\";\nimport { BehaviorSubject, Subject } from \"rxjs\";\nimport { UNITS_DEFINITIONS } from \"../data/units\";\nimport { PlayerCore } from \"./player\";\nimport { TileCore } from \"./tile\";\nimport { Game } from \"./game\";\nimport { collector } from \"./collector\";\n\nexport class UnitsManager {\n  definitions = new Map<string, UnitDefinition>();\n\n  units: UnitCore[] = [];\n\n  unitsMap = new Map<number, UnitCore>();\n\n  private lastId = 0;\n\n  constructor(private game: Game) {\n    for (const definition of UNITS_DEFINITIONS) {\n      this.definitions.set(definition.id, definition);\n    }\n  }\n\n  spawn(id: string, tile: TileCore, player: PlayerCore) {\n    const definition = this.definitions.get(id);\n    if (!definition) {\n      throw Error(`UnitsManager: No unit with id \"${id}\"`);\n    }\n\n    const unit = new UnitCore(tile, definition, player);\n    unit.id = this.lastId++;\n\n    this.units.push(unit);\n    this.unitsMap.set(unit.id, unit);\n    player.units.push(unit);\n    tile.units.push(unit);\n\n    unit.player.exploreTiles(unit.tile.getTilesInRange(2));\n\n    unit.player.unitsWithoutOrders.push(unit);\n\n    collector.units.add(unit);\n\n    return unit;\n  }\n\n  destroy(unit: UnitCore) {\n    // TODO rewrite to sets for better performance?\n\n    this.unitsMap.delete(unit.id);\n\n    let index = this.units.indexOf(unit);\n    if (index !== -1) {\n      this.units.splice(index, 1);\n    }\n\n    index = unit.player.units.indexOf(unit);\n    if (index !== -1) {\n      unit.player.units.splice(index, 1);\n    }\n\n    index = unit.tile.units.indexOf(unit);\n    if (index !== -1) {\n      unit.tile.units.splice(index, 1);\n    }\n\n    unit.player.updateUnitsWithoutOrders();\n    collector.unitsDestroyed.add(unit.id);\n  }\n\n  private move(unit: UnitCore, tile: TileCore) {\n    if (!unit.actionPointsLeft) {\n      return;\n    }\n\n    const cost = this.getMovementCost(unit, tile);\n    if (cost === Infinity) {\n      return;\n    }\n\n    if (unit.definition.power) {\n      if (\n        tile.units.length &&\n        tile.units.find((u) => u.player !== unit.player)\n      ) {\n        // battle\n      } else if (tile.city && tile.city.player !== unit.player) {\n        tile.city.changeOwner(unit.player);\n      }\n    }\n\n    const index = unit.tile.units.indexOf(unit);\n    if (index !== -1) {\n      unit.tile.units.splice(index, 1);\n    }\n    tile.units.push(unit);\n    unit.tile = tile;\n\n    unit.actionPointsLeft = Math.max(unit.actionPointsLeft - cost, 0);\n\n    unit.player.exploreTiles(tile.getTilesInRange(2));\n  }\n\n  moveAlongPath(unit: UnitCore) {\n    if (!unit.path) {\n      unit.setOrder(null);\n      return;\n    }\n\n    unit.setOrder(unit.path.length ? \"go\" : null);\n\n    collector.units.add(unit);\n\n    while (unit.actionPointsLeft && unit.path.length) {\n      this.move(unit, unit.path[0][0]);\n      unit.path[0].shift();\n      if (!unit.path[0].length) {\n        unit.path.shift();\n      }\n      if (!unit.path.length) {\n        unit.path = null;\n        unit.setOrder(null);\n        return;\n      }\n    }\n  }\n\n  getMovementCost(unit: UnitCore, target: TileCore) {\n    return unit.tile.neighboursCosts.get(target) || Infinity;\n  }\n\n  nextTurn() {\n    for (const unit of this.units) {\n      if (unit.path) {\n        this.moveAlongPath(unit);\n      }\n      if (unit.order === \"skip\") {\n        unit.setOrder(null);\n      }\n      unit.actionPointsLeft = unit.definition.actionPoints;\n    }\n  }\n}\n","import { TileCore } from \"./tile\";\nimport { UnitDefinition } from \"./unit.interface\";\nimport { PlayerCore } from \"./player\";\nimport { UnitAction, ACTIONS } from \"./unit-actions\";\nimport { UNITS_DEFINITIONS } from \"../data/units\";\nimport { collector } from \"./collector\";\n\nexport type UnitOrder = \"go\" | \"skip\" | \"sleep\" | null;\n\nexport const UNITS_MAP = new Map<string, UnitDefinition>();\n\nfor (const definition of UNITS_DEFINITIONS) {\n  UNITS_MAP.set(definition.id, definition);\n}\n\nexport class UnitCore {\n  id: number;\n  actionPointsLeft: number;\n  path: TileCore[][] | null;\n\n  order: UnitOrder = null;\n\n  constructor(\n    public tile: TileCore,\n    public definition: UnitDefinition,\n    public player: PlayerCore,\n  ) {\n    this.actionPointsLeft = definition.actionPoints;\n  }\n\n  doAction(action: UnitAction) {\n    if (!this.canDoAction(action)) {\n      return;\n    }\n\n    ACTIONS[action].fn(this.player.game, this);\n    collector.units.add(this);\n  }\n\n  canDoAction(action: UnitAction): boolean {\n    if (!this.actionPointsLeft) {\n      return false;\n    }\n\n    if (!this.definition.actions.includes(action)) {\n      return false;\n    }\n\n    for (const r of ACTIONS[action].requirements) {\n      if (!r.check(this, action)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getFailedActionRequirements(action: UnitAction): string[] {\n    return ACTIONS[action].requirements\n      .filter((r) => !r.check(this, action))\n      .map((r) => r.id);\n  }\n\n  setOrder(order: UnitOrder) {\n    this.order = order;\n    this.player.updateUnitsWithoutOrders();\n  }\n\n  getPathDestination(): TileCore | null {\n    if (!this.path) {\n      return null;\n    }\n\n    const lastPathTurn = this.path[this.path.length - 1];\n    return lastPathTurn[lastPathTurn.length - 1];\n  }\n\n  getRange(): Set<TileCore> {\n    const result = new Set<TileCore>();\n    const actionPointsLeftAtTile = new Map<TileCore, number>();\n\n    this._getRange(\n      this.tile,\n      this.actionPointsLeft,\n      result,\n      actionPointsLeftAtTile,\n    );\n\n    if (result.size === 1) {\n      result.delete(this.tile);\n    }\n\n    return result;\n  }\n\n  private _getRange(\n    tile = this.tile,\n    actionPointsLeft = this.actionPointsLeft,\n    result: Set<TileCore>,\n    actionPointsLeftAtTile: Map<TileCore, number>,\n  ) {\n    result.add(tile);\n\n    if (actionPointsLeft <= 0) {\n      return result;\n    }\n\n    for (const neighbour of tile.neighbours) {\n      const oldActionPointsLeft = actionPointsLeftAtTile.get(neighbour);\n\n      const cost = tile.neighboursCosts.get(neighbour)!;\n      if (cost === Infinity) {\n        continue;\n      }\n\n      const newActionPointsLeft = actionPointsLeft - cost;\n\n      if (!oldActionPointsLeft || newActionPointsLeft > oldActionPointsLeft) {\n        actionPointsLeftAtTile.set(neighbour, newActionPointsLeft);\n\n        this._getRange(\n          neighbour,\n          newActionPointsLeft,\n          result,\n          actionPointsLeftAtTile,\n        );\n      }\n    }\n\n    return result;\n  }\n}\n","export interface Yields {\n  food: number;\n  production: number;\n  culture: number;\n  publicWorks: number;\n}\n\nexport const EMPTY_YIELDS: Yields = {\n  food: 0,\n  production: 0,\n  culture: 0,\n  publicWorks: 0,\n};\n\nexport function zeroYields(yields: Yields) {\n  yields.food = 0;\n  yields.production = 0;\n  yields.culture = 0;\n  yields.publicWorks = 0;\n}\n\nexport function addYields(targetYields: Yields, yields: Yields) {\n  targetYields.food += yields.food;\n  targetYields.production += yields.production;\n  targetYields.culture += yields.culture;\n  targetYields.publicWorks += yields.publicWorks;\n}\n\nexport function subtractYields(targetYields: Yields, yields: Yields) {\n  targetYields.food -= yields.food;\n  targetYields.production -= yields.production;\n  targetYields.culture -= yields.culture;\n  targetYields.publicWorks -= yields.publicWorks;\n}\n\nexport function copyYields(targetYields: Yields, yields: Yields) {\n  targetYields.food = yields.food;\n  targetYields.production = yields.production;\n  targetYields.culture = yields.culture;\n  targetYields.publicWorks = yields.publicWorks;\n}\n\nexport function roundYields(yields: Yields) {\n  yields.food = Math.ceil(yields.food);\n  yields.production = Math.ceil(yields.production);\n  yields.culture = Math.ceil(yields.culture);\n  yields.publicWorks = Math.ceil(yields.publicWorks);\n}\n","import { Building } from \"../core/buildings\";\nimport { BuildingRequirement } from \"../core/product\";\n\nexport const BUILDINGS: Building[] = [\n  {\n    id: \"granary\",\n    name: \"Granary\",\n    productionCost: 40,\n    bonuses: { yieldValue: { food: 3 } },\n    requirements: [],\n    weakRequirements: [],\n  },\n  {\n    id: \"well\",\n    name: \"Well\",\n    productionCost: 20,\n    bonuses: { yieldValue: { food: 1 } },\n    requirements: [],\n    weakRequirements: [],\n  },\n  {\n    id: \"bigGranary\",\n    name: \"Grand granary\",\n    productionCost: 100,\n    bonuses: { yieldFactor: { food: 0.2 } },\n    requirements: [new BuildingRequirement(\"granary\")],\n    weakRequirements: [],\n  },\n  {\n    id: \"workshop\",\n    name: \"Workshop\",\n    productionCost: 80,\n    bonuses: { yieldValue: { production: 5 } },\n    requirements: [],\n    weakRequirements: [],\n  },\n  {\n    id: \"bigWorkshop\",\n    name: \"Grand workshop\",\n    productionCost: 200,\n    bonuses: { yieldFactor: { production: 0.2 } },\n    requirements: [new BuildingRequirement(\"workshop\")],\n    weakRequirements: [],\n  },\n  {\n    id: \"slaveMarket\",\n    name: \"Slave market\",\n    productionCost: 50,\n    bonuses: { yieldValue: { publicWorks: 2 } },\n    requirements: [],\n    weakRequirements: [],\n  },\n  {\n    id: \"bigWorkshop\",\n    name: \"Grand workshop\",\n    productionCost: 200,\n    bonuses: { yieldFactor: { production: 0.2 } },\n    requirements: [new BuildingRequirement(\"workshop\")],\n    weakRequirements: [],\n  },\n  {\n    id: \"monument\",\n    name: \"Monument\",\n    productionCost: 30,\n    bonuses: { yieldValue: { culture: 2 } },\n    requirements: [],\n    weakRequirements: [],\n  },\n  {\n    id: \"allDoingBuilding\",\n    name: \"All doing building\",\n    productionCost: 500,\n    bonuses: {\n      yieldValue: { food: 1, production: 1 },\n      yieldFactor: { food: 0.1, production: 0.1 },\n    },\n    requirements: [\n      new BuildingRequirement(\"bigGranary\"),\n      new BuildingRequirement(\"bigWorkshop\"),\n    ],\n    weakRequirements: [],\n  },\n];\n","import { IdleProduct } from \"../core/idle-product\";\n\nexport const IDLE_PRODUCTS: IdleProduct[] = [\n  {\n    id: \"growth\",\n    name: \"Growth\",\n    productionCost: Infinity,\n    requirements: [],\n    weakRequirements: [],\n    bonuses: { transferProductionToFood: 0.25 },\n  },\n  {\n    id: \"culture\",\n    name: \"Culture\",\n    productionCost: Infinity,\n    requirements: [],\n    weakRequirements: [],\n    bonuses: { transferProductionToCulture: 0.25 },\n  },\n  {\n    id: \"public-works\",\n    name: \"Public works\",\n    productionCost: Infinity,\n    requirements: [],\n    weakRequirements: [],\n    bonuses: { transferProductionToPublicWorks: 0.25 },\n  },\n];\n","import { UnitDefinition } from \"../core/unit.interface\";\nimport { BuildingRequirement, SizeRequirement } from \"../core/product\";\n\nexport const UNITS_DEFINITIONS: UnitDefinition[] = [\n  {\n    id: \"settler\",\n    name: \"Settler\",\n    type: \"civilian\",\n    actionPoints: 2,\n    power: 0,\n    actions: [\"foundCity\"],\n    productionCost: 50,\n    requirements: [],\n    weakRequirements: [\n      new BuildingRequirement(\"granary\"),\n      new SizeRequirement(3),\n    ],\n  },\n  {\n    id: \"worker\",\n    name: \"Worker\",\n    type: \"civilian\",\n    actionPoints: 2,\n    power: 0,\n    actions: [\"buildFarm\", \"buildMine\", \"buildSawmill\", \"buildRoad\"],\n    productionCost: 20,\n    requirements: [],\n    weakRequirements: [new SizeRequirement(2)],\n  },\n  {\n    id: \"scout\",\n    name: \"Scout\",\n    type: \"military\",\n    actionPoints: 2,\n    power: 2,\n    actions: [],\n    productionCost: 10,\n    requirements: [],\n    weakRequirements: [],\n  },\n  {\n    id: \"warrior\",\n    name: \"Warrior\",\n    type: \"military\",\n    actionPoints: 2,\n    power: 5,\n    actions: [],\n    productionCost: 30,\n    requirements: [],\n    weakRequirements: [],\n  },\n];\n","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  AfterViewInit,\n  HostListener,\n} from \"@angular/core\";\n\nimport { Controls } from \"../controls\";\nimport { GameRenderer } from \"../renderer/renderer\";\n\n@Component({\n  selector: \"app-game-canvas\",\n  templateUrl: \"./game-canvas.component.html\",\n  styleUrls: [\"./game-canvas.component.scss\"],\n})\nexport class GameCanvasComponent implements AfterViewInit {\n  @ViewChild(\"canvas\") canvas: ElementRef<HTMLCanvasElement>;\n\n  constructor(public controls: Controls, private renderer: GameRenderer) {}\n\n  ngAfterViewInit() {\n    this.renderer.setCanvas(this.canvas.nativeElement);\n  }\n\n  onContextMenu(event: Event) {\n    event.preventDefault();\n  }\n\n  @HostListener(\"window:resize\", [\"$event\"])\n  onResize(event: Event) {\n    this.renderer.resize(window.innerWidth, window.innerHeight);\n  }\n\n  @HostListener(\"window:keydown\", [\"$event\"])\n  onKeyDown(event: KeyboardEvent) {\n    this.controls.onKeyDown(event);\n  }\n\n  @HostListener(\"window:keyup\", [\"$event\"])\n  onKeyUp(event: KeyboardEvent) {\n    this.controls.onKeyUp(event);\n  }\n}\n","<canvas\n  #canvas\n  (click)=\"controls.onClick($event)\"\n  (mousedown)=\"controls.onMouseDown($event)\"\n  (mouseup)=\"controls.onMouseUp($event)\"\n  (mousemove)=\"controls.onMouseMove($event)\"\n  (wheel)=\"controls.onWheel($event)\"\n  (contextmenu)=\"onContextMenu($event)\"\n></canvas>\n","import { TileCore } from \"../core/tile\";\nimport { SeaLevel, TileDirection } from \"../shared\";\n\nexport function findCoastline(tiles: TileCore[][]): TileCore[] {\n  const coastline: TileCore[] = [];\n  for (let x = 0; x < tiles.length; x++) {\n    for (let y = 0; y < tiles[x].length; y++) {\n      const tile = tiles[x][y];\n      if (tile.seaLevel !== SeaLevel.none) {\n        continue;\n      }\n      if (tile.neighbours.find((t) => t.seaLevel !== SeaLevel.none)) {\n        coastline.push(tile);\n      }\n    }\n  }\n  return coastline;\n}\n\nexport function placeRiverBetweenTiles(tileA: TileCore, tileB: TileCore) {\n  const direction = tileA.getDirectionTo(tileB);\n  if (tileA.riverParts.includes(direction)) {\n    return false;\n  }\n  tileA.riverParts.push(direction);\n  tileB.riverParts.push(OPPOSITE_DIRECTIONS[direction]);\n  return true;\n}\n\n// first direction is clockwise, second is counterclockwise\nexport const POSSIBLE_RIVER_DIRECTION_FROM_WATER_TILE: Record<\n  TileDirection,\n  [TileDirection, TileDirection]\n> = {\n  [TileDirection.NW]: [TileDirection.NE, TileDirection.W],\n  [TileDirection.NE]: [TileDirection.E, TileDirection.NW],\n  [TileDirection.E]: [TileDirection.SE, TileDirection.NE],\n  [TileDirection.SE]: [TileDirection.SW, TileDirection.E],\n  [TileDirection.SW]: [TileDirection.W, TileDirection.SE],\n  [TileDirection.W]: [TileDirection.NW, TileDirection.SW],\n  [TileDirection.NONE]: [TileDirection.NONE, TileDirection.NONE],\n};\n\n// flow is clockwise for first tile\nexport const POSSIBLE_BORDER_PATHS: Record<\n  TileDirection,\n  [[TileDirection, TileDirection], [TileDirection, TileDirection]]\n> = {\n  [TileDirection.NW]: [\n    [TileDirection.NE, TileDirection.NW],\n    [TileDirection.NONE, TileDirection.NE],\n  ],\n  [TileDirection.NE]: [\n    [TileDirection.E, TileDirection.NE],\n    [TileDirection.NONE, TileDirection.E],\n  ],\n  [TileDirection.E]: [\n    [TileDirection.SE, TileDirection.E],\n    [TileDirection.NONE, TileDirection.SE],\n  ],\n  [TileDirection.SE]: [\n    [TileDirection.SW, TileDirection.SE],\n    [TileDirection.NONE, TileDirection.SW],\n  ],\n  [TileDirection.SW]: [\n    [TileDirection.W, TileDirection.SW],\n    [TileDirection.NONE, TileDirection.W],\n  ],\n  [TileDirection.W]: [\n    [TileDirection.NW, TileDirection.W],\n    [TileDirection.NONE, TileDirection.NW],\n  ],\n  [TileDirection.NONE]: [\n    [TileDirection.NONE, TileDirection.NONE],\n    [TileDirection.NONE, TileDirection.NONE],\n  ],\n};\n\nexport const OPPOSITE_DIRECTIONS: Record<TileDirection, TileDirection> = {\n  [TileDirection.NW]: TileDirection.SE,\n  [TileDirection.NE]: TileDirection.SW,\n  [TileDirection.E]: TileDirection.W,\n  [TileDirection.SE]: TileDirection.NW,\n  [TileDirection.SW]: TileDirection.NE,\n  [TileDirection.W]: TileDirection.E,\n  [TileDirection.NONE]: TileDirection.NONE,\n};\n","export abstract class Animation {\n  private progress = 0;\n  private diff: number;\n\n  constructor(\n    public start: number,\n    public end: number,\n    private duration: number,\n  ) {\n    this.diff = end - start;\n  }\n\n  step(stepTime: number): number | null {\n    if (this.progress >= this.duration) {\n      return null;\n    }\n    this.progress += stepTime;\n    const eased = this.ease(this.progress / this.duration);\n    return this.start + this.diff * Math.min(eased, 1);\n  }\n\n  protected abstract ease(t: number): number;\n}\n\nexport class AnimationEaseOutQuad extends Animation {\n  protected ease(t: number) {\n    return t * (2 - t);\n  }\n}\n\nexport class AnimationEaseOutCubic extends Animation {\n  protected ease(t: number) {\n    return --t * t * t + 1;\n  }\n}\n","import * as PIXI from \"pixi.js\";\n\nimport { SeaLevel } from \"src/app/shared\";\nimport { GameState } from \"src/app/api/state\";\nimport { TileContainer } from \"./tile-container\";\nimport { HEX_GEOMETRY } from \"./utils\";\nimport { Tile } from \"../api/tile.interface\";\n\nexport interface AreaOptions {\n  color: number;\n  borderSize: number;\n  borderShadow: number;\n  borderShadowStrength: number;\n  backgroundOpacity: number;\n  visibleOnWater: boolean;\n  container: TileContainer;\n}\n\nconst VS_BORDER_PROGRAM = `\nprecision mediump float;\n\nattribute vec2 aVertexPosition;\nattribute float aUvs;\n\nuniform mat3 translationMatrix;\nuniform mat3 projectionMatrix;\n\nvarying float vUvs;\n\nvoid main() {\n  vUvs = aUvs;\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n}`;\n\nconst FRAG_BORDER_PROGRAM = `\nprecision mediump float;\n\nvarying float vUvs;\n\nuniform vec4 color;\nuniform float borderSize;\nuniform float borderShadow;\nuniform float borderShadowStrength;\n\nvoid main() {\n  vec4 c = color;\n  float a = 1.0;\n  if (vUvs < borderSize) {\n    a = 0.0;\n  } else if (vUvs < (1.0 - borderSize)) {\n    a = (vUvs - (1.0 - borderShadow)) * borderShadowStrength;\n  }\n\n  gl_FragColor = vec4(c.r * a, c.g * a, c.b * a, a);\n}`;\n\nconst VS_BACKGROUND_PROGRAM = `\nprecision mediump float;\n\nattribute vec2 aVertexPosition;\n\nuniform mat3 translationMatrix;\nuniform mat3 projectionMatrix;\n\nvoid main() {\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n}`;\n\nconst FRAG_BACKGROUND_PROGRAM = `\nprecision mediump float;\n\nuniform vec4 color;\nuniform float opacity;\n\nvoid main() {\n  float a = 0.5;\n  gl_FragColor = vec4(color.r * opacity, color.g * opacity, color.b * opacity, opacity);\n}`;\n\nconst TRIANGLES: number[][] = [\n  [0.5, 0.5, 0, 0.25, 0.5, 0],\n  [0.5, 0.5, 0.5, 0, 1, 0.25],\n  [0.5, 0.5, 1, 0.25, 1, 0.75],\n  [0.5, 0.5, 1, 0.75, 0.5, 1],\n  [0.5, 0.5, 0.5, 1, 0, 0.75],\n  [0.5, 0.5, 0, 0.75, 0, 0.25],\n];\n\nconst LEFT_SIDE_TRIANGLES: number[][] = [\n  [0.5, 0.5, 0, 0.5, 0, 0.25],\n  [0.5, 0.5, 0.25, 0.125, 0.5, 0],\n  [0.5, 0.5, 0.75, 0.125, 1, 0.25],\n  [0.5, 0.5, 1, 0.5, 1, 0.75],\n  [0.5, 0.5, 0.75, 0.875, 0.5, 1],\n  [0.5, 0.5, 0.25, 0.875, 0, 0.75],\n];\n\nconst RIGHT_SIDE_TRIANGLES: number[][] = [\n  [0.5, 0.5, 0.5, 0, 0.75, 0.125],\n  [0.5, 0.5, 1, 0.25, 1, 0.5],\n  [0.5, 0.5, 1, 0.75, 0.75, 0.875],\n  [0.5, 0.5, 0.5, 1, 0.25, 0.875],\n  [0.5, 0.5, 0, 0.75, 0, 0.5],\n  [0.5, 0.5, 0, 0.25, 0.25, 0.125],\n];\n\nconst borderGeometries = new Map<string, PIXI.Geometry>();\n\nconst borderProgram = PIXI.Program.from(VS_BORDER_PROGRAM, FRAG_BORDER_PROGRAM);\nconst backgroundProgram = PIXI.Program.from(\n  VS_BACKGROUND_PROGRAM,\n  FRAG_BACKGROUND_PROGRAM,\n);\n\nfunction makeBorderGeometry(borders: string): PIXI.Geometry {\n  const vertices: number[] = [];\n  const uvs: number[] = [];\n\n  for (let i = 0; i < 6; i++) {\n    if (borders[i] === \"1\") {\n      vertices.push(...TRIANGLES[i]);\n      uvs.push(...[0, 1, 1]);\n\n      let leftNeighbour = i - 1;\n      if (leftNeighbour < 0) {\n        leftNeighbour += 6;\n      }\n      if (borders[leftNeighbour] === \"0\") {\n        vertices.push(...LEFT_SIDE_TRIANGLES[i]);\n        uvs.push(...[0, 0, 1]);\n      }\n\n      let rightNeighbour = i + 1;\n      if (rightNeighbour > 5) {\n        rightNeighbour -= 6;\n      }\n      if (borders[rightNeighbour] === \"0\") {\n        vertices.push(...RIGHT_SIDE_TRIANGLES[i]);\n        uvs.push(...[0, 1, 0]);\n      }\n    }\n  }\n  return new PIXI.Geometry()\n    .addAttribute(\"aVertexPosition\", vertices, 2)\n    .addAttribute(\"aUvs\", uvs, 1);\n}\n\nexport class Area {\n  tiles = new Set<Tile>();\n\n  borders = new Map<Tile, string>();\n\n  drawer: AreaDrawer;\n\n  constructor(state: GameState, private options: AreaOptions) {\n    this.drawer = new AreaDrawer(this, state, options);\n  }\n\n  destroy() {\n    this.drawer.clear();\n  }\n\n  setTiles(tiles: Tile[]) {\n    this.clear();\n    this.tiles = new Set(tiles);\n    this.computeAllBorders();\n\n    for (const [tile, borders] of this.borders) {\n      this.drawer.drawTileBorders(tile, borders);\n    }\n\n    if (this.options.backgroundOpacity > 0) {\n      for (const tile of this.tiles) {\n        this.drawer.drawTileBackground(tile);\n      }\n    }\n  }\n\n  addTiles(tiles: Tile[]) {\n    for (const tile of tiles) {\n      this.tiles.add(tile);\n      this.drawer.drawTileBackground(tile);\n    }\n\n    this.computeBordersForTiles(tiles);\n  }\n\n  removeTiles(tiles: Tile[]) {\n    this.drawer.removeTiles(tiles);\n    for (const tile of tiles) {\n      this.tiles.delete(tile);\n    }\n    this.computeBordersForTiles(tiles);\n  }\n\n  private computeBordersForTiles(tiles: Tile[]) {\n    const visited = new Set<Tile>();\n    for (const tile of tiles) {\n      if (visited.has(tile)) {\n        continue;\n      }\n      visited.add(tile);\n      this.computeTileBorders(tile);\n      this.drawer.updateTileBorders(tile);\n\n      for (const neighbour of tile.neighbours) {\n        if (!this.tiles.has(neighbour) || visited.has(neighbour)) {\n          continue;\n        }\n        this.computeTileBorders(neighbour);\n        this.drawer.updateTileBorders(neighbour);\n      }\n    }\n  }\n\n  private computeAllBorders() {\n    this.borders.clear();\n    for (const tile of this.tiles) {\n      this.computeTileBorders(tile);\n    }\n  }\n\n  private computeTileBorders(tile: Tile) {\n    const borders = tile.fullNeighbours\n      .map((n) => (n && this.tiles.has(n) ? \"0\" : \"1\"))\n      .join(\"\");\n\n    if (borders === \"000000\") {\n      this.borders.delete(tile);\n    } else {\n      this.borders.set(tile, borders);\n    }\n  }\n\n  clear() {\n    this.borders.clear();\n    this.tiles = new Set();\n    this.drawer.clear();\n  }\n}\n\nclass AreaDrawer {\n  borderShader: PIXI.Shader;\n\n  backgroundShader: PIXI.Shader;\n\n  bordersMap = new Map<Tile, PIXI.Mesh>();\n\n  backgroundMap = new Map<Tile, PIXI.Mesh>();\n\n  vec4Color: number[];\n\n  constructor(\n    private area: Area,\n    private state: GameState,\n    private options: AreaOptions,\n  ) {\n    const cssColor = \"#\" + options.color.toString(16).padStart(6, \"0\");\n\n    this.vec4Color = [\n      parseInt(cssColor[1] + cssColor[2], 16) / 255,\n      parseInt(cssColor[3] + cssColor[4], 16) / 255,\n      parseInt(cssColor[5] + cssColor[6], 16) / 255,\n      1,\n    ];\n\n    this.borderShader = new PIXI.Shader(borderProgram, {\n      color: this.vec4Color,\n      borderSize: this.options.borderSize,\n      borderShadow: this.options.borderShadow,\n      borderShadowStrength: this.options.borderShadowStrength,\n    });\n\n    this.backgroundShader = new PIXI.Shader(backgroundProgram, {\n      color: this.vec4Color,\n      opacity: this.options.backgroundOpacity,\n    });\n  }\n\n  removeTiles(tiles: Tile[]) {\n    for (const tile of tiles) {\n      const mesh = this.backgroundMap.get(tile);\n      if (mesh) {\n        mesh.destroy();\n        this.backgroundMap.delete(tile);\n      }\n    }\n  }\n\n  drawTileBackground(tile: Tile) {\n    if (tile.seaLevel !== SeaLevel.none && !this.options.visibleOnWater) {\n      return;\n    }\n\n    const mesh = new PIXI.Mesh(HEX_GEOMETRY, this.backgroundShader);\n    mesh.position.x = tile.x + (tile.y % 2 ? 0.5 : 0);\n    mesh.position.y = tile.y * 0.75;\n\n    this.options.container.addChild(mesh, tile);\n    this.backgroundMap.set(tile, mesh);\n\n    if (!this.state.trackedPlayer.exploredTiles.has(tile)) {\n      mesh.visible = false;\n    }\n  }\n\n  updateTileBorders(tile: Tile) {\n    const mesh = this.bordersMap.get(tile);\n    if (mesh) {\n      mesh.destroy();\n    }\n\n    if (!this.area.tiles.has(tile)) {\n      return;\n    }\n\n    const borders = this.area.borders.get(tile);\n    if (borders) {\n      this.drawTileBorders(tile, borders);\n    } else {\n      this.bordersMap.delete(tile);\n    }\n  }\n\n  drawTileBorders(tile: Tile, borders: string) {\n    let geometry = borderGeometries.get(borders);\n    if (!geometry) {\n      geometry = makeBorderGeometry(borders);\n      borderGeometries.set(borders, geometry);\n    }\n\n    const mesh = new PIXI.Mesh(geometry, this.borderShader);\n\n    mesh.position.x = tile.x + (tile.y % 2 ? 0.5 : 0);\n    mesh.position.y = tile.y * 0.75;\n\n    this.options.container.addChild(mesh, tile);\n    this.bordersMap.set(tile, mesh);\n\n    if (!this.state.trackedPlayer.exploredTiles.has(tile)) {\n      mesh.visible = false;\n    }\n  }\n\n  clear() {\n    for (const obj of this.bordersMap.values()) {\n      obj.destroy();\n    }\n    this.bordersMap.clear();\n\n    for (const obj of this.backgroundMap.values()) {\n      obj.destroy();\n    }\n    this.backgroundMap.clear();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BehaviorSubject } from \"rxjs\";\n\nimport { getTileCoords } from \"./utils\";\nimport { AnimationEaseOutCubic, Animation } from \"./animation\";\nimport { GameRenderer } from \"./renderer\";\nimport { TILE_SIZE } from \"./constants\";\nimport { GameApi } from \"../api\";\nimport { Tile } from \"../api/tile.interface\";\n\nexport interface Transform {\n  x: number;\n  y: number;\n  scale: number;\n}\n\nexport interface BoundingBox {\n  xStart: number;\n  yStart: number;\n  xEnd: number;\n  yEnd: number;\n}\n\n@Injectable()\nexport class Camera {\n  MAX_ZOOM = TILE_SIZE; // tile graphics width in pixels\n  MIN_ZOOM = 7;\n\n  transform = { x: 0, y: 0, scale: 130 };\n  private _transform$ = new BehaviorSubject<Transform>(this.transform);\n  transform$ = this._transform$.asObservable();\n  private transformChanged = false;\n\n  private scalePivotX: number;\n  private scalePivotY: number;\n\n  private scaleAnimation: Animation | null = null;\n  private moveXAnimation: Animation | null = null;\n  private moveYAnimation: Animation | null = null;\n\n  private renderer: GameRenderer;\n\n  public tileBoundingBox: BoundingBox = {\n    xStart: 0,\n    yStart: 0,\n    xEnd: 0,\n    yEnd: 0,\n  };\n\n  constructor(private game: GameApi) {}\n\n  setRenderer(renderer: GameRenderer) {\n    this.renderer = renderer;\n\n    renderer.tick$.subscribe(() => {\n      if (this.transformChanged) {\n        this._transform$.next(this.transform);\n        this.transformChanged = false;\n      }\n    });\n  }\n\n  moveBy(x: number, y: number) {\n    this.transform.x -= x / this.transform.scale;\n    this.transform.y -= y / this.transform.scale;\n    this.transformChanged = true;\n  }\n\n  moveTo(x: number, y: number) {\n    this.transform.x = x;\n    this.transform.y = y;\n    this.transformChanged = true;\n  }\n\n  moveToTileWithEasing(tile: Tile) {\n    const t = this.transform;\n    const [x, y] = getTileCoords(tile);\n    this.moveXAnimation = new AnimationEaseOutCubic(t.x, x, 600);\n    this.moveYAnimation = new AnimationEaseOutCubic(t.y, y, 600);\n  }\n\n  scaleToWithEasing(\n    newScale: number,\n    screenPivotX: number,\n    screenPivotY: number,\n    duration = 600,\n  ) {\n    const t = this.transform;\n    this.scalePivotX = screenPivotX;\n    this.scalePivotY = screenPivotY;\n    this.scaleAnimation = new AnimationEaseOutCubic(\n      t.scale,\n      newScale,\n      duration,\n    );\n  }\n\n  scaleByWithEasing(\n    scaleFactor: number,\n    screenPivotX: number,\n    screenPivotY: number,\n    duration = 600,\n  ) {\n    const t = this.transform;\n    const currentScale = this.scaleAnimation?.end || t.scale;\n    const newScale = currentScale * scaleFactor;\n    this.scaleToWithEasing(newScale, screenPivotX, screenPivotY, duration);\n  }\n\n  scaleTo(scale: number, screenPivotX: number, screenPivotY: number) {\n    const t = this.transform;\n    const [x1, y1] = this.screenToCanvas(screenPivotX, screenPivotY);\n\n    t.scale = Math.max(this.MIN_ZOOM, Math.min(this.MAX_ZOOM, scale));\n\n    const [x2, y2] = this.screenToCanvas(screenPivotX, screenPivotY);\n\n    t.x += x1 - x2;\n    t.y += y1 - y2;\n\n    this.transformChanged = true;\n  }\n\n  moveToTile(tile: Tile) {\n    const [x, y] = getTileCoords(tile);\n    this.moveTo(x, y);\n  }\n\n  screenToCanvas(screenX: number, screenY: number): [number, number] {\n    const t = this.transform;\n    return [\n      (screenX - this.canvas.width / 2) / t.scale + t.x,\n      (screenY - this.canvas.height / 2) / t.scale + t.y,\n    ];\n  }\n\n  screenToGame(screenX: number, screenY: number): [number, number] {\n    let [x, y] = this.screenToCanvas(screenX, screenY);\n    y = Math.floor(y / 0.75);\n    x = Math.floor(x - (y % 2 ? 0.5 : 0));\n    return [x, y];\n  }\n\n  canvasToScreen(canvasX: number, canvasY: number): [number, number] {\n    const t = this.transform;\n    return [\n      t.scale * (canvasX - t.x) + this.canvas.width / 2,\n      t.scale * (canvasY - t.y) + this.canvas.height / 2,\n    ];\n  }\n\n  gameToScreen(gameX: number, gameY: number): [number, number] {\n    if (Math.floor(gameY) % 2) {\n      gameX += 0.5;\n    }\n    return this.canvasToScreen(gameX, gameY * 0.75);\n  }\n\n  get canvas() {\n    return this.renderer.canvas;\n  }\n\n  update() {\n    const elapsedMS = this.renderer.app.ticker.elapsedMS;\n\n    if (this.scaleAnimation) {\n      const newScale = this.scaleAnimation.step(elapsedMS);\n      if (newScale === null) {\n        this.scaleAnimation = null;\n      } else {\n        this.scaleTo(newScale, this.scalePivotX, this.scalePivotY);\n      }\n    }\n\n    if (this.moveXAnimation || this.moveYAnimation) {\n      const t = this.transform;\n      let [x, y] = [t.x, t.y];\n      if (this.moveXAnimation) {\n        const newX = this.moveXAnimation.step(elapsedMS);\n        if (newX === null) {\n          this.moveXAnimation = null;\n        } else {\n          x = newX;\n        }\n      }\n\n      if (this.moveYAnimation) {\n        const newY = this.moveYAnimation.step(elapsedMS);\n        if (newY === null) {\n          this.moveYAnimation = null;\n        } else {\n          y = newY;\n        }\n      }\n\n      this.moveTo(x, y);\n    }\n\n    this.updateBoundingBox();\n\n    this.updateProjectionMatrix();\n  }\n\n  updateProjectionMatrix() {\n    // const m = this.renderer.app.renderer.globalUniforms.uniforms\n    const m = this.renderer.app.renderer.projection.projectionMatrix;\n\n    m.tx = this.transform.x;\n    m.ty = this.transform.y;\n    m.d = this.transform.scale;\n    m.a = this.transform.scale;\n  }\n\n  updateBoundingBox() {\n    if (!this.game.state) {\n      return;\n    }\n\n    const t = this.transform;\n    const width = Math.floor(this.renderer.canvas.width / t.scale);\n    const height = Math.floor(this.renderer.canvas.height / t.scale);\n\n    const map = this.game.state.map;\n\n    const xStart = Math.floor(t.x - width / 2 - 1);\n    const yStart = Math.floor(t.y - height / 2);\n\n    this.tileBoundingBox.xStart = Math.max(0, Math.min(map.width, xStart));\n    this.tileBoundingBox.yStart = Math.max(0, Math.min(map.height, yStart));\n    this.tileBoundingBox.xEnd = Math.min(map.width, xStart + width + 3);\n    this.tileBoundingBox.yEnd = Math.min(\n      map.height,\n      (yStart + height + 2) / 0.75,\n    );\n  }\n}\n","export const TILE_SIZE = 256;\n","import * as PIXIE from \"pixi.js\";\n\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { TileWrapperContainer, TileContainer } from \"./tile-container\";\nimport { TerrainDrawer } from \"./tile/terrain\";\nimport { UnitsDrawer } from \"./tile/unit\";\nimport { YiedsDrawer } from \"./tile/yields\";\nimport { RiverDrawer } from \"./tile/river\";\nimport { CityDrawer } from \"./tile/city\";\nimport { GameRenderer } from \"./renderer\";\nimport { Camera } from \"./camera\";\nimport { GameApi } from \"../api\";\nimport { GameState } from \"../api/state\";\nimport { TrackedPlayer } from \"../api/tracked-player\";\nimport { PoliticsDrawer } from \"./politics\";\nimport { Tile } from \"../api/tile.interface\";\n\nexport class MapDrawer {\n  container = new TileWrapperContainer();\n\n  waterContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  terrainContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  riverContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  cityContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  yieldsContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  unitsContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  areasContainer = new TileContainer(this.camera.tileBoundingBox);\n\n  overlaysContainer = new PIXIE.Container();\n\n  terrainDrawer: TerrainDrawer;\n\n  unitsDrawer: UnitsDrawer;\n\n  yieldsDrawer: YiedsDrawer;\n\n  riverDrawer: RiverDrawer;\n\n  cityDrawer: CityDrawer;\n\n  politicsDrawer: PoliticsDrawer;\n\n  constructor(\n    private game: GameApi,\n    private renderer: GameRenderer,\n    private camera: Camera,\n  ) {\n    this.waterContainer[\"interactiveChildren\"] = false;\n    this.terrainContainer[\"interactiveChildren\"] = false;\n    this.riverContainer[\"interactiveChildren\"] = false;\n    this.cityContainer[\"interactiveChildren\"] = false;\n    this.yieldsContainer[\"interactiveChildren\"] = false;\n    this.overlaysContainer[\"interactiveChildren\"] = false;\n    this.areasContainer[\"interactiveChildren\"] = false;\n\n    this.container.addChild(this.waterContainer);\n    this.container.addChild(this.terrainContainer);\n    this.container.addChild(this.riverContainer);\n    this.container.addChild(this.cityContainer);\n    this.container.addChild(this.yieldsContainer);\n    this.container.addChild(this.overlaysContainer);\n    this.container.addChild(this.areasContainer);\n    this.container.addChild(this.unitsContainer);\n\n    this.game.init$.subscribe((state) => {\n      state.trackedPlayer$\n        .pipe(takeUntil(this.game.stop$))\n        .subscribe((player) => this.limitViewToPlayer(player));\n\n      state.tilesExplored$\n        .pipe(takeUntil(this.game.stop$))\n        .subscribe((tiles) => this.reveal(tiles));\n\n      state.tilesUpdated$\n        .pipe(takeUntil(this.game.stop$))\n        .subscribe((tiles) => {\n          for (const tile of tiles) {\n            this.updateTile(tile);\n          }\n        });\n\n      this.build(state);\n    });\n\n    this.game.stop$.subscribe(() => this.clear());\n\n    // Drawers must be created after init$ subscription?. Race condition will occur otherwise.\n    this.terrainDrawer = new TerrainDrawer(\n      this.renderer,\n      this.game,\n      this.terrainContainer,\n      this.waterContainer,\n    );\n\n    this.unitsDrawer = new UnitsDrawer(\n      this.game,\n      this.renderer,\n      this.unitsContainer,\n    );\n\n    this.yieldsDrawer = new YiedsDrawer(\n      this.game,\n      this.renderer.mapUi,\n      this.yieldsContainer,\n    );\n\n    this.riverDrawer = new RiverDrawer(this.game, this.riverContainer);\n\n    this.cityDrawer = new CityDrawer(\n      this.game,\n      this.renderer,\n      this.cityContainer,\n    );\n  }\n\n  hideAllTiles() {\n    for (const objects of this.container.tilesMap.values()) {\n      for (const obj of objects) {\n        obj.visible = false;\n      }\n    }\n  }\n\n  reveal(tiles: Iterable<Tile>) {\n    for (const tile of tiles) {\n      const displayObjects = this.container.tilesMap.get(tile);\n      if (displayObjects) {\n        for (const obj of displayObjects) {\n          obj.visible = true;\n        }\n      }\n    }\n  }\n\n  clear() {\n    if (this.terrainDrawer) {\n      this.terrainDrawer.clear();\n      this.riverDrawer.clear();\n      this.cityDrawer.clear();\n      this.unitsDrawer.clear();\n      this.yieldsDrawer.clear();\n      this.politicsDrawer.clear();\n    }\n  }\n\n  private build(gameState: GameState) {\n    this.politicsDrawer = new PoliticsDrawer(gameState, this.renderer);\n    this.container.bindToMap(gameState.map);\n\n    this.waterContainer.bindToMap(gameState.map);\n    this.terrainContainer.bindToMap(gameState.map);\n    this.cityContainer.bindToMap(gameState.map);\n    this.yieldsContainer.bindToMap(gameState.map);\n    this.riverContainer.bindToMap(gameState.map);\n    this.unitsContainer.bindToMap(gameState.map);\n    this.areasContainer.bindToMap(gameState.map);\n\n    this.unitsDrawer.build();\n    this.cityDrawer.build();\n\n    for (let y = 0; y < gameState.map.height; y++) {\n      for (let x = 0; x < gameState.map.width; x++) {\n        const tile = gameState.map.tiles[x][y];\n        this.drawTile(tile);\n      }\n    }\n\n    if (this.game.state?.trackedPlayer) {\n      this.limitViewToPlayer(this.game.state?.trackedPlayer);\n    }\n  }\n\n  private updateTile(tile: Tile) {\n    this.clearTile(tile);\n    this.drawTile(tile);\n  }\n\n  private drawTile(tile: Tile) {\n    this.terrainDrawer.drawTile(tile);\n    this.yieldsDrawer.drawTile(tile);\n    this.riverDrawer.drawTile(tile);\n  }\n\n  private clearTile(tile: Tile) {\n    this.terrainDrawer.clearTile(tile);\n    this.yieldsDrawer.clearTile(tile);\n    this.riverContainer.clearTile(tile);\n  }\n\n  private limitViewToPlayer(player: TrackedPlayer) {\n    this.hideAllTiles();\n    this.reveal(player.exploredTiles);\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { Transform, Camera } from \"../renderer/camera\";\nimport { drawHex } from \"./utils\";\nimport { GameRenderer } from \"./renderer\";\nimport { SeaLevel, Climate, TileDirection } from \"../shared\";\nimport { GameApi } from \"../api\";\nimport { Tile } from \"../api/tile.interface\";\n\nconst SEA_COLORS: Record<SeaLevel, number> = {\n  [SeaLevel.deep]: 0x25619a,\n  [SeaLevel.shallow]: 0x4383b5,\n  [SeaLevel.none]: 0x000000,\n};\n\nconst CLIMATE_COLORS: Record<Climate, number> = {\n  [Climate.continental]: 0x516733,\n  [Climate.desert]: 0xc7bd93,\n  [Climate.oceanic]: 0x678123,\n  [Climate.savanna]: 0xb4a73f,\n  [Climate.tropical]: 0x6c9b2b,\n  [Climate.tundra]: 0x9cb3b6,\n  [Climate.arctic]: 0xe5e5e5,\n};\n\nconst maxSize = 300;\n\nexport class MinimapRenderer {\n  width = 0;\n  height = 0;\n  scale = 1;\n\n  public container = new PIXIE.Container();\n\n  private mapScene = new PIXIE.Container();\n\n  private cameraGraphics = new PIXIE.Graphics();\n\n  private mapSprite = new PIXIE.Sprite();\n\n  private mapTexture: PIXIE.RenderTexture;\n\n  private tilesMap = new Map<Tile, PIXIE.DisplayObject[]>();\n\n  private app: PIXIE.Application;\n\n  private destroyed$ = new Subject<void>();\n\n  constructor(\n    private game: GameApi,\n    private renderer: GameRenderer,\n    private camera: Camera,\n  ) {\n    this.game.init$.subscribe((state) => {\n      state.trackedPlayer$\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe((player) => {\n          this.hideAllTiles();\n          this.reveal(player.exploredTiles);\n          this.updateMap();\n        });\n\n      state.tilesExplored$\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe((tiles) => {\n          this.reveal(tiles);\n          this.updateMap();\n        });\n\n      state.tilesUpdated$\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe((tiles) => {\n          for (const tile of tiles) {\n            this.drawTile(tile);\n          }\n          this.updateMap();\n        });\n    });\n\n    this.container.addChild(this.mapSprite);\n    this.container.addChild(this.cameraGraphics);\n  }\n\n  calculateSize() {\n    if (!this.game.state) {\n      return;\n    }\n\n    const map = this.game.state.map;\n\n    if (map.width > map.height) {\n      this.width = maxSize;\n      this.height = maxSize / (map.width / map.height);\n      this.scale = maxSize / map.width;\n    } else {\n      this.width = maxSize / (map.height / map.width);\n      this.height = maxSize;\n      this.scale = maxSize / map.height;\n    }\n    this.height *= 0.75;\n  }\n\n  create(app: PIXIE.Application) {\n    if (!this.game.state) {\n      return;\n    }\n\n    this.app = app;\n\n    this.mapTexture = PIXIE.RenderTexture.create({\n      width: this.width,\n      height: this.height,\n    });\n    this.mapSprite.texture = this.mapTexture;\n\n    this.drawMap();\n\n    this.hideAllTiles();\n    this.reveal(this.game.state.trackedPlayer.exploredTiles);\n\n    this.app.stage.addChild(this.container);\n\n    this.camera.transform$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((transform) => {\n        this.updateCamera(transform);\n      });\n\n    this.updateMap();\n  }\n\n  destroy() {\n    this.mapTexture.destroy();\n    this.mapSprite.destroy();\n    for (const objects of this.tilesMap.values()) {\n      for (const obj of objects) {\n        obj.destroy();\n      }\n    }\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  private hideAllTiles() {\n    for (const obj of this.mapScene.children) {\n      obj.visible = false;\n    }\n  }\n\n  private reveal(tiles: Iterable<Tile>) {\n    for (const tile of tiles) {\n      const displayObjects = this.tilesMap.get(tile);\n      if (displayObjects) {\n        for (const obj of displayObjects) {\n          obj.visible = true;\n        }\n      }\n    }\n  }\n\n  private updateCamera(t: Transform) {\n    let width = this.renderer.canvas.width / t.scale;\n    let height = this.renderer.canvas.height / t.scale;\n\n    const xStart = (t.x - width / 2) * this.scale;\n    const yStart = (t.y - height / 2) * this.scale;\n\n    this.cameraGraphics.clear();\n\n    this.cameraGraphics.lineStyle(1, 0xffffff);\n    this.cameraGraphics.drawRect(\n      xStart,\n      yStart,\n      width * this.scale,\n      height * this.scale,\n    );\n\n    if (this.app) {\n      this.app.render();\n    }\n  }\n\n  private updateMap() {\n    this.app.renderer.render(this.mapScene, this.mapTexture);\n    this.app.render();\n  }\n\n  private drawMap() {\n    if (!this.game.state) {\n      return;\n    }\n\n    for (let y = 0; y < this.game.state.map.height; y++) {\n      for (let x = 0; x < this.game.state.map.width; x++) {\n        this.drawTile(this.game.state.map.tiles[x][y]);\n      }\n    }\n  }\n\n  private drawTile(tile: Tile) {\n    let color: number;\n\n    if (tile.seaLevel !== SeaLevel.none) {\n      color = SEA_COLORS[tile.seaLevel];\n    } else if (tile.areaOf) {\n      color = tile.areaOf.player.color;\n    } else {\n      color = CLIMATE_COLORS[tile.climate];\n    }\n\n    const g = new PIXIE.Graphics();\n    g.beginFill(color);\n    drawHex(g);\n    g.endFill();\n\n    g.position.x = (tile.x + (tile.y % 2 ? 0.5 : 0)) * this.scale;\n    g.position.y = tile.y * 0.75 * this.scale;\n    g.scale.x = this.scale;\n    g.scale.y = this.scale;\n\n    this.mapScene.addChild(g);\n    this.tilesMap.set(tile, [g]);\n\n    this.renderRivers(tile, g);\n\n    if (!this.game.state!.trackedPlayer.exploredTiles.has(tile)) {\n      g.visible = false;\n    }\n  }\n\n  private renderRivers(tile: Tile, graphics: PIXIE.Graphics) {\n    if (!tile.riverParts.length) {\n      return;\n    }\n\n    graphics.lineStyle(0.3, SEA_COLORS[SeaLevel.deep]);\n\n    for (const river of tile.riverParts) {\n      if (river === TileDirection.NW) {\n        graphics.moveTo(0, 0.25);\n        graphics.lineTo(0.5, 0);\n      }\n\n      if (river === TileDirection.NE) {\n        graphics.moveTo(0.5, 0);\n        graphics.lineTo(1, 0.25);\n      }\n\n      if (river === TileDirection.E) {\n        graphics.moveTo(1, 0.25);\n        graphics.lineTo(1, 0.75);\n      }\n\n      if (river === TileDirection.SE) {\n        graphics.moveTo(1, 0.75);\n        graphics.lineTo(0.5, 1);\n      }\n\n      if (river === TileDirection.SW) {\n        graphics.moveTo(0.5, 1);\n        graphics.lineTo(0, 0.75);\n      }\n\n      if (river === TileDirection.W) {\n        graphics.moveTo(0, 0.75);\n        graphics.lineTo(0, 0.25);\n      }\n    }\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { drawClosedHex, getTileCoords, drawHex } from \"./utils\";\nimport { MapUi } from \"../ui/map-ui\";\nimport { Tile } from \"../api/tile.interface\";\n\nexport class OverlaysRenderer {\n  container = new PIXIE.Container();\n\n  hoveredTileGraphics = new PIXIE.Graphics();\n\n  selectedTileGraphics = new PIXIE.Graphics();\n\n  highlightedTilesGraphics = new PIXIE.Graphics();\n\n  constructor(mapUi: MapUi) {\n    this.container.addChild(this.hoveredTileGraphics);\n    this.container.addChild(this.selectedTileGraphics);\n\n    this.buildHoveredTileGraphics();\n    this.buildSelectedTileGraphics();\n\n    mapUi.hoveredTile$.subscribe((tile) =>\n      this.displayAtTile(this.hoveredTileGraphics, tile),\n    );\n\n    mapUi.selectedTile$.subscribe((tile) => {\n      this.displayAtTile(this.selectedTileGraphics, tile);\n    });\n\n    mapUi.highlightedTiles$.subscribe((tiles) => {\n      this.buildHighlightedTiles(tiles);\n    });\n  }\n\n  private displayAtTile(obj: PIXIE.DisplayObject, tile: Tile | null) {\n    if (tile) {\n      const [x, y] = getTileCoords(tile);\n      obj.position.x = x;\n      obj.position.y = y;\n      obj.visible = true;\n    } else {\n      obj.visible = false;\n    }\n  }\n\n  buildHoveredTileGraphics() {\n    this.hoveredTileGraphics.lineStyle(0.02, 0xffffff, 0.5);\n    this.hoveredTileGraphics.beginFill(0xffffff, 0.1);\n    drawClosedHex(this.hoveredTileGraphics);\n    this.hoveredTileGraphics.endFill();\n  }\n\n  buildSelectedTileGraphics() {\n    this.selectedTileGraphics.lineStyle(0.05, 0xff0000, 0.5);\n    this.selectedTileGraphics.beginFill(0xffffff, 0.1);\n    drawClosedHex(this.selectedTileGraphics);\n    this.selectedTileGraphics.endFill();\n  }\n\n  buildHighlightedTiles(tiles: Set<Tile>) {\n    this.highlightedTilesGraphics.clear();\n    if (!tiles.size) {\n      this.container.removeChild(this.highlightedTilesGraphics);\n      return;\n    }\n\n    const g = this.highlightedTilesGraphics;\n    for (const tile of tiles) {\n      const [x, y] = getTileCoords(tile);\n\n      g.beginFill(0xffffff, 0.3);\n      drawHex(g, x, y);\n      g.endFill();\n    }\n\n    this.container.addChild(g);\n  }\n\n  clear() {\n    this.highlightedTilesGraphics.clear();\n    this.hoveredTileGraphics.visible = false;\n    this.selectedTileGraphics.visible = false;\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { getTileCenter } from \"./utils\";\nimport { MapUi } from \"../ui/map-ui\";\nimport { Camera } from \"./camera\";\nimport { GameApi } from \"../api\";\nimport { Tile } from \"../api/tile.interface\";\n\nexport class PathRenderer {\n  container = new PIXIE.Container();\n\n  pathGraphics = new PIXIE.Graphics();\n\n  labels: PIXIE.Text[] = [];\n\n  constructor(\n    private game: GameApi,\n    private camera: Camera,\n    private mapUi: MapUi,\n  ) {\n    this.container.addChild(this.pathGraphics);\n\n    mapUi.activePath$.subscribe((path) => this.buildPath(path));\n  }\n\n  clear() {\n    this.pathGraphics.clear();\n    for (const label of this.labels) {\n      this.container.removeChild(label);\n      label.destroy();\n    }\n    this.labels = [];\n  }\n\n  buildPath(path: Tile[][] | null) {\n    this.clear();\n\n    const unit = this.mapUi.selectedUnit;\n    if (!path || !path.length || !unit) {\n      this.container.visible = false;\n      return;\n    }\n\n    this.container.visible = true;\n    const g = this.pathGraphics;\n\n    g.lineStyle(0.1, 0xff0000);\n    g.moveTo(...getTileCenter(unit.tile));\n    for (const turn of path) {\n      for (const tile of turn) {\n        g.lineTo(...getTileCenter(tile));\n      }\n    }\n\n    for (let turn = 0; turn < path.length; turn++) {\n      if (path[turn][0]) {\n        const scale = this.camera.transform.scale;\n        const label = new PIXIE.Text(turn.toString(), {\n          align: \"center\",\n          fill: \"white\",\n          dropShadow: true,\n          dropShadowBlur: 5,\n          dropShadowDistance: 0,\n          fontSize: scale * 0.7,\n        } as PIXIE.TextStyle);\n        label.scale.set(1 / scale, 1 / scale);\n        this.container.addChild(label);\n        this.labels.push(label);\n        const metrics = PIXIE.TextMetrics.measureText(\n          turn.toString(),\n          label.style,\n        );\n        const [x, y] = getTileCenter(path[turn][0]);\n        label.position.x = x - metrics.width / 2 / scale;\n        label.position.y = y - metrics.height / 2 / scale;\n      }\n    }\n  }\n}\n","import { GameState } from \"../api/state\";\nimport { GameRenderer } from \"./renderer\";\nimport { Area } from \"./area\";\n\nexport class PoliticsDrawer {\n  areas: Area[] = [];\n\n  constructor(private state: GameState, private renderer: GameRenderer) {\n    this.makeAreas();\n  }\n\n  async makeAreas() {\n    for (const player of this.state.players) {\n      const tiles = await this.state.getAreaTiles(player.areaId);\n      const area = new Area(this.state, {\n        color: player.color,\n        container: this.renderer.mapDrawer.areasContainer,\n        backgroundOpacity: 0.5,\n        borderShadow: 0.7,\n        borderSize: 0.08,\n        borderShadowStrength: 1,\n        visibleOnWater: false,\n      });\n\n      this.areas.push(area);\n      area.setTiles(tiles);\n      this.state.areasMap.set(player.areaId, area);\n    }\n  }\n\n  clear() {\n    for (const area of this.areas) {\n      area.clear();\n    }\n    this.areas = [];\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { Injectable } from \"@angular/core\";\n\nimport { OverlaysRenderer } from \"./overlays\";\nimport { PathRenderer } from \"./path\";\nimport { MapDrawer } from \"./map\";\nimport { MapUi } from \"../ui/map-ui\";\nimport { Camera } from \"./camera\";\nimport { GameApi } from \"../api\";\nimport { Subject } from \"rxjs\";\n\n@Injectable()\nexport class GameRenderer {\n  app: PIXIE.Application;\n\n  canvas: HTMLCanvasElement;\n\n  mapDrawer: MapDrawer;\n\n  overlays: OverlaysRenderer;\n\n  path: PathRenderer;\n\n  loader = new PIXIE.Loader();\n\n  atlas = this.loader.add(\"assets/atlas.json\").load(() => this.onLoad());\n\n  textures: PIXIE.ITextureDictionary;\n\n  private _tick$ = new Subject<void>();\n  tick$ = this._tick$.asObservable();\n\n  constructor(\n    private game: GameApi,\n    public mapUi: MapUi,\n    private camera: Camera,\n  ) {\n    this.camera.setRenderer(this);\n  }\n\n  setCanvas(canvas: HTMLCanvasElement) {\n    const [width, height] = [window.innerWidth, window.innerHeight];\n\n    this.app = new PIXIE.Application({ view: canvas, width, height });\n\n    this.canvas = canvas;\n\n    this.mapDrawer = new MapDrawer(this.game, this, this.camera);\n    this.overlays = new OverlaysRenderer(this.mapUi);\n    this.path = new PathRenderer(this.game, this.camera, this.mapUi);\n\n    this.path.container.interactiveChildren = false;\n    this.overlays.container.interactiveChildren = false;\n\n    this.app.stage.addChild(this.mapDrawer.container);\n    this.app.stage.addChild(this.overlays.container);\n    this.app.stage.addChild(this.path.container);\n\n    if (this.isLoaded) {\n      this.onReady();\n    }\n\n    this.app.ticker.add(() => {\n      this.camera.update();\n      this.mapUi.update();\n      this._tick$.next();\n\n      const scale = this.camera.transform.scale;\n      if (this.mapDrawer.politicsDrawer) {\n        const backgroundOpacity = Math.min(\n          0.4,\n          Math.max(0, (70 - scale) / 150),\n        );\n\n        const borderShadow = Math.max(0.4, Math.min(0.7, (150 - scale) / 100));\n\n        for (const area of this.mapDrawer.politicsDrawer.areas) {\n          area.drawer.backgroundShader.uniforms.opacity = backgroundOpacity;\n          area.drawer.borderShader.uniforms.borderShadow = borderShadow;\n        }\n      }\n    });\n  }\n\n  resize(width: number, height: number) {\n    this.app.renderer.resize(width, height);\n  }\n\n  onReady() {\n    this.camera.transform$.subscribe((t) => {\n      const x = (-t.x + this.canvas.width / 2 / t.scale) * t.scale;\n      const y = (-t.y + this.canvas.height / 2 / t.scale) * t.scale;\n      this.app.stage.setTransform(x, y, t.scale, t.scale);\n    });\n  }\n\n  onLoad() {\n    const atlas = this.atlas.resources[\"assets/atlas.json\"];\n    atlas.spritesheet!.baseTexture.mipmap = PIXIE.MIPMAP_MODES.POW2;\n    this.textures = atlas.textures!;\n    if (this.canvas) {\n      this.onReady();\n    }\n  }\n\n  clear() {\n    this.mapDrawer.clear();\n    this.path.clear();\n    this.overlays.clear();\n  }\n\n  get isLoaded() {\n    return !!this.textures;\n  }\n}\n","import * as PIXI from \"pixi.js\";\n\nimport { BoundingBox } from \"./camera\";\nimport { TilesMap } from \"../api/map\";\nimport { Tile } from \"../api/tile.interface\";\n\nexport class TileWrapperContainer extends PIXI.Container {\n  tilesMap = new Map<Tile, PIXI.DisplayObject[]>();\n\n  bindToMap(map: TilesMap) {\n    for (let x = 0; x < map.width; x++) {\n      for (let y = 0; y < map.height; y++) {\n        this.tilesMap.set(map.tiles[x][y], []);\n      }\n    }\n  }\n}\n\nexport class TileContainer extends PIXI.DisplayObject {\n  parent: TileWrapperContainer;\n\n  private map: TilesMap;\n\n  private grid: PIXI.DisplayObject[][][] = [];\n  childrenMap = new Map<PIXI.DisplayObject, Tile>();\n\n  // TODO can it be rewritten with tile ids? Map<number, ...>\n  private tilesMap = new Map<Tile, PIXI.DisplayObject[]>();\n\n  // needed only for interactivity\n  children: PIXI.DisplayObject[] = [];\n\n  constructor(private bBox: BoundingBox) {\n    super();\n  }\n\n  addChild<T extends PIXI.DisplayObject>(child: T, tile: Tile): void {\n    if (child.parent) {\n      child.parent.removeChild(child);\n    }\n\n    (child as any).parent = this;\n    (child as any).transform._parentID = -1;\n\n    this.grid[tile.x][tile.y].push(child);\n\n    this.childrenMap.set(child, tile);\n    this.tilesMap.get(tile)?.push(child);\n\n    this.children.push(child);\n\n    (this as any)._boundsID++;\n\n    this.parent.tilesMap.get(tile)!.push(child);\n\n    child.emit(\"added\", this);\n  }\n\n  removeChild(child: PIXI.DisplayObject) {\n    if (this.childrenMap.has(child)) {\n      // remove from childrenMap\n      const tile = this.childrenMap.get(child)!;\n      this.childrenMap.delete(child);\n\n      // remove from grid\n      let children = this.grid[tile.x][tile.y];\n      let index = children.indexOf(child);\n      if (index !== -1) {\n        children.splice(index, 1);\n      }\n\n      // remove from tilesMap\n      children = this.tilesMap.get(tile)!;\n      index = children.indexOf(child);\n      if (index !== -1) {\n        children.splice(index, 1);\n      }\n\n      // remove from parent\n      children = this.parent.tilesMap.get(tile)!;\n      index = children.indexOf(child);\n      if (index !== -1) {\n        children.splice(index, 1);\n      }\n\n      // remove from children\n      index = this.children.indexOf(child);\n      if (index !== -1) {\n        children.splice(index, 1);\n      }\n    }\n  }\n\n  moveChild(child: PIXI.DisplayObject, tile: Tile) {\n    this.removeChild(child);\n    this.addChild(child, tile);\n  }\n\n  getChildsFor(tile: Tile) {\n    return this.tilesMap.get(tile)!;\n  }\n\n  clearTile(tile: Tile) {\n    for (const obj of this.getChildsFor(tile)) {\n      obj.destroy();\n    }\n  }\n\n  destroyAllChildren() {\n    if (!this.map) {\n      return;\n    }\n\n    for (let x = 0; x < this.map.width; x++) {\n      for (let y = 0; y < this.map.height; y++) {\n        for (const child of this.grid[x][y]) {\n          child.destroy();\n        }\n      }\n    }\n  }\n\n  bindToMap(map: TilesMap) {\n    this.map = map;\n    this.grid = new Array(map.width);\n    this.tilesMap.clear();\n    for (let x = 0; x < map.width; x++) {\n      this.grid[x] = new Array(map.height);\n      for (let y = 0; y < map.height; y++) {\n        this.grid[x][y] = [];\n        this.tilesMap.set(map.tiles[x][y], []);\n      }\n    }\n  }\n\n  render(renderer: PIXI.Renderer) {\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n      return;\n    }\n\n    for (let x = this.bBox.xStart; x < this.bBox.xEnd; x++) {\n      for (let y = this.bBox.yStart; y < this.bBox.yEnd; y++) {\n        for (const child of this.grid[x][y]) {\n          child.render(renderer);\n        }\n      }\n    }\n    renderer.batch.flush();\n  }\n\n  updateTransform() {\n    if (!this.grid.length) {\n      return;\n    }\n\n    (this as any)._boundsID++;\n\n    this.transform.updateTransform(this.parent.transform);\n\n    // TODO: check render flags, how to process stuff here\n    (this as any).worldAlpha = this.alpha * this.parent.worldAlpha;\n\n    for (let x = this.bBox.xStart; x < this.bBox.xEnd; x++) {\n      for (let y = this.bBox.yStart; y < this.bBox.yEnd; y++) {\n        for (const child of this.grid[x][y]) {\n          if (child.visible) {\n            child.updateTransform();\n          }\n        }\n      }\n    }\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { getTileVariants, pickRandom, drawTileSprite } from \"../utils\";\nimport { TileContainer } from \"../tile-container\";\nimport { GameRenderer } from \"../renderer\";\nimport { GameApi } from \"src/app/api\";\nimport { City } from \"src/app/api/city\";\n\nconst SMALL_CITY_TEXTURES = getTileVariants(\"villageSmall\", 4);\nconst BIG_CITY_TEXTURES = getTileVariants(\"village\", 4);\n\nexport class CityDrawer {\n  citiesGraphics = new Map<City, PIXIE.Sprite>();\n\n  constructor(\n    private game: GameApi,\n    private renderer: GameRenderer,\n    private container: TileContainer,\n  ) {\n    game.init$.subscribe((state) => {\n      state.citySpawned$\n        .pipe(takeUntil(game.stop$))\n        .subscribe((city) => this.spawn(city));\n\n      state.cityUpdated$\n        .pipe(takeUntil(game.stop$))\n        .subscribe((city) => this.update(city));\n\n      state.cityDestroyed$\n        .pipe(takeUntil(game.stop$))\n        .subscribe((city) => this.destroy(city));\n    });\n  }\n\n  build() {\n    if (!this.game.state) {\n      return;\n    }\n\n    for (const city of this.game.state.cities) {\n      this.spawn(city);\n    }\n  }\n\n  spawn(city: City) {\n    const variants = city.size >= 10 ? BIG_CITY_TEXTURES : SMALL_CITY_TEXTURES;\n    const textureName = pickRandom(variants);\n    const g = drawTileSprite(city.tile, this.textures[textureName]);\n\n    this.container.addChild(g, city.tile);\n    this.citiesGraphics.set(city, g);\n\n    if (!this.game.state!.trackedPlayer.exploredTiles.has(city.tile)) {\n      g.visible = false;\n    }\n  }\n\n  destroy(city: City) {\n    const g = this.citiesGraphics.get(city)!;\n    this.citiesGraphics.delete(city);\n    g.destroy();\n  }\n\n  update(city: City) {\n    this.destroy(city);\n    this.spawn(city);\n  }\n\n  clear() {\n    this.container.destroyAllChildren();\n    this.citiesGraphics.clear();\n  }\n\n  private get textures() {\n    return this.renderer.textures;\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { TileContainer } from \"../tile-container\";\nimport { TileDirection } from \"src/app/shared\";\nimport { GameApi } from \"src/app/api\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\nexport class RiverDrawer {\n  constructor(private game: GameApi, private container: TileContainer) {}\n\n  public drawTile(tile: Tile) {\n    if (!tile.riverParts.length) {\n      return;\n    }\n\n    const g = new PIXIE.Graphics();\n    g.position.x = tile.x + (tile.y % 2 ? 0.5 : 0);\n    g.position.y = tile.y * 0.75;\n    this.container.addChild(g, tile);\n\n    g.lineStyle(0.15, 0x4169e1);\n\n    for (const river of tile.riverParts) {\n      if (river === TileDirection.NW) {\n        g.moveTo(0, 0.25);\n        g.lineTo(0.5, 0);\n      }\n\n      if (river === TileDirection.NE) {\n        g.moveTo(0.5, 0);\n        g.lineTo(1, 0.25);\n      }\n\n      if (river === TileDirection.E) {\n        g.moveTo(1, 0.25);\n        g.lineTo(1, 0.75);\n      }\n\n      if (river === TileDirection.SE) {\n        g.moveTo(1, 0.75);\n        g.lineTo(0.5, 1);\n      }\n\n      if (river === TileDirection.SW) {\n        g.moveTo(0.5, 1);\n        g.lineTo(0, 0.75);\n      }\n\n      if (river === TileDirection.W) {\n        g.moveTo(0, 0.75);\n        g.lineTo(0, 0.25);\n      }\n    }\n\n    if (!this.game.state!.trackedPlayer.exploredTiles.has(tile)) {\n      g.visible = false;\n    }\n  }\n\n  clearTile(tile: Tile) {\n    this.container.clearTile(tile);\n  }\n\n  clear() {\n    this.container.destroyAllChildren();\n  }\n}\n","import {\n  getTileVariants,\n  drawTileSprite,\n  pickRandom,\n  drawTileSpriteCentered,\n} from \"../utils\";\nimport { TileContainer } from \"../tile-container\";\nimport { GameRenderer } from \"../renderer\";\nimport { TileImprovement } from \"src/app/core/tile-improvements\";\nimport { SeaLevel, Climate, LandForm } from \"src/app/shared\";\nimport { GameApi } from \"src/app/api\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\nconst SEA_TEXTURES: Record<SeaLevel, string[]> = {\n  [SeaLevel.deep]: getTileVariants(\"hexOcean\", 4),\n  [SeaLevel.shallow]: getTileVariants(\"hexShallowWater\", 4),\n  [SeaLevel.none]: [],\n};\n\nconst CLIMATE_TEXTURES: Record<Climate, Record<LandForm, string[]>> = {\n  [Climate.continental]: {\n    [LandForm.plains]: getTileVariants(\"hexPlainsCold\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHillsCold\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountain\", 4),\n  },\n  [Climate.desert]: {\n    [LandForm.plains]: getTileVariants(\"hexSand\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHillsDesert\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountainDesert\", 4),\n  },\n  [Climate.oceanic]: {\n    [LandForm.plains]: getTileVariants(\"hexPlains\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHighlands\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountain\", 4),\n  },\n  [Climate.savanna]: {\n    [LandForm.plains]: getTileVariants(\"hexScrublands\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHillsSavanna\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountainDesert\", 4),\n  },\n  [Climate.tropical]: {\n    [LandForm.plains]: getTileVariants(\"hexTropicalPlains\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHills\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountain\", 4),\n  },\n  [Climate.tundra]: {\n    [LandForm.plains]: getTileVariants(\"hexPlainsColdSnowTransition\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHillsColdSnowTransition\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountainSnow\", 4),\n  },\n  [Climate.arctic]: {\n    [LandForm.plains]: getTileVariants(\"hexPlainsColdSnowCovered\", 4),\n    [LandForm.hills]: getTileVariants(\"hexHillsColdSnowCovered\", 4),\n    [LandForm.mountains]: getTileVariants(\"hexMountainSnow\", 4),\n  },\n};\n\nconst FOREST_TEXTURES: Record<Climate, string[]> = {\n  [Climate.continental]: getTileVariants(\"hexForestPine\", 4),\n  [Climate.oceanic]: getTileVariants(\"hexForestBroadleaf\", 4),\n  [Climate.tropical]: getTileVariants(\"hexJungle\", 4),\n  [Climate.tundra]: getTileVariants(\"hexForestPineSnowTransition\", 4),\n  [Climate.savanna]: [],\n  [Climate.desert]: [],\n  [Climate.arctic]: [],\n};\n\nconst WETLANDS_TEXTURES = getTileVariants(\"hexMarsh\", 4);\nconst WETLANDS_FOREST_TEXTURES = getTileVariants(\"hexSwamp\", 4);\nconst DESERT_FLOOD_PLAINS_TEXTURES = getTileVariants(\"hexGrassySand\", 4);\n\nconst FARM_TEXTURES = getTileVariants(\"field\", 15);\nconst MINE_TEXTURES = getTileVariants(\"mines\", 5);\nconst SAWMILL_TEXTURES = getTileVariants(\"forester_hut\", 4);\n\nexport class TerrainDrawer {\n  constructor(\n    private renderer: GameRenderer,\n    private game: GameApi,\n    private terrainContainer: TileContainer,\n    private waterContainer: TileContainer,\n  ) {}\n\n  public drawTile(tile: Tile) {\n    let variants: string[];\n\n    if (tile.wetlands) {\n      if (tile.forest) {\n        variants = WETLANDS_FOREST_TEXTURES;\n      } else {\n        variants = WETLANDS_TEXTURES;\n      }\n    } else if (tile.forest) {\n      variants = FOREST_TEXTURES[tile.climate];\n    } else if (tile.seaLevel === SeaLevel.none) {\n      if (\n        tile.climate === Climate.desert &&\n        tile.landForm === LandForm.plains &&\n        tile.riverParts.length\n      ) {\n        variants = DESERT_FLOOD_PLAINS_TEXTURES;\n      } else {\n        variants = CLIMATE_TEXTURES[tile.climate][tile.landForm];\n      }\n    } else {\n      variants = SEA_TEXTURES[tile.seaLevel];\n    }\n\n    const textureName = pickRandom(variants);\n    const sprite = drawTileSprite(tile, this.textures[textureName]);\n\n    if (tile.seaLevel === SeaLevel.none) {\n      this.terrainContainer.addChild(sprite, tile);\n    } else {\n      this.waterContainer.addChild(sprite, tile);\n    }\n\n    const isVisible = this.game.state!.trackedPlayer.exploredTiles.has(tile);\n\n    if (!isVisible) {\n      sprite.visible = false;\n    }\n\n    const road = this.drawRoads(tile);\n    if (road && !isVisible) {\n      road.visible = false;\n    }\n\n    const improvement = this.drawImprovement(tile);\n    if (improvement && !isVisible) {\n      improvement.visible = false;\n    }\n  }\n\n  private drawImprovement(tile: Tile) {\n    let sprite: PIXI.Sprite | null = null;\n    if (tile.improvement === TileImprovement.farm) {\n      const textureName = pickRandom(FARM_TEXTURES);\n      sprite = drawTileSpriteCentered(tile, this.textures[textureName]);\n      this.terrainContainer.addChild(sprite, tile);\n    } else if (tile.improvement === TileImprovement.mine) {\n      const textureName = pickRandom(MINE_TEXTURES);\n      sprite = drawTileSpriteCentered(tile, this.textures[textureName]);\n      this.terrainContainer.addChild(sprite, tile);\n    } else if (tile.improvement === TileImprovement.sawmill) {\n      const textureName = pickRandom(SAWMILL_TEXTURES);\n      sprite = drawTileSpriteCentered(tile, this.textures[textureName]);\n      this.terrainContainer.addChild(sprite, tile);\n    }\n\n    return sprite;\n  }\n\n  private drawRoads(tile: Tile) {\n    if (tile.road === null) {\n      return null;\n    }\n\n    const roadId = tile.fullNeighbours\n      .map((n) => (!n || n.road === null ? \"0\" : \"1\"))\n      .join(\"\");\n\n    const textureName = `hexRoad-${roadId}-00.png`;\n    const sprite = drawTileSprite(tile, this.textures[textureName]);\n    this.terrainContainer.addChild(sprite, tile);\n    return sprite;\n  }\n\n  clearTile(tile: Tile) {\n    this.waterContainer.clearTile(tile);\n    this.terrainContainer.clearTile(tile);\n  }\n\n  clear() {\n    this.waterContainer.destroyAllChildren();\n    this.terrainContainer.destroyAllChildren();\n  }\n\n  protected get textures() {\n    return this.renderer.textures;\n  }\n}\n","import * as PIXI from \"pixi.js\";\n\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { drawTileSpriteCentered, putSpriteAtTileCentered } from \"../utils\";\nimport { TileContainer } from \"../tile-container\";\nimport { GameApi } from \"src/app/api\";\nimport { Unit } from \"src/app/api/unit\";\nimport { GameRenderer } from \"../renderer\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\nexport class UnitsDrawer {\n  unitGraphics = new Map<Unit, PIXI.Sprite[]>();\n\n  constructor(\n    private game: GameApi,\n    private renderer: GameRenderer,\n    private container: TileContainer,\n  ) {\n    game.init$.subscribe((state) => {\n      state.unitSpawned$\n        .pipe(takeUntil(game.stop$))\n        .subscribe((unit) => this.spawn(unit));\n\n      state.unitUpdated$\n        .pipe(takeUntil(game.stop$))\n        .subscribe((unit) => this.update(unit));\n\n      state.unitDestroyed$\n        .pipe(takeUntil(game.stop$))\n        .subscribe((unit) => this.destroy(unit));\n    });\n  }\n\n  build() {\n    if (!this.game.state) {\n      return;\n    }\n\n    for (const unit of this.game.state.units) {\n      this.spawn(unit);\n    }\n  }\n\n  spawn(unit: Unit) {\n    const backgroundTextureName = `unitBackground-${unit.definition.type}.png`;\n    const backgroundTexture = this.textures[backgroundTextureName];\n\n    const unitTextureName = `unit-${unit.definition.id}.png`;\n    const unitTexture = this.textures[unitTextureName];\n\n    const objects: PIXI.Sprite[] = [];\n\n    const backgroundSprite = drawTileSpriteCentered(\n      unit.tile,\n      backgroundTexture,\n    );\n\n    // TODO don't need set position here as layoutTile will do it.\n    this.container.addChild(backgroundSprite, unit.tile);\n    objects.push(backgroundSprite);\n    backgroundSprite.tint = unit.player.color;\n\n    const unitSprite = drawTileSpriteCentered(unit.tile, unitTexture);\n    this.container.addChild(unitSprite, unit.tile);\n    objects.push(unitSprite);\n\n    this.unitGraphics.set(unit, objects);\n\n    this.layoutTile(unit.tile);\n\n    backgroundSprite.interactive = true;\n\n    backgroundSprite.on(\"pointerdown\", (event) => {\n      if (event.data.button === 0) {\n        this.renderer.mapUi.selectUnit(unit);\n      }\n    });\n  }\n\n  destroy(unit: Unit) {\n    const objs = this.unitGraphics.get(unit);\n    if (!objs) {\n      return;\n    }\n\n    this.unitGraphics.delete(unit);\n\n    for (const obj of objs) {\n      obj.destroy();\n    }\n  }\n\n  update(unit: Unit) {\n    const objs = this.unitGraphics.get(unit)!;\n    if (!objs) {\n      return;\n    }\n\n    const oldTile = this.container.childrenMap.get(objs[0]);\n    if (oldTile && oldTile.units.length) {\n      this.layoutTile(oldTile);\n    }\n\n    this.layoutTile(unit.tile);\n  }\n\n  layoutTile(tile: Tile) {\n    const isVisible = this.game.state!.trackedPlayer.exploredTiles.has(tile);\n\n    let x = 1 / (tile.units.length + 1) - 0.5;\n    const xOffset = 1 / (tile.units.length + 1);\n\n    for (const unit of tile.units) {\n      const sprites = this.unitGraphics.get(unit);\n      if (!sprites) {\n        // the sprites may not be created yet.\n        continue;\n      }\n\n      for (const sprite of sprites) {\n        putSpriteAtTileCentered(unit.tile, sprite);\n        sprite.position.x += x;\n        if (\n          unit.id === this.renderer.mapUi.selectedUnit?.id &&\n          tile.units.length > 1\n        ) {\n          sprite.position.y -= 0.1;\n        }\n\n        this.container.moveChild(sprite, unit.tile);\n        sprite.visible = isVisible;\n      }\n\n      x += xOffset;\n    }\n  }\n\n  clear() {\n    this.container.destroyAllChildren();\n    this.unitGraphics.clear();\n  }\n\n  protected get textures() {\n    return this.renderer.textures;\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport { TileContainer } from \"../tile-container\";\nimport { MapUi } from \"src/app/ui/map-ui\";\nimport { Tile } from \"src/app/api/tile.interface\";\nimport { GameApi } from \"src/app/api\";\n\nexport class YiedsDrawer {\n  constructor(\n    private game: GameApi,\n    private mapUi: MapUi,\n    private container: TileContainer,\n  ) {\n    this.mapUi.yieldsVisible$.subscribe(\n      (visible) => (this.container.visible = visible),\n    );\n  }\n\n  clearTile(tile: Tile) {\n    this.container.clearTile(tile);\n  }\n\n  drawTile(tile: Tile) {\n    const g = new PIXIE.Graphics();\n\n    g.position.x = tile.x + (tile.y % 2 ? 0.5 : 0) + 0.025;\n    g.position.y = tile.y * 0.75;\n\n    this.drawYield(g, 0.55, tile.yields.food, 0x00ff00);\n    this.drawYield(g, 0.65, tile.yields.production, 0xffaa00);\n\n    this.container.addChild(g, tile);\n\n    if (!this.game.state!.trackedPlayer.exploredTiles.has(tile)) {\n      g.visible = false;\n    }\n  }\n\n  private drawYield(\n    g: PIXIE.Graphics,\n    y: number,\n    quantity: number,\n    color: number,\n  ) {\n    g.beginFill(color);\n    for (let i = 0; i < quantity; i++) {\n      const x = 0.5 - (quantity / 2) * 0.1 + 0.1 * i;\n      g.drawRect(x, y, 0.05, 0.05);\n    }\n    g.endFill();\n  }\n\n  clear() {\n    this.container.destroyAllChildren();\n  }\n}\n","import * as PIXI from \"pixi.js\";\n\nimport { TILE_SIZE } from \"./constants\";\nimport { Tile } from \"../api/tile.interface\";\n\n// prettier-ignore\nexport const HEX_GEOMETRY = new PIXI.Geometry().addAttribute(\"aVertexPosition\", [\n  0, 0.25, 0.5, 0, 1, 0.25,\n  0, 0.25, 1, 0.25, 1, 0.75,\n  0, 0.25, 1, 0.75, 0, 0.75,\n  0, 0.75, 1, 0.75, 0.5, 1,\n], 2)\n\nexport function getTileCenter(tile: Tile): [number, number] {\n  return [0.5 + tile.x + (tile.y % 2 ? 0.5 : 0), tile.y * 0.75 + 0.5];\n}\n\nexport function getTileCoords(tile: Tile): [number, number] {\n  return [tile.x + (tile.y % 2 ? 0.5 : 0), tile.y * 0.75];\n}\n\nexport function drawHex(graphics: PIXI.Graphics, x = 0, y = 0) {\n  graphics.moveTo(x + 0, y + 0.25);\n  graphics.lineTo(x + 0.5, y + 0);\n  graphics.lineTo(x + 1, y + 0.25);\n  graphics.lineTo(x + 1, y + 0.75);\n  graphics.lineTo(x + 0.5, y + 1);\n  graphics.lineTo(x + 0, y + 0.75);\n}\n\nexport function drawClosedHex(graphics: PIXI.Graphics) {\n  drawHex(graphics);\n  graphics.lineTo(0, 0.25);\n}\n\nexport function clearContainer(container: PIXI.Container) {\n  while (container.children.length) {\n    container.removeChildAt(0).destroy();\n  }\n}\n\nexport function getTileVariants(tileName: string, variants: number): string[] {\n  const result: string[] = [];\n  for (let i = 0; i < variants; i++) {\n    result.push(`${tileName}${i.toString().padStart(2, \"0\")}.png`);\n  }\n  return result;\n}\n\nexport function drawTileSprite(tile: Tile, texture: PIXI.Texture) {\n  const sprite = new PIXI.Sprite(texture);\n  sprite.scale.set(1 / TILE_SIZE, 1 / TILE_SIZE);\n  putContainerAtTile(tile, sprite);\n  return sprite;\n}\n\nexport function drawTileSpriteCentered(tile: Tile, texture: PIXI.Texture) {\n  const sprite = new PIXI.Sprite(texture);\n  sprite.scale.set(1 / TILE_SIZE, 1 / TILE_SIZE);\n  putSpriteAtTileCentered(tile, sprite);\n  return sprite;\n}\n\nexport function putContainerAtTile(tile: Tile, container: PIXI.Container) {\n  container.position.x = tile.x + (tile.y % 2 ? 0.5 : 0);\n  container.position.y = tile.y * 0.75 - 0.5;\n}\n\nexport function putSpriteAtTileCentered(tile: Tile, sprite: PIXI.Sprite) {\n  sprite.position.x = tile.x + (tile.y % 2 ? 0.5 : 0) + 0.5 - sprite.width / 2;\n  sprite.position.y = tile.y * 0.75 + 0.5 - sprite.height / 2;\n}\n\nexport function pickRandom(items: any[]) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n","import { TileDirection } from \"../shared\";\nimport { BaseTile } from \"./tile.interface\";\n\nexport function getTileFullNeighbours<T extends BaseTile>(\n  tiles: T[][],\n  x: number,\n  y: number,\n): (T | null)[] {\n  return [\n    getTileInDirection(tiles, tiles[x][y], TileDirection.NW),\n    getTileInDirection(tiles, tiles[x][y], TileDirection.NE),\n    getTileInDirection(tiles, tiles[x][y], TileDirection.E),\n    getTileInDirection(tiles, tiles[x][y], TileDirection.SE),\n    getTileInDirection(tiles, tiles[x][y], TileDirection.SW),\n    getTileInDirection(tiles, tiles[x][y], TileDirection.W),\n  ];\n}\n\nexport function getTileNeighbours<T extends BaseTile>(\n  tiles: T[][],\n  x: number,\n  y: number,\n): T[] {\n  return getTileFullNeighbours(tiles, x, y).filter((t) => !!t) as T[];\n}\n\nexport function getTileInDirection<T extends BaseTile>(\n  tiles: T[][],\n  tile: T,\n  direction: TileDirection,\n): T | null {\n  switch (direction) {\n    case TileDirection.NW:\n      if ((tile.y % 2 === 0 && tile.x === 0) || tile.y === 0) {\n        return null;\n      }\n      return tiles[tile.x - (tile.y % 2 ? 0 : 1)][tile.y - 1];\n\n    case TileDirection.NE:\n      if ((tile.y % 2 && tile.x === tiles.length - 1) || tile.y === 0) {\n        return null;\n      }\n      return tiles[tile.x + (tile.y % 2 ? 1 : 0)][tile.y - 1];\n\n    case TileDirection.E:\n      if (tile.x === tiles.length - 1) {\n        return null;\n      }\n      return tiles[tile.x + 1][tile.y];\n\n    case TileDirection.SE:\n      if (\n        (tile.y % 2 && tile.x === tiles.length - 1) ||\n        tile.y === tiles[tile.x].length - 1\n      ) {\n        return null;\n      }\n      return tiles[tile.x + (tile.y % 2 ? 1 : 0)][tile.y + 1];\n\n    case TileDirection.SW:\n      if (\n        (tile.y % 2 === 0 && tile.x === 0) ||\n        tile.y === tiles[tile.x].length - 1\n      ) {\n        return null;\n      }\n      return tiles[tile.x - (tile.y % 2 ? 0 : 1)][tile.y + 1];\n\n    case TileDirection.W:\n      if (tile.x === 0) {\n        return null;\n      }\n      return tiles[tile.x - 1][tile.y];\n  }\n  return null;\n}\n\nexport function getDirectionTo(\n  fromtile: BaseTile,\n  toTile: BaseTile,\n): TileDirection {\n  if (\n    toTile.x === fromtile.x - (fromtile.y % 2 ? 0 : 1) &&\n    toTile.y === fromtile.y - 1\n  ) {\n    return TileDirection.NW;\n  }\n  if (\n    toTile.x === fromtile.x + (fromtile.y % 2 ? 1 : 0) &&\n    toTile.y === fromtile.y - 1\n  ) {\n    return TileDirection.NE;\n  }\n  if (toTile.x === fromtile.x + 1 && toTile.y === fromtile.y) {\n    return TileDirection.E;\n  }\n  if (\n    toTile.x === fromtile.x + (fromtile.y % 2 ? 1 : 0) &&\n    toTile.y === fromtile.y + 1\n  ) {\n    return TileDirection.SE;\n  }\n  if (\n    toTile.x === fromtile.x - (fromtile.y % 2 ? 0 : 1) &&\n    toTile.y === fromtile.y + 1\n  ) {\n    return TileDirection.SW;\n  }\n  if (toTile.x === fromtile.x - 1 && toTile.y === fromtile.y) {\n    return TileDirection.W;\n  }\n  return TileDirection.NONE;\n}\n\nexport function getTilesInRange(tile: BaseTile, range: number): Set<BaseTile> {\n  const result = new Set<BaseTile>([tile]);\n  for (let i = 0; i < range; i++) {\n    let neighbours = new Set<BaseTile>();\n    for (const tile of result) {\n      for (const neighbour of (tile as any).neighbours) {\n        // TODO fix typing\n        neighbours.add(neighbour);\n      }\n    }\n    for (const tile of neighbours) {\n      result.add(tile);\n    }\n  }\n  return result;\n}\n","import { Yields } from \"../core/yields\";\n\nexport * from \"./tile.interface\";\n\nexport interface PlayerTask {\n  task: \"city\" | \"unit\";\n  id: number;\n}\n\nexport interface PlayerYields {\n  perTurn: Yields;\n  income: Yields;\n  total: Yields;\n  costs: Yields;\n}\n","import { TileImprovement, TileRoad } from \"../core/tile-improvements\";\nimport { Yields } from \"../core/yields\";\n\nexport enum TileDirection {\n  NW,\n  NE,\n  E,\n  SE,\n  SW,\n  W,\n  NONE,\n}\n\nexport enum Climate {\n  tropical,\n  savanna,\n  desert,\n  continental,\n  oceanic,\n  tundra,\n  arctic,\n}\n\nexport enum LandForm {\n  plains,\n  hills,\n  mountains,\n}\n\nexport enum SeaLevel {\n  none,\n  shallow,\n  deep,\n}\n\nexport interface BaseTile {\n  id: number;\n\n  x: number;\n  y: number;\n\n  climate: Climate;\n  landForm: LandForm;\n  seaLevel: SeaLevel;\n  riverParts: TileDirection[];\n  forest: boolean;\n  wetlands: boolean;\n  improvement: TileImprovement | null;\n  road: TileRoad | null;\n\n  yields: Yields;\n}\n\nexport const FORESTABLE_CLIMATES = new Set<Climate>([\n  Climate.continental,\n  Climate.oceanic,\n  Climate.tropical,\n  Climate.tundra,\n]);\n\nexport const WETLANDS_CLIMATES = new Set<Climate>([\n  Climate.continental,\n  Climate.oceanic,\n  Climate.tropical,\n]);\n\nexport function isForestable(tile: BaseTile): boolean {\n  return (\n    tile.seaLevel === SeaLevel.none &&\n    tile.landForm === LandForm.plains &&\n    FORESTABLE_CLIMATES.has(tile.climate)\n  );\n}\n\nexport function areWetlandsPossible(tile: BaseTile): boolean {\n  return !!(\n    tile.seaLevel === SeaLevel.none &&\n    tile.landForm === LandForm.plains &&\n    tile.riverParts.length &&\n    WETLANDS_CLIMATES.has(tile.climate)\n  );\n}\n\nexport function isImprovementPossible(\n  tile: BaseTile,\n  improvement: TileImprovement | null,\n): boolean {\n  if (improvement === null) {\n    return true;\n  } else if (improvement === TileImprovement.farm) {\n    return (\n      tile.seaLevel === SeaLevel.none &&\n      tile.landForm === LandForm.plains &&\n      tile.climate !== Climate.arctic &&\n      !tile.forest &&\n      !tile.wetlands\n    );\n  } else if (improvement === TileImprovement.mine) {\n    return tile.landForm === LandForm.hills;\n  } else if (improvement === TileImprovement.sawmill) {\n    return tile.forest && !tile.wetlands;\n  } else {\n    return false;\n  }\n}\n\nexport function isRoadPossible(tile: BaseTile) {\n  return (\n    tile.seaLevel === SeaLevel.none && tile.landForm !== LandForm.mountains\n  );\n}\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { Bonuses } from \"src/app/core/bonus\";\n\n@Component({\n  selector: \"app-bonuses\",\n  templateUrl: \"./bonuses.component.html\",\n  styleUrls: [\"./bonuses.component.scss\"],\n})\nexport class BonusesComponent implements OnInit {\n  @Input() bonuses: Bonuses;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"growth-color\" *ngIf=\"bonuses?.yieldValue?.food as food\">\n  + {{ food }} food\n</div>\n\n<div\n  class=\"production-color\"\n  *ngIf=\"bonuses?.yieldValue?.production as production\"\n>\n  + {{ production }} production\n</div>\n\n<div class=\"culture-color\" *ngIf=\"bonuses?.yieldValue?.culture as culture\">\n  + {{ culture }} culture\n</div>\n\n<div\n  class=\"public-works-color\"\n  *ngIf=\"bonuses?.yieldValue?.publicWorks as publicWorks\"\n>\n  + {{ publicWorks }} public works\n</div>\n\n<div class=\"growth-color\" *ngIf=\"bonuses?.yieldFactor?.food as food\">\n  + {{ food | percentBonus }} food\n</div>\n\n<div\n  class=\"production-color\"\n  *ngIf=\"bonuses?.yieldFactor?.production as production\"\n>\n  + {{ production | percentBonus }} production\n</div>\n\n<div class=\"culture-color\" *ngIf=\"bonuses?.yieldFactor?.culture as culture\">\n  + {{ culture | percentBonus }} culture\n</div>\n\n<div\n  class=\"public-works-color\"\n  *ngIf=\"bonuses?.yieldFactor?.publicWorks as publicWorks\"\n>\n  + {{ publicWorks | percentBonus }} public works\n</div>\n\n<div class=\"growth-color\" *ngIf=\"bonuses?.transferProductionToFood as transfer\">\n  {{ transfer | percentBonus }} production transfered into food\n</div>\n\n<div\n  class=\"culture-color\"\n  *ngIf=\"bonuses?.transferProductionToCulture as transfer\"\n>\n  {{ transfer | percentBonus }} production transfered into culture\n</div>\n\n<div\n  class=\"public-works-color\"\n  *ngIf=\"bonuses?.transferProductionToPublicWorks as transfer\"\n>\n  {{ transfer | percentBonus }} production transfered into public works\n</div>\n","import { Directive, HostListener, ElementRef } from \"@angular/core\";\n\n@Directive({\n  selector: \"button\",\n})\nexport class ButtonDirective {\n  constructor(private elementRef: ElementRef<HTMLButtonElement>) {}\n\n  @HostListener(\"click\")\n  onClick() {\n    // Prevents clicking focused button when pressing \"enter\" for next turn.\n    this.elementRef.nativeElement.blur();\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChildren,\n  AfterViewInit,\n  ElementRef,\n} from \"@angular/core\";\n\nimport { Subject, merge } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { Camera } from \"src/app/renderer/camera\";\nimport { GameApi } from \"src/app/api\";\nimport { City } from \"src/app/api/city\";\nimport { CityInfoComponent } from \"./city-info/city-info.component\";\nimport { getTileCoords } from \"src/app/renderer/utils\";\n\n@Component({\n  selector: \"app-cities-layer\",\n  templateUrl: \"./cities-layer.component.html\",\n  styleUrls: [\"./cities-layer.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CitiesLayerComponent implements OnInit, AfterViewInit {\n  ngUnsubscribe = new Subject<void>();\n\n  @ViewChildren(CityInfoComponent) citiesComponents: CityInfoComponent[];\n\n  cities: City[];\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private elementRef: ElementRef<HTMLElement>,\n    private game: GameApi,\n    private camera: Camera,\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.game.state) {\n      return;\n    }\n\n    merge(this.game.state.citySpawned$, this.game.state.cityDestroyed$)\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(() => {\n        this.updateCities();\n      });\n\n    this.game.stop$.subscribe(() => {\n      this.cities = [];\n      this.cdr.markForCheck();\n    });\n\n    this.updateCities();\n  }\n\n  ngAfterViewInit() {\n    this.camera.transform$\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(() => this.updateTransforms());\n  }\n\n  updateTransforms() {\n    const el = this.elementRef.nativeElement;\n    let scale = this.camera.transform.scale;\n    const box = this.camera.tileBoundingBox;\n\n    let opacity = 1;\n    if (scale < 30) {\n      opacity = Math.max(0, 1 - (30 - scale) / 8);\n    }\n    el.style.opacity = opacity.toString();\n\n    if (opacity === 0) {\n      return;\n    }\n\n    for (const cityComponent of this.citiesComponents) {\n      const tile = cityComponent.city.tile;\n      const cityEl = cityComponent.elementRef.nativeElement;\n      if (\n        tile.x >= box.xStart &&\n        tile.x <= box.xEnd &&\n        tile.y >= box.yStart &&\n        tile.y <= box.yEnd\n      ) {\n        cityEl.style.display = \"flex\";\n      } else {\n        cityEl.style.display = \"none\";\n        continue;\n      }\n\n      const cityScale = Math.pow(scale / 70, 0.4);\n      let [x, y] = getTileCoords(cityComponent.city.tile);\n      [x, y] = this.camera.canvasToScreen(x + 0.5, y + 0.8);\n      cityEl.style.transform = `translate(${x}px, ${y}px) scale(${cityScale})`;\n    }\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  updateCities() {\n    const player = this.game.state!.trackedPlayer;\n    this.cities = this.game.state!.cities.filter((city) =>\n      player.exploredTiles.has(city.tile),\n    );\n    this.cdr.markForCheck();\n\n    setTimeout(() => this.updateTransforms());\n  }\n\n  trackByCityId(index: number, city: City) {\n    return city.id;\n  }\n}\n","<app-city-info\n  *ngFor=\"let city of cities; trackBy: trackByCityId\"\n  [city]=\"city\"\n></app-city-info>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  ChangeDetectorRef,\n  OnDestroy,\n  ElementRef,\n} from \"@angular/core\";\n\nimport { Subject, merge } from \"rxjs\";\nimport { filter, takeUntil } from \"rxjs/operators\";\n\nimport { Controls } from \"src/app/controls\";\nimport { MapUi } from \"../../map-ui\";\nimport { GameApi } from \"src/app/api\";\nimport { City } from \"src/app/api/city\";\n\n@Component({\n  selector: \"app-city-info\",\n  templateUrl: \"./city-info.component.html\",\n  styleUrls: [\"./city-info.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CityInfoComponent implements OnInit, OnDestroy {\n  private _city: City;\n\n  ngUnsubscribe = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    public elementRef: ElementRef<HTMLElement>,\n    private game: GameApi,\n    public controls: Controls,\n    private mapUi: MapUi,\n  ) {}\n\n  ngOnInit(): void {\n    const el = this.elementRef.nativeElement;\n\n    const thisCity = this.game.state!.cityUpdated$.pipe(\n      filter((c) => c.id === this.city.id),\n    );\n\n    merge(this.game.state!.turn$, thisCity)\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(() => {\n        el.style.setProperty(\"--player-color\", this.city.player.cssColor);\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  @Input() set city(city: City) {\n    this._city = city;\n  }\n  get city() {\n    return this._city;\n  }\n\n  selectCity() {\n    this.mapUi.selectCity(this.city);\n  }\n\n  onContextMenu(event: Event) {\n    event.preventDefault();\n  }\n\n  get areDetailsVisible() {\n    return this.city.player.id === this.game.state!.trackedPlayer.id;\n  }\n}\n","<div\n  class=\"info\"\n  (click)=\"selectCity()\"\n  (click)=\"controls.onClick($event)\"\n  (mousedown)=\"controls.onMouseDown($event)\"\n  (mouseup)=\"controls.onMouseUp($event)\"\n  (mousemove)=\"controls.onMouseMove($event)\"\n  (wheel)=\"controls.onWheel($event)\"\n  (contextmenu)=\"onContextMenu($event)\"\n>\n  <div class=\"size\">{{ city.size }}</div>\n  <div *ngIf=\"areDetailsVisible; else simpleViewTmpl\">\n    <app-progress-bar\n      class=\"growth\"\n      [progress]=\"city.totalFood\"\n      [nextProgress]=\"city.totalFood + city.foodPerTurn\"\n      [total]=\"city.foodToGrow\"\n    >\n      <span>{{ city.name }}</span>\n      <span class=\"turns\">({{ city.turnsToGrow | turns }})</span>\n    </app-progress-bar>\n\n    <app-progress-bar\n      class=\"production\"\n      [progress]=\"city.totalProduction\"\n      [nextProgress]=\"city.totalProduction + city.productionPerTurn\"\n      [total]=\"city.productionRequired || 0\"\n    >\n      <span>\n        {{ city.productName }}\n      </span>\n      <span class=\"turns\">({{ city.turnsToProductionEnd | turns }})</span>\n    </app-progress-bar>\n  </div>\n</div>\n\n<ng-template #simpleViewTmpl>\n  <div class=\"simple-view\">{{ city.name }}</div>\n</ng-template>\n","<div class=\"panel panel-bottom-right-corner left\">\n  <div class=\"size-and-growth margin\">\n    <span class=\"size\">{{ city.size }}</span>\n\n    <app-progress-bar\n      class=\"growth-bar\"\n      [progress]=\"city.totalFood\"\n      [nextProgress]=\"city.totalFood + city.perTurn.food\"\n      [total]=\"city.foodToGrow\"\n    >\n      <span class=\"turns\" *ngIf=\"city.perTurn.food > 0\"\n        >will grow in {{ city.turnsToGrow | turns }} turns</span\n      >\n      <span class=\"turns\" *ngIf=\"city.perTurn.food < 0\"\n        >will shrink in {{ -city.turnsToGrow | turns }} turns</span\n      >\n      <span class=\"turns\" *ngIf=\"city.perTurn.food === 0\">growth stalled</span>\n    </app-progress-bar>\n  </div>\n\n  <h3>Yields</h3>\n\n  <div class=\"margin-h\">\n    <div class=\"yield growth-color\">\n      <div class=\"label\">Food</div>\n      <div class=\"value\">\n        {{ city.yields.food }} - {{ city.foodConsumed }} =\n        {{ city.perTurn.food }}\n      </div>\n    </div>\n    <div class=\"yield production-color\">\n      <div class=\"label\">Production</div>\n      <div class=\"value\">{{ city.perTurn.production }}</div>\n    </div>\n    <div class=\"yield culture-color\">\n      <div class=\"label\">Culture</div>\n      <div class=\"value\">{{ city.perTurn.culture }}</div>\n    </div>\n    <div class=\"yield public-works-color\">\n      <div class=\"label\">Public works</div>\n      <div class=\"value\">{{ city.perTurn.publicWorks }}</div>\n    </div>\n  </div>\n\n  <button class=\"margin-h margin-top\" (click)=\"optimizeYields()\">\n    Optimize yields\n  </button>\n\n  <div class=\"separator\"></div>\n\n  <h3>Expansion</h3>\n\n  <app-progress-bar\n    class=\"culture-bar margin\"\n    [progress]=\"city.totalCulture\"\n    [nextProgress]=\"city.totalCulture + city.perTurn.culture\"\n    [total]=\"city.cultureToExpand\"\n  >\n    <span class=\"turns\">\n      borders will expand in {{ city.turnsToExpand | turns }} turns\n    </span>\n  </app-progress-bar>\n\n  <div class=\"separator\"></div>\n\n  <h3>Production</h3>\n\n  <app-progress-bar\n    class=\"production-bar margin\"\n    *ngIf=\"city.product\"\n    [appTooltip]=\"buildingTooltipTmpl\"\n    [tooltipContext]=\"{ building: city.product.productDefinition }\"\n    [progress]=\"city.totalProduction\"\n    [nextProgress]=\"city.totalProduction + city.perTurn.production\"\n    [total]=\"city.product?.productDefinition.productionCost\"\n  >\n    <div>\n      <span class=\"name\">\n        {{ city.product?.productDefinition.name || \"-\" }}\n      </span>\n      <span class=\"turns\" *ngIf=\"city.product\">\n        {{ city.turnsToProductionEnd | turns }} turns\n      </span>\n    </div>\n  </app-progress-bar>\n\n  <app-tabs class=\"grow-tabs\">\n    <app-tab class=\"no-padding\" tabTitle=\"recruit\">\n      <div\n        class=\"product\"\n        *ngFor=\"let unit of city.availableUnits\"\n        [class.disabled]=\"city.disabledUnits.has(unit)\"\n        [appTooltip]=\"unitTooltipTmpl\"\n        [tooltipContext]=\"{ unit: unit }\"\n        (click)=\"produceUnit(unit)\"\n      >\n        <span class=\"name\">\n          {{ unit.name }}\n        </span>\n        <span class=\"turns small\">\n          {{ city.getTurnsToProduce(unit) }} turns\n        </span>\n      </div>\n    </app-tab>\n\n    <app-tab class=\"no-padding\" tabTitle=\"construct\">\n      <div\n        class=\"product\"\n        *ngFor=\"let building of city.availableBuildings\"\n        [class.disabled]=\"city.disabledBuildings.has(building)\"\n        [appTooltip]=\"buildingTooltipTmpl\"\n        [tooltipContext]=\"{ building: building }\"\n        (click)=\"produceBuilding(building)\"\n      >\n        <span class=\"name\">\n          {{ building.name }}\n        </span>\n        <span class=\"turns small\">\n          {{ city.getTurnsToProduce(building) }} turns\n        </span>\n      </div>\n    </app-tab>\n\n    <app-tab class=\"no-padding\" tabTitle=\"work on\">\n      <div\n        class=\"product\"\n        *ngFor=\"let idleProduct of city.availableIdleProducts\"\n        [appTooltip]=\"idleProductTooltipTmpl\"\n        [tooltipContext]=\"{ idleProduct: idleProduct }\"\n        (click)=\"workOnIdleProduct(idleProduct)\"\n      >\n        {{ idleProduct.name }}\n      </div>\n    </app-tab>\n  </app-tabs>\n</div>\n\n<div class=\"city-name\">\n  <h2 class=\"panel\">{{ city.name }}</h2>\n  <button class=\"btn-primary\" (click)=\"quit()\">Return</button>\n</div>\n\n<div class=\"panel panel-bottom-left-corner right\">\n  <h3 class=\"margin\">Buildings</h3>\n\n  <div\n    class=\"building\"\n    *ngFor=\"let building of city.buildings\"\n    [appTooltip]=\"buildingTooltipTmpl\"\n    [tooltipContext]=\"{ building: building }\"\n  >\n    {{ building.name }}\n  </div>\n</div>\n\n<app-work-tiles\n  #workTiles\n  [city]=\"city\"\n  [workedTiles]=\"city.workedTiles\"\n></app-work-tiles>\n\n<ng-template #buildingTooltipTmpl let-building=\"building\">\n  <b>{{ building.name }}</b>\n  <app-product-requirements\n    [product]=\"building\"\n    [city]=\"city\"\n  ></app-product-requirements>\n  <app-bonuses [bonuses]=\"building.bonuses\"></app-bonuses>\n  <div>Cost: {{ building.productionCost }}</div>\n</ng-template>\n\n<ng-template #unitTooltipTmpl let-unit=\"unit\">\n  <b>{{ unit.name }}</b>\n  <app-product-requirements\n    [product]=\"unit\"\n    [city]=\"city\"\n  ></app-product-requirements>\n  <div>Cost: {{ unit.productionCost }}</div>\n</ng-template>\n\n<ng-template #idleProductTooltipTmpl let-idleProduct=\"idleProduct\">\n  <b>{{ idleProduct.name }}</b>\n  <app-bonuses [bonuses]=\"idleProduct.bonuses\"></app-bonuses>\n</ng-template>\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { Building } from \"src/app/core/buildings\";\nimport { UnitDefinition } from \"src/app/core/unit.interface\";\nimport { IdleProduct } from \"src/app/core/idle-product\";\nimport { MapUi } from \"../map-ui\";\nimport { Camera } from \"src/app/renderer/camera\";\nimport { CityDetails } from \"src/app/api/city-details\";\nimport { WorkTilesComponent } from \"./work-tiles/work-tiles.component\";\n\n@Component({\n  selector: \"app-city-view\",\n  templateUrl: \"./city-view.component.html\",\n  styleUrls: [\"./city-view.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CityViewComponent implements OnInit {\n  @ViewChild(\"workTiles\") workTilesComponent: WorkTilesComponent;\n\n  private quit$ = new Subject<void>();\n\n  private _city: CityDetails;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private camera: Camera,\n    private mapUi: MapUi,\n  ) {}\n\n  ngOnInit(): void {\n    this.mapUi.hoverCity(this.city.citySimple);\n  }\n\n  @Input() set city(city: CityDetails) {\n    this._city = city;\n\n    this.camera.moveToTileWithEasing(this.city.tile);\n    const [x, y] = this.camera.canvasToScreen(\n      this.city.tile.x,\n      this.city.tile.y,\n    );\n    this.camera.scaleToWithEasing(130, x, y);\n\n    this.mapUi.clickedTile$.pipe(takeUntil(this.quit$)).subscribe((tile) => {\n      if (!this.city.tiles.has(tile)) {\n        this.quit();\n      }\n    });\n  }\n\n  async produceBuilding(building: Building) {\n    await this.city.produceBuilding(building);\n    this.cdr.markForCheck();\n  }\n\n  async produceUnit(unit: UnitDefinition) {\n    await this.city.produceUnit(unit);\n    this.cdr.markForCheck();\n  }\n\n  async workOnIdleProduct(idleProduct: IdleProduct) {\n    await this.city.workOnIdleProduct(idleProduct);\n    this.cdr.markForCheck();\n  }\n\n  async optimizeYields() {\n    await this.city.optimizeYields();\n    this.workTilesComponent.updateWorkedTilesArea();\n    this.cdr.markForCheck();\n  }\n\n  get city() {\n    return this._city;\n  }\n\n  quit() {\n    this.mapUi.selectCity(null);\n    this.mapUi.unhoverCity();\n    this.quit$.next();\n  }\n}\n","<div\n  class=\"tile\"\n  *ngFor=\"let tile of city.tiles\"\n  [class.worked]=\"city.workedTiles.has(tile)\"\n  [style.transform]=\"getTransform(tile)\"\n></div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { takeUntil } from \"rxjs/operators\";\nimport { Subject } from \"rxjs\";\n\nimport { MapUi } from \"../../map-ui\";\nimport { Camera } from \"src/app/renderer/camera\";\nimport { CityDetails } from \"src/app/api/city-details\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\n@Component({\n  selector: \"app-work-tiles\",\n  templateUrl: \"./work-tiles.component.html\",\n  styleUrls: [\"./work-tiles.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WorkTilesComponent implements OnInit, OnDestroy {\n  @Input() city: CityDetails;\n\n  @Input() workedTiles: Set<Tile>;\n\n  private ngUnsubscribe = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private domSanitizer: DomSanitizer,\n    private camera: Camera,\n    private mapUi: MapUi,\n  ) {}\n\n  ngOnInit(): void {\n    this.mapUi.clickedTile$\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe((tile) => this.toggle(tile));\n\n    this.camera.transform$\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  async toggle(tile: Tile) {\n    if (this.workedTiles.has(tile)) {\n      await this.city.unworkTile(tile);\n    } else {\n      await this.city.workTile(tile);\n    }\n\n    if (!this.ngUnsubscribe.isStopped) {\n      this.updateWorkedTilesArea();\n      this.cdr.markForCheck();\n    }\n  }\n\n  updateWorkedTilesArea() {\n    this.mapUi.cityWorkedTilesArea.setTiles(Array.from(this.city.workedTiles));\n    this.mapUi.cityNotWorkedTilesArea.setTiles(this.city.getNotWorkedTiles());\n  }\n\n  getTransform(tile: Tile) {\n    const [x, y] = [tile.x + 0.5, tile.y + 0.1];\n    const [screenX, screenY] = this.camera.gameToScreen(x, y);\n    const scale = this.camera.transform.scale / 100;\n    return this.domSanitizer.bypassSecurityTrustStyle(\n      `translate(${screenX}px, ${screenY}px) scale(${scale})`,\n    );\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-debug\",\n  templateUrl: \"./debug.component.html\",\n  styleUrls: [\"./debug.component.scss\"],\n})\nexport class DebugComponent implements OnInit {\n  constructor(public game: GameApi) {}\n\n  ngOnInit(): void {}\n\n  revealWorld() {\n    this.game.state!.trackedPlayer.revealWorld();\n  }\n}\n","<label>\n  <!-- <input type=\"checkbox\" [(ngModel)]=\"game.debug.revealMap\" /> -->\n  Reveal map\n  <button (click)=\"revealWorld()\">Reveal world</button>\n</label>\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { Observable } from \"rxjs\";\nimport { filter, takeUntil } from \"rxjs/operators\";\n\nimport { Game } from \"src/app/core/game\";\nimport { TileCore } from \"src/app/core/tile\";\nimport { MapUi } from \"../../map-ui\";\nimport { City } from \"src/app/api/city\";\n\n@Component({\n  selector: \"app-city-editor\",\n  templateUrl: \"./city-editor.component.html\",\n  styleUrls: [\"./city-editor.component.scss\"],\n})\nexport class CityEditorComponent implements OnInit {\n  @Input() isVisible$: Observable<boolean>;\n\n  city: City | null = null;\n\n  constructor(private game: Game, private mapUi: MapUi) {}\n\n  ngOnInit(): void {\n    const shown = this.isVisible$.pipe(filter((v) => v));\n    const hidden = this.isVisible$.pipe(filter((v) => !v));\n\n    shown.subscribe(() => {\n      this.mapUi.enableSelectingTile(true);\n      this.mapUi.selectedTile$.pipe(takeUntil(hidden)).subscribe((tile) => {\n        if (!tile) {\n          return;\n        }\n        // if (tile.city) {\n        //   this.city = tile.city;\n        // } else {\n        //   this.spawn(tile);\n        // }\n      });\n    });\n\n    hidden.subscribe(() => this.mapUi.enableSelectingTile(false));\n  }\n\n  spawn(tile: TileCore) {\n    // this.city = this.game.citiesManager.spawn(tile, this.game.players[0]);\n  }\n\n  destroy() {\n    // if (this.city) {\n    //   this.game.citiesManager.destroy(this.city);\n    //   this.city = null;\n    // }\n  }\n}\n","<button *ngIf=\"city\" (click)=\"destroy()\">Destroy</button>\n","import { Option } from \"../widgets/option.interface\";\nimport { TileImprovement, TileRoad } from \"src/app/core/tile-improvements\";\nimport { SeaLevel, LandForm, Climate, TileDirection } from \"src/app/shared\";\n\nexport const SEA_LEVEL_OPTIONS: Option[] = [\n  { label: \"none\", value: SeaLevel.none },\n  { label: \"shallow\", value: SeaLevel.shallow },\n  { label: \"deep\", value: SeaLevel.deep },\n];\n\nexport const LAND_FORM_OPTIONS: Option[] = [\n  { label: \"plains\", value: LandForm.plains },\n  { label: \"hills\", value: LandForm.hills },\n  { label: \"mountains\", value: LandForm.mountains },\n];\n\nexport const CLIMATE_OPTIONS: Option[] = [\n  { label: \"tropical\", value: Climate.tropical },\n  { label: \"savanna\", value: Climate.savanna },\n  { label: \"desert\", value: Climate.desert },\n  { label: \"continental\", value: Climate.continental },\n  { label: \"oceanic\", value: Climate.oceanic },\n  { label: \"tundra\", value: Climate.tundra },\n  { label: \"arctic\", value: Climate.arctic },\n];\n\nexport const FOREST_OPTIONS: Option[] = [\n  { label: \"no forest\", value: false },\n  { label: \"forest\", value: true },\n];\n\nexport const WETLANDS_OPTIONS: Option[] = [\n  { label: \"no wetlands\", value: false },\n  { label: \"wetlands\", value: true },\n];\n\nexport const IMPROVEMENT_OPTIONS: Option[] = [\n  { label: \"no improvement\", value: null },\n  { label: \"farm\", value: TileImprovement.farm },\n  { label: \"mine\", value: TileImprovement.mine },\n  { label: \"sawmill\", value: TileImprovement.sawmill },\n];\n\nexport const ROAD_OPTIONS: Option[] = [\n  { label: \"no road\", value: null },\n  { label: \"road\", value: TileRoad.road },\n];\n\nexport const RIVER_OPTIONS: Option[] = [\n  { label: \"NW\", value: TileDirection.NW },\n  { label: \"NE\", value: TileDirection.NE },\n  { label: \"E\", value: TileDirection.E },\n  { label: \"SE\", value: TileDirection.SE },\n  { label: \"SW\", value: TileDirection.SW },\n  { label: \"W\", value: TileDirection.W },\n];\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\n\nimport { UIState } from \"../ui-state\";\nimport { MapUi } from \"../map-ui\";\n\n@Component({\n  selector: \"app-editor\",\n  templateUrl: \"./editor.component.html\",\n  styleUrls: [\"./editor.component.scss\"],\n})\nexport class EditorComponent implements OnInit, OnDestroy {\n  constructor(private uiState: UIState, private mapUi: MapUi) {}\n\n  ngOnInit(): void {}\n\n  ngOnDestroy() {\n    this.mapUi.editorArea.clear();\n    this.mapUi.enableSelectingTile(false);\n  }\n\n  close() {\n    this.uiState.editorEnabled$.next(false);\n  }\n}\n","<app-tabs>\n  <app-tab #tileTab tabTitle=\"Tile\"\n    ><app-tile-editor [isVisible$]=\"tileTab.isVisible$\"></app-tile-editor\n  ></app-tab>\n  <app-tab #tilePaintingTab tabTitle=\"Tile painting\"\n    ><app-tile-painting\n      [isVisible$]=\"tilePaintingTab.isVisible$\"\n    ></app-tile-painting\n  ></app-tab>\n  <app-tab #unitTab tabTitle=\"units\">\n    <app-unit-editor [isVisible$]=\"unitTab.isVisible$\"></app-unit-editor>\n  </app-tab>\n  <app-tab #cityTab tabTitle=\"cities\">\n    <app-city-editor [isVisible$]=\"cityTab.isVisible$\"></app-city-editor>\n  </app-tab>\n  <app-tab #playersTab tabTitle=\"players\">\n    <app-players-editor></app-players-editor>\n  </app-tab>\n</app-tabs>\n\n<div>\n  <button (click)=\"close()\">Close</button>\n</div>\n","<ul>\n  <li\n    [class.tracked]=\"player.id === trackedPlayerId\"\n    *ngFor=\"let player of players\"\n  >\n    <span>Player {{ player.id }}</span>\n    <div class=\"color-box\" [style.backgroundColor]=\"player.cssColor\"></div>\n\n    <span class=\"tracked-text\">Tracked</span>\n    <button class=\"track-btn\" (click)=\"track(player)\">Track</button>\n  </li>\n</ul>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from \"@angular/core\";\n\nimport { GameApi } from \"src/app/api\";\nimport { Player } from \"src/app/api/player\";\n\n@Component({\n  selector: \"app-players-editor\",\n  templateUrl: \"./players-editor.component.html\",\n  styleUrls: [\"./players-editor.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlayersEditorComponent implements OnInit {\n  constructor(private cdr: ChangeDetectorRef, private game: GameApi) {}\n\n  ngOnInit(): void {}\n\n  get players() {\n    return this.game.state!.players;\n  }\n\n  get trackedPlayerId() {\n    return this.game.state?.trackedPlayer.id;\n  }\n\n  async track(player: Player) {\n    await this.game.state?.setTrackedPlayer(player.id);\n    this.cdr.markForCheck();\n  }\n}\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { Observable } from \"rxjs\";\nimport { takeUntil, filter } from \"rxjs/operators\";\n\nimport {\n  CLIMATE_OPTIONS,\n  FOREST_OPTIONS,\n  LAND_FORM_OPTIONS,\n  RIVER_OPTIONS,\n  SEA_LEVEL_OPTIONS,\n  WETLANDS_OPTIONS,\n  IMPROVEMENT_OPTIONS,\n  ROAD_OPTIONS,\n} from \"../constants\";\nimport { OPPOSITE_DIRECTIONS } from \"src/app/map-generators/utils\";\nimport { MapUi } from \"../../map-ui\";\nimport { TileImprovement, TileRoad } from \"src/app/core/tile-improvements\";\nimport {\n  TileDirection,\n  isForestable,\n  areWetlandsPossible,\n  isImprovementPossible,\n  isRoadPossible,\n} from \"src/app/shared\";\nimport { GameApi } from \"src/app/api\";\nimport { getDirectionTo } from \"src/app/shared/hex-math\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\n@Component({\n  selector: \"app-tile-editor\",\n  templateUrl: \"./tile-editor.component.html\",\n  styleUrls: [\"./tile-editor.component.scss\"],\n})\nexport class TileEditorComponent implements OnInit {\n  @Input() isVisible$: Observable<boolean>;\n\n  tile: Tile | null = null;\n\n  SEA_LEVEL_OPTIONS = SEA_LEVEL_OPTIONS;\n  LAND_FORM_OPTIONS = LAND_FORM_OPTIONS;\n  CLIMATE_OPTIONS = CLIMATE_OPTIONS;\n  FOREST_OPTIONS = FOREST_OPTIONS;\n  RIVER_OPTIONS = RIVER_OPTIONS;\n  WETLANDS_OPTIONS = WETLANDS_OPTIONS;\n  IMPROVEMENT_OPTIONS = IMPROVEMENT_OPTIONS;\n  ROAD_OPTIONS = ROAD_OPTIONS;\n\n  constructor(private game: GameApi, private mapUi: MapUi) {}\n\n  ngOnInit(): void {\n    const shown = this.isVisible$.pipe(filter((v) => v));\n    const hidden = this.isVisible$.pipe(filter((v) => !v));\n\n    shown.subscribe(() => {\n      this.mapUi.enableSelectingTile(true);\n      this.mapUi.selectedTile$\n        .pipe(takeUntil(hidden))\n        .subscribe((tile) => (this.tile = tile));\n    });\n\n    hidden.subscribe(() => this.mapUi.enableSelectingTile(false));\n  }\n\n  update() {\n    if (this.tile) {\n      this.game.state!.updateTile(this.tile);\n    }\n  }\n\n  updateForest(forest: boolean) {\n    if (this.tile) {\n      this.tile.forest = forest && isForestable(this.tile);\n      this.update();\n    }\n  }\n\n  updateWetlands(wetlands: boolean) {\n    if (this.tile) {\n      this.tile.wetlands = wetlands && areWetlandsPossible(this.tile);\n      this.update();\n    }\n  }\n\n  updateImprovement(improvement: TileImprovement) {\n    if (this.tile) {\n      if (isImprovementPossible(this.tile, improvement)) {\n        this.tile.improvement = improvement;\n        this.update();\n      }\n    }\n  }\n\n  updateRoad(road: TileRoad) {\n    if (this.tile && isRoadPossible(this.tile)) {\n      this.tile.road = road;\n      this.update();\n      for (const neighbour of this.tile.neighbours) {\n        this.game.state!.updateTile(neighbour);\n      }\n    }\n  }\n\n  updateRiver(riverParts: TileDirection[]) {\n    if (!this.tile) {\n      return;\n    }\n\n    this.tile.riverParts = riverParts;\n    for (const neighbour of this.tile.neighbours) {\n      const dir = getDirectionTo(this.tile, neighbour);\n      const hasRiver = riverParts.includes(dir);\n      const oppositeDir = OPPOSITE_DIRECTIONS[dir];\n      const neighbourRiverParts = new Set(neighbour.riverParts);\n      if (hasRiver) {\n        neighbourRiverParts.add(oppositeDir);\n      } else {\n        neighbourRiverParts.delete(oppositeDir);\n      }\n      neighbour.riverParts = Array.from(neighbourRiverParts);\n      this.game.state!.updateTile(neighbour);\n    }\n    this.update();\n  }\n}\n","<div class=\"tile\" *ngIf=\"tile; else selectTilePromptTmpl\">\n  <div>\n    <h4>Sea level</h4>\n    <app-radio\n      [options]=\"SEA_LEVEL_OPTIONS\"\n      [value]=\"tile.seaLevel\"\n      (changed)=\"tile.seaLevel = $event; update()\"\n    ></app-radio>\n  </div>\n\n  <div>\n    <h4>Land form</h4>\n    <app-radio\n      [options]=\"LAND_FORM_OPTIONS\"\n      [value]=\"tile.landForm\"\n      (changed)=\"tile.landForm = $event; update()\"\n    ></app-radio>\n  </div>\n\n  <div>\n    <h4>Climate</h4>\n    <app-radio\n      [options]=\"CLIMATE_OPTIONS\"\n      [value]=\"tile.climate\"\n      (changed)=\"tile.climate = $event; update()\"\n    ></app-radio>\n  </div>\n\n  <div>\n    <h4>Forest</h4>\n    <app-radio\n      [options]=\"FOREST_OPTIONS\"\n      [value]=\"tile.forest\"\n      (changed)=\"updateForest($event)\"\n    ></app-radio>\n  </div>\n\n  <div>\n    <h4>Wetlands</h4>\n    <app-radio\n      [options]=\"WETLANDS_OPTIONS\"\n      [value]=\"tile.wetlands\"\n      (changed)=\"updateWetlands($event)\"\n    ></app-radio>\n  </div>\n\n  <div>\n    <h4>River</h4>\n    <app-multiselect\n      [options]=\"RIVER_OPTIONS\"\n      [value]=\"tile.riverParts\"\n      (changed)=\"updateRiver($event)\"\n    ></app-multiselect>\n  </div>\n\n  <div>\n    <h4>Improvement</h4>\n    <app-radio\n      [options]=\"IMPROVEMENT_OPTIONS\"\n      [value]=\"tile.improvement\"\n      (changed)=\"updateImprovement($event)\"\n    ></app-radio>\n  </div>\n\n  <div>\n    <h4>Road</h4>\n    <app-radio\n      [options]=\"ROAD_OPTIONS\"\n      [value]=\"tile.road\"\n      (changed)=\"updateRoad($event)\"\n    ></app-radio>\n  </div>\n</div>\n\n<ng-template #selectTilePromptTmpl>\n  Select the tile to edit.\n</ng-template>\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport {\n  CLIMATE_OPTIONS,\n  FOREST_OPTIONS,\n  LAND_FORM_OPTIONS,\n  SEA_LEVEL_OPTIONS,\n  WETLANDS_OPTIONS,\n  IMPROVEMENT_OPTIONS,\n} from \"../constants\";\nimport { Option } from \"../../widgets/option.interface\";\nimport { Observable } from \"rxjs\";\nimport { takeUntil, filter } from \"rxjs/operators\";\nimport { Controls } from \"src/app/controls\";\nimport { MapUi } from \"../../map-ui\";\nimport { TileImprovement } from \"src/app/core/tile-improvements\";\nimport {\n  Climate,\n  LandForm,\n  SeaLevel,\n  isForestable,\n  areWetlandsPossible,\n  isImprovementPossible,\n} from \"src/app/shared\";\nimport { GameApi } from \"src/app/api\";\nimport { getTilesInRange } from \"src/app/shared/hex-math\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\nconst IGNORE_OPTION: Option = { label: \"ignore\", value: undefined };\n\ninterface PaintData {\n  size: number;\n  climate: Climate | undefined;\n  forest: boolean | undefined;\n  wetlands: boolean | undefined;\n  landForm: LandForm | undefined;\n  seaLevel: SeaLevel | undefined;\n  improvement: TileImprovement | undefined;\n}\n\n@Component({\n  selector: \"app-tile-painting\",\n  templateUrl: \"./tile-painting.component.html\",\n  styleUrls: [\"./tile-painting.component.scss\"],\n})\nexport class TilePaintingComponent implements OnInit {\n  SIZE_OPTIONS: Option[] = [\n    { label: \"1x1\", value: 1 },\n    { label: \"2x2\", value: 2 },\n    { label: \"3x3\", value: 3 },\n    { label: \"5x5\", value: 5 },\n    { label: \"7x7\", value: 7 },\n    { label: \"10x10\", value: 10 },\n    { label: \"15x15\", value: 15 },\n  ];\n\n  SEA_LEVEL_OPTIONS: Option[] = [IGNORE_OPTION, ...SEA_LEVEL_OPTIONS];\n  LAND_FORM_OPTIONS: Option[] = [IGNORE_OPTION, ...LAND_FORM_OPTIONS];\n  CLIMATE_OPTIONS: Option[] = [IGNORE_OPTION, ...CLIMATE_OPTIONS];\n  FOREST_OPTIONS: Option[] = [IGNORE_OPTION, ...FOREST_OPTIONS];\n  WETLANDS_OPTIONS: Option[] = [IGNORE_OPTION, ...WETLANDS_OPTIONS];\n  IMPROVEMENT_OPTIONS: Option[] = [IGNORE_OPTION, ...IMPROVEMENT_OPTIONS];\n\n  DEFAULT_PAINT_DATA: PaintData = {\n    size: 1,\n    climate: undefined,\n    forest: undefined,\n    landForm: undefined,\n    seaLevel: undefined,\n    wetlands: undefined,\n    improvement: undefined,\n  };\n\n  @Input() isVisible$: Observable<boolean>;\n\n  paintData = { ...this.DEFAULT_PAINT_DATA };\n\n  constructor(\n    private game: GameApi,\n    private controls: Controls,\n    private mapUi: MapUi,\n  ) {}\n\n  ngOnInit(): void {\n    const shown = this.isVisible$.pipe(filter((v) => v));\n    const hidden = this.isVisible$.pipe(filter((v) => !v));\n\n    shown.subscribe(() => {\n      this.controls.mouseButton$.pipe(takeUntil(hidden)).subscribe((button) => {\n        if (button === 0) {\n          this.paint();\n        }\n      });\n\n      this.mapUi.hoveredTile$.pipe(takeUntil(hidden)).subscribe((tile) => {\n        if (tile) {\n          const tiles = getTilesInRange(tile, this.paintData.size - 1);\n          this.mapUi.editorArea.clear();\n          this.mapUi.editorArea.addTiles(Array.from(tiles as Set<Tile>));\n          if (this.controls.mouseButton === 0) {\n            this.paint();\n          }\n        } else {\n          this.mapUi.editorArea.clear();\n        }\n      });\n    });\n\n    hidden.subscribe(() => this.mapUi.editorArea.clear());\n  }\n\n  private paint() {\n    const pivotTile = this.mapUi.hoveredTile;\n    if (!pivotTile) {\n      return;\n    }\n\n    const tiles = getTilesInRange(pivotTile, this.paintData.size - 1);\n    for (const tile of tiles) {\n      if (this.paintData.seaLevel !== undefined) {\n        tile.seaLevel = this.paintData.seaLevel;\n      }\n      if (this.paintData.landForm !== undefined) {\n        tile.landForm = this.paintData.landForm;\n      }\n      if (this.paintData.climate !== undefined) {\n        tile.climate = this.paintData.climate;\n      }\n      if (this.paintData.forest !== undefined) {\n        tile.forest = this.paintData.forest;\n      }\n      if (this.paintData.wetlands !== undefined) {\n        tile.wetlands = this.paintData.wetlands;\n      }\n\n      tile.forest = tile.forest && isForestable(tile);\n      tile.wetlands = tile.wetlands && areWetlandsPossible(tile);\n\n      if (this.paintData.improvement !== undefined) {\n        if (isImprovementPossible(tile, this.paintData.improvement)) {\n          tile.improvement = this.paintData.improvement;\n        }\n      }\n    }\n    this.game.state?.updateTiles(Array.from(tiles) as Tile[]);\n  }\n\n  reset() {\n    this.paintData = { ...this.DEFAULT_PAINT_DATA };\n  }\n}\n","<div>\n  <h4>Brush size</h4>\n  <app-radio\n    [options]=\"SIZE_OPTIONS\"\n    [value]=\"paintData.size\"\n    (changed)=\"paintData.size = $event\"\n  ></app-radio>\n</div>\n\n<div>\n  <h4>Sea level</h4>\n  <app-radio\n    [options]=\"SEA_LEVEL_OPTIONS\"\n    [value]=\"paintData.seaLevel\"\n    (changed)=\"paintData.seaLevel = $event\"\n  ></app-radio>\n</div>\n\n<div>\n  <h4>Land form</h4>\n  <app-radio\n    [options]=\"LAND_FORM_OPTIONS\"\n    [value]=\"paintData.landForm\"\n    (changed)=\"paintData.landForm = $event\"\n  ></app-radio>\n</div>\n\n<div>\n  <h4>Climate</h4>\n  <app-radio\n    [options]=\"CLIMATE_OPTIONS\"\n    [value]=\"paintData.climate\"\n    (changed)=\"paintData.climate = $event\"\n  ></app-radio>\n</div>\n\n<div>\n  <h4>Forest</h4>\n  <app-radio\n    [options]=\"FOREST_OPTIONS\"\n    [value]=\"paintData.forest\"\n    (changed)=\"paintData.forest = $event\"\n  ></app-radio>\n</div>\n\n<div>\n  <h4>Wetlands</h4>\n  <app-radio\n    [options]=\"WETLANDS_OPTIONS\"\n    [value]=\"paintData.wetlands\"\n    (changed)=\"paintData.wetlands = $event\"\n  ></app-radio>\n</div>\n\n<div>\n  <h4>Improvement</h4>\n  <app-radio\n    [options]=\"IMPROVEMENT_OPTIONS\"\n    [value]=\"paintData.improvement\"\n    (changed)=\"paintData.improvement = $event\"\n  ></app-radio>\n</div>\n\n<button (click)=\"reset()\">Reset</button>\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { Observable } from \"rxjs\";\nimport { filter, takeUntil } from \"rxjs/operators\";\n\nimport { Option } from \"../../widgets/option.interface\";\nimport { UNITS_DEFINITIONS } from \"src/app/data/units\";\nimport { MapUi } from \"../../map-ui\";\nimport { UnitDetails } from \"src/app/api/unit-details\";\nimport { UnitDefinition } from \"src/app/core/unit.interface\";\nimport { GameApi } from \"src/app/api\";\nimport { Tile } from \"src/app/api/tile.interface\";\n\n@Component({\n  selector: \"app-unit-editor\",\n  templateUrl: \"./unit-editor.component.html\",\n  styleUrls: [\"./unit-editor.component.scss\"],\n})\nexport class UnitEditorComponent implements OnInit {\n  @Input() isVisible$: Observable<boolean>;\n\n  spawnMode = false;\n\n  definition: UnitDefinition | null = null;\n\n  unit: UnitDetails | null = null;\n\n  definitionOptions: Option[] = [];\n\n  constructor(private game: GameApi, private mapUi: MapUi) {}\n\n  ngOnInit(): void {\n    this.definitionOptions = UNITS_DEFINITIONS.map((d) => {\n      return { label: d.name, value: d } as Option;\n    });\n\n    const shown = this.isVisible$.pipe(filter((v) => v));\n    const hidden = this.isVisible$.pipe(filter((v) => !v));\n\n    shown.subscribe(() => {\n      this.mapUi.enableSelectingTile(true);\n      this.mapUi.selectedTile$.pipe(takeUntil(hidden)).subscribe((tile) => {\n        if (!tile) {\n          return;\n        }\n        // if (this.spawnMode) {\n        //   this.spawn(tile);\n        // } else {\n        //   this.selectTile(tile);\n        // }\n      });\n    });\n\n    hidden.subscribe(() => this.mapUi.enableSelectingTile(false));\n  }\n\n  spawn(tile: Tile) {\n    if (!this.definition) {\n      return;\n    }\n\n    // this.game.unitsManager.spawn(\n    //   this.definition.id,\n    //   tile,\n    //   this.game.players[0],\n    // );\n  }\n\n  destroy() {\n    if (this.unit) {\n      // this.game.unitsManager.destroy(this.unit);\n    }\n  }\n\n  selectTile(tile: Tile) {\n    if (tile.units.length) {\n      // this.unit = tile.units[0];\n      // this.definition = this.unit.definition;\n    }\n  }\n}\n","<app-toggle [value]=\"spawnMode\" (changed)=\"spawnMode = $event\"\n  >Spawn mode</app-toggle\n>\n\n<app-radio\n  [options]=\"definitionOptions\"\n  [value]=\"definition\"\n  (changed)=\"definition = $event\"\n></app-radio>\n\n<button *ngIf=\"unit\" (click)=\"destroy()\">Destroy</button>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { UIState } from \"../ui-state\";\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-game-info\",\n  templateUrl: \"./game-info.component.html\",\n  styleUrls: [\"./game-info.component.scss\"],\n})\nexport class GameInfoComponent implements OnInit {\n  debugModalVisible = false;\n\n  constructor(public game: GameApi, private uiState: UIState) {}\n\n  ngOnInit(): void {}\n\n  openEditor() {\n    this.uiState.editorEnabled$.next(true);\n  }\n  openMenu() {\n    this.uiState.menuVisible$.next(true);\n  }\n}\n","<div class=\"bar\">\n  <span>turn: {{ game.state!.turn$ | async }}</span>\n  <button (click)=\"debugModalVisible = !debugModalVisible\">debug</button>\n  <button (click)=\"openEditor()\">editor</button>\n  <button (click)=\"openMenu()\">menu</button>\n</div>\n\n<app-debug *ngIf=\"debugModalVisible\"></app-debug>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MenuView } from \"./menu-view\";\nimport { UIState } from \"../ui-state\";\n\n@Component({\n  selector: \"app-game-menu\",\n  templateUrl: \"./game-menu.component.html\",\n  styleUrls: [\"./game-menu.component.scss\"],\n})\nexport class GameMenuComponent implements OnInit {\n  view: MenuView = \"main-menu-view\";\n\n  constructor(private uiState: UIState) {}\n\n  ngOnInit(): void {}\n\n  return() {\n    this.uiState.menuVisible$.next(false);\n  }\n}\n","<div class=\"panel menu\">\n  <ng-switch [ngSwitch]=\"view\">\n    <app-main-menu-view\n      *ngSwitchCase=\"'main-menu-view'\"\n      (change)=\"view = $event\"\n    ></app-main-menu-view>\n\n    <app-new-game-view\n      *ngSwitchCase=\"'new-game-view'\"\n      (return)=\"view = 'main-menu-view'\"\n    ></app-new-game-view>\n\n    <app-save-view\n      *ngSwitchCase=\"'save-view'\"\n      (return)=\"view = 'main-menu-view'\"\n    ></app-save-view>\n\n    <app-load-view\n      *ngSwitchCase=\"'load-view'\"\n      (return)=\"view = 'main-menu-view'\"\n    ></app-load-view>\n  </ng-switch>\n</div>\n","<input #uploader type=\"file\" (change)=\"import($event)\" />\n\n<h2>Load the game</h2>\n\n<app-saves-list\n  [selectedSave]=\"saveName\"\n  (change)=\"saveName = $event\"\n></app-saves-list>\n\n<div class=\"actions\">\n  <button (click)=\"return.next()\">Back</button>\n  <button (click)=\"uploader.click()\">Import</button>\n  <button [disabled]=\"!saveName\" (click)=\"load()\">Load</button>\n</div>\n\n<app-modal *ngIf=\"waiting\">\n  <div class=\"center\">\n    <h2>Loading map</h2>\n    <app-spinner></app-spinner>\n  </div>\n</app-modal>\n","import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { UIState } from \"../../ui-state\";\nimport { SavesListComponent } from \"../saves-list/saves-list.component\";\nimport { importSave, loadGameData } from \"src/app/api/saving\";\nimport { GameApi } from \"src/app/api\";\nimport { Camera } from \"src/app/renderer/camera\";\n\n@Component({\n  selector: \"app-load-view\",\n  templateUrl: \"./load-view.component.html\",\n  styleUrls: [\"./load-view.component.scss\"],\n})\nexport class LoadViewComponent implements OnInit {\n  @Output() return = new EventEmitter<void>();\n\n  @ViewChild(SavesListComponent) savesListComponent: SavesListComponent;\n\n  saveName = \"\";\n\n  waiting = false;\n\n  constructor(\n    private game: GameApi,\n    private uiState: UIState,\n    private camera: Camera,\n  ) {}\n\n  ngOnInit(): void {}\n\n  async load() {\n    if (!this.saveName) {\n      return;\n    }\n\n    const data = loadGameData(this.saveName);\n    if (!data) {\n      return null;\n    }\n\n    this.waiting = true;\n\n    await this.game.loadGame(data);\n\n    const city = this.game.state?.trackedPlayer.cities[0];\n    if (city) {\n      this.camera.moveToTile(city.tile);\n    } else {\n      const unit = this.game.state?.trackedPlayer.units[0];\n      if (unit) {\n        this.camera.moveToTile(unit.tile);\n      }\n    }\n\n    this.uiState.menuVisible$.next(false);\n\n    this.waiting = false;\n  }\n\n  async import(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const files = target.files;\n\n    if (!files) {\n      return;\n    }\n\n    await importSave(files[0]);\n\n    this.savesListComponent.refresh();\n  }\n}\n","import { Component, Output, EventEmitter } from \"@angular/core\";\n\nimport { MenuView } from \"../menu-view\";\nimport { UIState } from \"../../ui-state\";\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-main-menu-view\",\n  templateUrl: \"./main-menu-view.component.html\",\n  styleUrls: [\"./main-menu-view.component.scss\"],\n})\nexport class MainMenuViewComponent {\n  @Output() change = new EventEmitter<MenuView>();\n\n  constructor(public game: GameApi, private uiState: UIState) {}\n\n  return() {\n    this.uiState.menuVisible$.next(false);\n  }\n}\n","<div class=\"item\" (click)=\"change.next('new-game-view')\">New</div>\n<div class=\"item\" (click)=\"change.next('load-view')\">Load</div>\n\n<ng-container *ngIf=\"game.init$ | async\">\n  <div class=\"item\" (click)=\"change.next('save-view')\">Save</div>\n  <div class=\"item\" (click)=\"return()\">Return</div>\n</ng-container>\n","<h2>Start new game</h2>\n\n<label>\n  Width:\n  <input type=\"range\" [(ngModel)]=\"width\" min=\"10\" max=\"200\" />\n  {{ width }}\n</label>\n\n<label>\n  Height:\n  <input type=\"range\" [(ngModel)]=\"height\" min=\"10\" max=\"200\" />\n  {{ height }}\n</label>\n\n<label>\n  Sea level:\n  <input type=\"range\" [(ngModel)]=\"seaLevel\" min=\"-0.3\" max=\"0.3\" step=\"0.05\" />\n  {{ seaLevel }}\n</label>\n\n<label>\n  Uniformity:\n  <input type=\"range\" [(ngModel)]=\"uniformity\" min=\"0\" max=\"10\" step=\"0.05\" />\n  {{ uniformity }}\n</label>\n\n<label>\n  Human players count:\n  <input type=\"range\" [(ngModel)]=\"humanPlayersCount\" min=\"1\" max=\"16\" />\n  {{ humanPlayersCount }}\n</label>\n\n<label>\n  AI players count:\n  <input type=\"range\" [(ngModel)]=\"aiPlayersCount\" min=\"1\" max=\"16\" />\n  {{ aiPlayersCount }}\n</label>\n\n<label>\n  Seed:\n  <input type=\"text\" [(ngModel)]=\"seed\" />\n</label>\n\n<div class=\"actions\">\n  <button (click)=\"return.next()\">Return</button>\n  <button (click)=\"start()\">Start</button>\n</div>\n\n<app-modal *ngIf=\"waiting\">\n  <div class=\"center\">\n    <h2>Generating map</h2>\n    <app-spinner></app-spinner>\n  </div>\n</app-modal>\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\n\nimport { SimplexMapGenerator } from \"src/app/map-generators/simplex\";\nimport { PlayerCore, PLAYER_COLORS } from \"src/app/core/player\";\nimport { UIState } from \"../../ui-state\";\nimport { AIPlayer } from \"src/app/ai/ai-player\";\nimport { GameApi } from \"src/app/api/game\";\nimport { MapGeneratorOptions } from \"src/app/api/game.interface\";\nimport { Camera } from \"src/app/renderer/camera\";\n\n@Component({\n  selector: \"app-new-game-view\",\n  templateUrl: \"./new-game-view.component.html\",\n  styleUrls: [\"./new-game-view.component.scss\"],\n})\nexport class NewGameViewComponent implements OnInit {\n  @Output() return = new EventEmitter<void>();\n\n  width = 50;\n\n  height = 40;\n\n  uniformity = 0.5;\n\n  seaLevel = 0;\n\n  humanPlayersCount = 1;\n\n  aiPlayersCount = 5;\n\n  seed: number | null = null;\n\n  waiting = false;\n\n  constructor(\n    private game: GameApi,\n    private uiState: UIState,\n    private camera: Camera,\n  ) {}\n\n  ngOnInit(): void {}\n\n  async start() {\n    const mapOptions: MapGeneratorOptions = {\n      width: this.width,\n      height: this.height,\n      uniformity: this.uniformity,\n      seaLevel: this.seaLevel,\n      aiPlayersCount: this.aiPlayersCount,\n      humanPlayersCount: this.humanPlayersCount,\n      seed: this.seed ? this.seed?.toString() : undefined,\n    };\n\n    this.waiting = true;\n    await this.game.newGame(mapOptions);\n    this.waiting = false;\n\n    const unit = this.game.state?.trackedPlayer.units[0];\n    if (unit) {\n      this.camera.moveToTile(unit.tile);\n    }\n\n    this.uiState.menuVisible$.next(false);\n  }\n}\n","import { Component, Output, EventEmitter } from \"@angular/core\";\n\nimport { UIState } from \"../../ui-state\";\nimport { saveGameData } from \"src/app/api/saving\";\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-save-view\",\n  templateUrl: \"./save-view.component.html\",\n  styleUrls: [\"./save-view.component.scss\"],\n})\nexport class SaveViewComponent {\n  @Output() return = new EventEmitter<void>();\n\n  saveName = \"\";\n\n  constructor(private game: GameApi, private uiState: UIState) {}\n\n  async save() {\n    if (this.saveName) {\n      const data = await this.game.saveGame();\n      saveGameData(data, this.saveName);\n      this.uiState.menuVisible$.next(false);\n    }\n  }\n}\n","<h2>Save the game</h2>\n\n<app-saves-list\n  [selectedSave]=\"saveName\"\n  (change)=\"saveName = $event\"\n></app-saves-list>\n\n<label>\n  Save name:\n  <input type=\"text\" [(ngModel)]=\"saveName\" />\n</label>\n\n<div class=\"actions\">\n  <button (click)=\"return.next()\">Back</button>\n  <button [disabled]=\"!saveName\" (click)=\"save()\">Save</button>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\n\nimport { listSaveGames, deleteSaveGame, exportSave } from \"../../../api/saving\";\n\n@Component({\n  selector: \"app-saves-list\",\n  templateUrl: \"./saves-list.component.html\",\n  styleUrls: [\"./saves-list.component.scss\"],\n})\nexport class SavesListComponent implements OnInit {\n  @Input() selectedSave: string;\n\n  @Output() change = new EventEmitter<string>();\n\n  saves: string[];\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  delete(save: string) {\n    deleteSaveGame(save);\n    this.refresh();\n    if (this.selectedSave === save) {\n      this.change.next(\"\");\n    }\n  }\n\n  export(save: string) {\n    exportSave(save);\n  }\n\n  refresh() {\n    this.saves = listSaveGames();\n  }\n}\n","<div\n  class=\"save\"\n  *ngFor=\"let save of saves\"\n  [class.selected]=\"save === selectedSave\"\n  (click)=\"change.next(save)\"\n>\n  <span>{{ save }}</span>\n  <div class=\"save-actions\">\n    <button (click)=\"export(save)\">export</button>\n    <button (click)=\"delete(save)\">delete</button>\n  </div>\n</div>\n\n<div *ngIf=\"!saves.length\">\n  No saves yet\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { BehaviorSubject, Subject } from \"rxjs\";\nimport { distinctUntilChanged } from \"rxjs/operators\";\n7;\nimport { UIState } from \"./ui-state\";\nimport { Camera } from \"../renderer/camera\";\nimport { City } from \"../api/city\";\nimport { Unit } from \"../api/unit\";\nimport { GameApi } from \"../api\";\nimport { UnitDetails } from \"../api/unit-details\";\nimport { CityDetails } from \"../api/city-details\";\nimport { Area } from \"../renderer/area\";\nimport { Tile } from \"../api/tile.interface\";\n\n@Injectable()\nexport class MapUi {\n  private _hoveredTile$ = new BehaviorSubject<Tile | null>(null);\n  hoveredTile$ = this._hoveredTile$.asObservable().pipe(distinctUntilChanged());\n\n  private _clickedTile$ = new Subject<Tile>();\n  clickedTile$ = this._clickedTile$.asObservable();\n\n  private _selectedTile$ = new BehaviorSubject<Tile | null>(null);\n  selectedTile$ = this._selectedTile$.asObservable();\n\n  private _highlightedTiles$ = new BehaviorSubject<Set<Tile>>(new Set());\n  highlightedTiles$ = this._highlightedTiles$.asObservable();\n\n  private _activePath$ = new BehaviorSubject<Tile[][] | null>(null);\n  activePath$ = this._activePath$.asObservable();\n\n  private _yieldsVisible$ = new BehaviorSubject<boolean>(true);\n  yieldsVisible$ = this._yieldsVisible$.pipe(distinctUntilChanged());\n\n  private _selectedUnit$ = new BehaviorSubject<UnitDetails | null>(null);\n  selectedUnit$ = this._selectedUnit$.pipe();\n\n  private selectingTileEnabled = false;\n\n  private _cityLabelsVisible$ = new BehaviorSubject<boolean>(true);\n  cityLabelsVisible$ = this._cityLabelsVisible$.pipe(distinctUntilChanged());\n\n  allowMapPanning = true;\n\n  hoveredCity: City | null;\n\n  unitRangeArea: Area;\n\n  cityRangeArea: Area;\n  cityBordersOnlyArea: Area;\n  cityWorkedTilesArea: Area;\n  cityNotWorkedTilesArea: Area;\n\n  editorArea: Area;\n\n  constructor(\n    private game: GameApi,\n    private camera: Camera,\n    private uiState: UIState,\n  ) {\n    this.clickedTile$.subscribe((tile) => {\n      if (this.selectingTileEnabled) {\n        this._selectedTile$.next(tile);\n      } else if (tile.units.length) {\n        if (this.selectedUnit?.tile !== tile) {\n          this.selectUnit(tile.units[0]);\n        }\n      } else if (tile?.city) {\n        this.selectCity(tile.city);\n      } else {\n        this.selectUnit(null);\n        this.setPath(null);\n      }\n    });\n\n    this.hoveredTile$.subscribe((tile) => {\n      if (!this.uiState.selectedCity$.value) {\n        if (tile?.city) {\n          this.hoverCity(tile.city);\n        } else if (this.hoveredCity) {\n          this.unhoverCity();\n        }\n      }\n    });\n\n    this.game.state?.trackedPlayer$.subscribe((player) => {\n      this._selectedUnit$.next(null);\n      const tileOfInterest = player?.units[0]?.tile || player?.cities[0]?.tile;\n      if (tileOfInterest) {\n        this.camera.moveToTile(tileOfInterest);\n      }\n      this.setPath(null);\n    });\n\n    this.game.init$.subscribe(() => {\n      this.game.state!.citySpawned$.subscribe((city) => {\n        if (city.player.id === this.game.state!.trackedPlayer.id) {\n          this.selectCity(city);\n        }\n      });\n\n      this.game.state!.turn$.subscribe(() => this.setPath(null));\n\n      const areasContainer = this.camera[\"renderer\"].mapDrawer.areasContainer;\n\n      this.unitRangeArea = new Area(this.game.state!, {\n        color: 0xffffff,\n        container: areasContainer,\n        backgroundOpacity: 0.15,\n        borderShadow: 0.4,\n        borderSize: 0.0,\n        borderShadowStrength: 2,\n        visibleOnWater: true,\n      });\n\n      this.cityRangeArea = new Area(this.game.state!, {\n        color: 0xffffff,\n        container: areasContainer,\n        backgroundOpacity: 0.2,\n        borderShadow: 0.3,\n        borderSize: 0.1,\n        borderShadowStrength: 1.2,\n        visibleOnWater: false,\n      });\n\n      this.cityBordersOnlyArea = new Area(this.game.state!, {\n        color: 0xffffff,\n        container: areasContainer,\n        backgroundOpacity: 0,\n        borderShadow: 0.3,\n        borderSize: 0.1,\n        borderShadowStrength: 1.2,\n        visibleOnWater: false,\n      });\n\n      this.cityWorkedTilesArea = new Area(this.game.state!, {\n        color: 0xffa001,\n        container: areasContainer,\n        backgroundOpacity: 0.2,\n        borderShadow: 0.8,\n        borderSize: 0,\n        borderShadowStrength: 1,\n        visibleOnWater: true,\n      });\n\n      this.cityNotWorkedTilesArea = new Area(this.game.state!, {\n        color: 0xffffff,\n        container: areasContainer,\n        backgroundOpacity: 0.2,\n        borderShadow: 0.3,\n        borderSize: 0,\n        borderShadowStrength: 1.5,\n        visibleOnWater: false,\n      });\n\n      this.editorArea = new Area(this.game.state!, {\n        color: 0xffffff,\n        container: areasContainer,\n        backgroundOpacity: 0.25,\n        borderShadow: 0.5,\n        borderSize: 0.05,\n        borderShadowStrength: 1,\n        visibleOnWater: true,\n      });\n    });\n\n    this.game.stop$.subscribe(() => this.clear());\n  }\n\n  update() {\n    this._yieldsVisible$.next(this.camera.transform.scale > 40);\n  }\n\n  get hoveredTile() {\n    return this._hoveredTile$.value;\n  }\n\n  enableSelectingTile(enable: boolean) {\n    this.selectingTileEnabled = enable;\n    if (!enable) {\n      this._selectedTile$.next(null);\n    }\n  }\n\n  clickTile(tile: Tile) {\n    this._clickedTile$.next(tile);\n  }\n\n  hoverTile(tile: Tile | null) {\n    this._hoveredTile$.next(tile);\n  }\n\n  setPath(path: Tile[][] | null) {\n    this._activePath$.next(path);\n  }\n\n  selectCity(city: City | null) {\n    if (!city) {\n      this.uiState.selectedCity$.next(null);\n      this._cityLabelsVisible$.next(true);\n      this.allowMapPanning = true;\n      return;\n    }\n\n    if (city.player.id === this.game.state?.trackedPlayer.id) {\n      this.game.state.getCityDetails(city.id).then((data) => {\n        const cityDetails = new CityDetails(this.game.state!, data);\n        this.uiState.selectedCity$.next(cityDetails);\n        this._cityLabelsVisible$.next(false);\n        this.cityRangeArea.setTiles(Array.from(cityDetails.tiles));\n        this.allowMapPanning = false;\n      });\n    }\n  }\n\n  hoverCity(city: City) {\n    this.hoveredCity = city;\n\n    if (city.player.id === this.game.state?.trackedPlayer.id) {\n      city.getWorkTiles().then((data) => {\n        this.cityWorkedTilesArea.setTiles(data.workedTiles);\n        this.cityNotWorkedTilesArea.setTiles(data.notWorkedTiles);\n        this.cityBordersOnlyArea.setTiles(\n          data.notWorkedTiles.concat(data.workedTiles),\n        );\n      });\n    } else {\n      city.getRange().then((tiles) => {\n        this.cityRangeArea.setTiles(tiles);\n      });\n    }\n  }\n\n  unhoverCity() {\n    this.cityWorkedTilesArea.clear();\n    this.cityNotWorkedTilesArea.clear();\n    this.cityBordersOnlyArea.clear();\n    this.cityRangeArea.clear();\n    this.hoveredCity = null;\n  }\n\n  async selectUnit(unit: Unit | null) {\n    if (unit?.id === this.selectedUnit?.id) {\n      return;\n    }\n\n    this.clearSelectedUnit(!unit);\n\n    if (!unit) {\n      return;\n    }\n\n    if (unit.player.id === this.game.state?.trackedPlayer.id) {\n      const data = await this.game.state.getUnitDetails(unit.id);\n      if (data) {\n        const unitDetails = new UnitDetails(this.game.state!, data);\n        this._selectedUnit$.next(unitDetails);\n        this.game.state!.updateUnit(unitDetails.id);\n        unitDetails\n          .getRange()\n          .then((tiles) => this.unitRangeArea.setTiles(tiles));\n      }\n      this.setPath(this._selectedUnit$.value?.path || null);\n    }\n  }\n\n  private clearSelectedUnit(clearRange = true) {\n    const previousUnit = this.selectedUnit;\n    this._selectedUnit$.next(null);\n    if (clearRange) {\n      this.unitRangeArea.clear();\n    }\n    if (previousUnit) {\n      this.game.state!.updateUnit(previousUnit.id);\n    }\n  }\n\n  get selectedUnit() {\n    return this._selectedUnit$.value;\n  }\n\n  clear() {\n    this.selectingTileEnabled = false;\n    this._hoveredTile$.next(null);\n    this._selectedTile$.next(null);\n    this._highlightedTiles$.next(new Set());\n\n    this.editorArea.clear();\n    this.cityRangeArea.clear();\n    this.unitRangeArea.clear();\n    this.cityBordersOnlyArea.clear();\n    this.cityWorkedTilesArea.clear();\n    this.cityNotWorkedTilesArea.clear();\n  }\n}\n","import * as PIXIE from \"pixi.js\";\n\nimport {\n  Component,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  OnDestroy,\n} from \"@angular/core\";\n\nimport { MinimapRenderer } from \"src/app/renderer/minimap\";\nimport { GameRenderer } from \"src/app/renderer/renderer\";\nimport { Camera } from \"src/app/renderer/camera\";\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-minimap\",\n  templateUrl: \"./minimap.component.html\",\n  styleUrls: [\"./minimap.component.scss\"],\n})\nexport class MinimapComponent implements AfterViewInit, OnDestroy {\n  app: PIXIE.Application | null = null;\n\n  minimapRenderer: MinimapRenderer | null = null;\n\n  @ViewChild(\"canvas\") canvas: ElementRef<HTMLCanvasElement>;\n\n  constructor(\n    private game: GameApi,\n    private renderer: GameRenderer,\n    private camera: Camera,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.create();\n  }\n\n  ngOnDestroy() {\n    this.minimapRenderer?.destroy();\n    this.app?.destroy();\n  }\n\n  create() {\n    if (this.minimapRenderer) {\n      this.minimapRenderer.destroy();\n    }\n\n    this.minimapRenderer = new MinimapRenderer(\n      this.game,\n      this.renderer,\n      this.camera,\n    );\n    this.minimapRenderer.calculateSize();\n\n    this.app = new PIXIE.Application({\n      view: this.canvas.nativeElement,\n      width: this.minimapRenderer.width,\n      height: this.minimapRenderer.height,\n      autoStart: false,\n    });\n\n    this.minimapRenderer.create(this.app);\n  }\n\n  moveViewport(event: MouseEvent) {\n    if (!this.minimapRenderer) {\n      return;\n    }\n\n    if (event.buttons === 1) {\n      const canvasRect = this.canvas.nativeElement.getBoundingClientRect();\n      this.camera.moveTo(\n        (event.clientX - canvasRect.x) / this.minimapRenderer.scale,\n        (event.clientY - canvasRect.y) / this.minimapRenderer.scale,\n      );\n    }\n  }\n}\n","<canvas\n  #canvas\n  (mousemove)=\"moveViewport($event)\"\n  (mousedown)=\"moveViewport($event)\"\n></canvas>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n} from \"@angular/core\";\n\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { NextTurnService } from \"../next-turn.service\";\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-next-turn-button\",\n  templateUrl: \"./next-turn-button.component.html\",\n  styleUrls: [\"./next-turn-button.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NextTurnButtonComponent implements OnInit, OnDestroy {\n  ngUnsubscribe = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private game: GameApi,\n    public nextTurnService: NextTurnService,\n  ) {}\n\n  ngOnInit() {\n    this.game.nextTask$\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  get cssClass() {\n    const nextTask = this.game.nextTask;\n\n    if (!nextTask) {\n      return \"\";\n    }\n\n    switch (nextTask.task) {\n      case \"city\":\n        return \"production-color\";\n      case \"unit\":\n        return \"\";\n    }\n  }\n\n  get label() {\n    const nextTask = this.game.nextTask;\n\n    if (!nextTask) {\n      return \"Next turn\";\n    }\n\n    switch (nextTask.task) {\n      case \"city\":\n        return \"Choose production\";\n      case \"unit\":\n        return \"Unit needs orders\";\n    }\n  }\n}\n","<button *ngIf=\"nextTurnService.waiting$ | async; else buttonTmpl\">\n  <app-spinner></app-spinner> Wait for other players\n</button>\n\n<ng-template #buttonTmpl>\n  <button [class]=\"cssClass\" (click)=\"nextTurnService.next()\">\n    {{ label }}\n  </button>\n</ng-template>\n","import { Injectable } from \"@angular/core\";\n\nimport { BehaviorSubject } from \"rxjs\";\n\nimport { MapUi } from \"./map-ui\";\nimport { Camera } from \"../renderer/camera\";\nimport { GameApi } from \"../api\";\n\n@Injectable()\nexport class NextTurnService {\n  private _waiting$ = new BehaviorSubject<boolean>(false);\n  waiting$ = this._waiting$.asObservable();\n\n  constructor(\n    public game: GameApi,\n    private camera: Camera,\n    private mapUi: MapUi,\n  ) {}\n\n  async next() {\n    if (this._waiting$.value) {\n      return;\n    }\n\n    const nextTask = this.game.nextTask;\n\n    if (!nextTask) {\n      this._waiting$.next(true);\n      await this.game.nextPlayer();\n      this._waiting$.next(false);\n      return;\n    }\n\n    const state = this.game.state!;\n\n    switch (nextTask.task) {\n      case \"city\":\n        const city = state.citiesMap.get(nextTask.id)!;\n        this.mapUi.selectCity(city);\n        break;\n\n      case \"unit\":\n        const unit = state.unitsMap.get(nextTask.id)!;\n        this.mapUi.selectUnit(unit);\n        this.camera.moveToTileWithEasing(unit.tile);\n        break;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"percentBonus\",\n})\nexport class PercentBonusPipe implements PipeTransform {\n  transform(value: number): string {\n    return (value * 100).toFixed(0) + \"%\";\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-player-yields\",\n  templateUrl: \"./player-yields.component.html\",\n  styleUrls: [\"./player-yields.component.scss\"],\n})\nexport class PlayerYieldsComponent implements OnInit {\n  constructor(private game: GameApi) {}\n\n  ngOnInit(): void {}\n\n  get yields() {\n    return this.game.state!.trackedPlayer.yields;\n  }\n}\n","<div class=\"public-works-color\" [appTooltip]=\"publicWorksTooltipTmpl\">\n  Public works: {{ yields.total.publicWorks }} ({{\n    yields.perTurn.publicWorks >= 0 ? \"+\" : \"\"\n  }}{{ yields.perTurn.publicWorks }})\n</div>\n\n<ng-template #publicWorksTooltipTmpl>\n  <div>From cities: {{ yields.income.publicWorks }}</div>\n  <div>Improvements maintainance: {{ yields.costs.publicWorks }}</div>\n  <div>Netto per turn: {{ yields.perTurn.publicWorks }}</div>\n</ng-template>\n","import {\n  Component,\n  Input,\n  ViewChild,\n  TemplateRef,\n  AfterViewInit,\n} from \"@angular/core\";\n\nimport { ProductDefinition, ProductRequirement } from \"src/app/core/product\";\nimport { CityCore } from \"src/app/core/city\";\nimport { BUILDINGS_MAP } from \"src/app/core/buildings\";\n\n@Component({\n  selector: \"app-product-requirements\",\n  templateUrl: \"./product-requirements.component.html\",\n  styleUrls: [\"./product-requirements.component.scss\"],\n})\nexport class ProductRequirementsComponent implements AfterViewInit {\n  @Input() product: ProductDefinition;\n\n  @Input() city: CityCore;\n\n  @ViewChild(\"buildingTmpl\") buildingRef: TemplateRef<any>;\n\n  @ViewChild(\"sizeTmpl\") sizeRef: TemplateRef<any>;\n\n  templates = new Map<string, TemplateRef<any>>();\n\n  failedRequirements: ProductRequirement[] = [];\n\n  constructor() {}\n\n  ngAfterViewInit(): void {\n    this.templates.set(\"building\", this.buildingRef);\n    this.templates.set(\"size\", this.sizeRef);\n\n    for (const r of this.product.weakRequirements) {\n      if (!r.check(this.city)) {\n        this.failedRequirements.push(r);\n      }\n    }\n  }\n\n  getBuildingName(id: string) {\n    return BUILDINGS_MAP.get(id)!.name;\n  }\n}\n","<ng-container *ngFor=\"let requirement of failedRequirements\">\n  <ng-container\n    *ngTemplateOutlet=\"\n      templates.get(requirement.id);\n      context: { requirement: requirement }\n    \"\n  ></ng-container>\n</ng-container>\n\n<ng-template #buildingTmpl let-requirement=\"requirement\">\n  <div>\n    <b>{{ getBuildingName(requirement.buildingId) }}</b> is required\n  </div>\n</ng-template>\n\n<ng-template #sizeTmpl let-requirement=\"requirement\">\n  <div>\n    City size <b>{{ requirement.size }}</b> is required\n  </div>\n</ng-template>\n","import { Component, OnInit, HostBinding } from \"@angular/core\";\n\nimport { filter } from \"rxjs/operators\";\n\nimport { GameApi } from \"src/app/api\";\n\n@Component({\n  selector: \"app-turn-counter\",\n  templateUrl: \"./turn-counter.component.html\",\n  styleUrls: [\"./turn-counter.component.scss\"],\n})\nexport class TurnCounterComponent implements OnInit {\n  @HostBinding(\"class.is-visible\")\n  isVisible = false;\n\n  timeout: number;\n\n  constructor(public game: GameApi) {}\n\n  ngOnInit(): void {\n    this.game.state!.turn$.pipe(filter((turn) => turn > 1)).subscribe(() => {\n      this.isVisible = true;\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n      this.timeout = setTimeout(() => (this.isVisible = false), 2000) as any;\n    });\n  }\n}\n","<div class=\"turn\">turn {{ game.state!.turn$ | async }}</div>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"turns\",\n})\nexport class TurnsPipe implements PipeTransform {\n  transform(value: number | null): string {\n    if (value === null) {\n      return \"\";\n    }\n    if (value === Infinity) {\n      return \"∞\";\n    }\n    return value.toString();\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { CityDetails } from \"../api/city-details\";\n\nexport class UIState {\n  editorEnabled$ = new BehaviorSubject<boolean>(false);\n  menuVisible$ = new BehaviorSubject<boolean>(true);\n  selectedCity$ = new BehaviorSubject<CityDetails | null>(null);\n}\n","<div class=\"requirements\" *ngFor=\"let requirement of failedRequirements\">\n  <ng-container [ngSwitch]=\"requirement\">\n    <ng-container *ngSwitchCase=\"'ownTile'\">\n      Must be on owned tile.\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'notForeignTile'\">\n      Cannot be build on someone else's land.\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'sameImprovement'\">\n      Already built.\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'noRoad'\">\n      Already built.\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'improvementPossible'\">\n      Cannot be built here.\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'publicWorks'\">\n      Not enough public work points.\n    </ng-container>\n  </ng-container>\n</div>\n\n<div class=\"public-works-color\" *ngIf=\"publicWorksRequired\">\n  Will consume {{ publicWorksRequired }} public works points.\n</div>\n\n<div class=\"public-works-color\" *ngIf=\"publicWorksPerTurn\">\n  Costs per turn: {{ publicWorksPerTurn }} public works points.\n</div>\n\n<div *ngIf=\"action === 'foundCity'\">\n  Will consume the unit\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from \"@angular/core\";\n\nimport {\n  UnitAction,\n  getPublicWorksRequired,\n  getPublicWorksPerTurn,\n} from \"src/app/core/unit-actions\";\nimport { UnitDetails } from \"src/app/api/unit-details\";\n\n@Component({\n  selector: \"app-unit-action-requirements\",\n  templateUrl: \"./unit-action-requirements.component.html\",\n  styleUrls: [\"./unit-action-requirements.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitActionRequirementsComponent implements OnInit {\n  @Input() unit: UnitDetails;\n\n  @Input() action: UnitAction;\n\n  failedRequirements: string[] = [];\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  async ngOnInit() {\n    this.failedRequirements = await this.unit.getFailedActionRequirements(\n      this.action,\n    );\n    this.cdr.markForCheck();\n  }\n\n  get publicWorksRequired() {\n    return getPublicWorksRequired(this.action);\n  }\n\n  get publicWorksPerTurn() {\n    return getPublicWorksPerTurn(this.action);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  OnDestroy,\n  ChangeDetectorRef,\n  Input,\n  HostBinding,\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { Camera } from \"src/app/renderer/camera\";\nimport { UnitDetails } from \"src/app/api/unit-details\";\nimport { TILE_SIZE } from \"src/app/renderer/constants\";\n\n@Component({\n  selector: \"app-unit-marker\",\n  templateUrl: \"./unit-marker.component.html\",\n  styleUrls: [\"./unit-marker.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitMarkerComponent implements OnInit, OnDestroy {\n  @Input() unit: UnitDetails;\n\n  ngUnsubscribe = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private domSanitizer: DomSanitizer,\n    private camera: Camera,\n  ) {}\n\n  ngOnInit(): void {\n    this.camera.transform$\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  @HostBinding(\"style.transform\")\n  get transform() {\n    if (!this.unit) {\n      return \"\";\n    }\n    const [x, y] = [this.unit.tile.x, this.unit.tile.y];\n    const [screenX, screenY] = this.camera.gameToScreen(x, y);\n    const scale = this.camera.transform.scale / TILE_SIZE;\n    return this.domSanitizer.bypassSecurityTrustStyle(\n      `translate(${screenX}px, ${screenY}px) scale(${scale})`,\n    );\n  }\n\n  @HostBinding(\"class.have-moves\")\n  get haveMoves() {\n    return this.unit.actionPointsLeft > 0;\n  }\n}\n","<div class=\"inner\"></div>\n","<div class=\"panel panel-top-right-corner\" *ngIf=\"unit\">\n  <h2>{{ unit.definition.name }}</h2>\n  <p>Moves: {{ unit.actionPointsLeft }}</p>\n  <p>Power: {{ unit.definition.power }}</p>\n  <p>Order: {{ unit.order }}</p>\n\n  <div class=\"actions\">\n    <button class=\"btn-danger\" (click)=\"destroy()\">Disband</button>\n\n    <button (click)=\"setOrder('skip')\">Skip move</button>\n\n    <button (click)=\"setOrder('sleep')\">Sleep</button>\n  </div>\n\n  <div class=\"actions\">\n    <button\n      *ngFor=\"let action of unit.definition.actions\"\n      [class.disabled]=\"!unit.canDoAction(action)\"\n      [appTooltip]=\"unitActionsTooltipTmpl\"\n      [tooltipContext]=\"{ action: action }\"\n      (click)=\"unit.doAction(action)\"\n    >\n      {{ getActionName(action) }}\n    </button>\n  </div>\n</div>\n\n<ng-template #unitActionsTooltipTmpl let-action=\"action\">\n  <app-unit-action-requirements\n    [unit]=\"unit\"\n    [action]=\"action\"\n  ></app-unit-action-requirements>\n</ng-template>\n\n<app-unit-marker *ngIf=\"unit\" [unit]=\"unit\"></app-unit-marker>\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  TemplateRef,\n} from \"@angular/core\";\n\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { UnitAction, ACTIONS } from \"src/app/core/unit-actions\";\nimport { MapUi } from \"../map-ui\";\nimport { UnitDetails } from \"src/app/api/unit-details\";\nimport { UnitOrder } from \"src/app/core/unit\";\nimport { GameApi } from \"src/app/api\";\nimport { Camera } from \"src/app/renderer/camera\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Component({\n  selector: \"app-unit-panel\",\n  templateUrl: \"./unit-panel.component.html\",\n  styleUrls: [\"./unit-panel.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitPanelComponent implements OnInit, OnDestroy {\n  unit: UnitDetails | null = null;\n\n  requirementsTemplates = new Map<UnitAction, TemplateRef<any>>();\n\n  private ngUnsubscribe = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private game: GameApi,\n    private mapUi: MapUi,\n  ) {}\n\n  ngOnInit(): void {\n    this.mapUi.selectedUnit$\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe((unit) => {\n        this.unit = unit;\n        this.cdr.markForCheck();\n      });\n\n    this.game\n      .state!.turn$.pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(async () => {\n        if (this.unit) {\n          await this.unit.refresh();\n          this.mapUi.unitRangeArea.setTiles(await this.unit.getRange());\n          this.cdr.markForCheck();\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  getActionName(action: UnitAction) {\n    return ACTIONS[action].name;\n  }\n\n  async setOrder(order: UnitOrder) {\n    await this.unit?.setOrder(order);\n    this.cdr.markForCheck();\n  }\n\n  destroy() {\n    if (this.unit) {\n      this.unit.disband();\n      this.mapUi.selectUnit(null);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"panel\">\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\n\nimport { Option } from \"../option.interface\";\n\n@Component({\n  selector: \"app-multiselect\",\n  templateUrl: \"./multiselect.component.html\",\n  styleUrls: [\"./multiselect.component.scss\"],\n})\nexport class MultiselectComponent {\n  @Input() options: Option[];\n\n  @Input() value: any[];\n\n  @Output() changed = new EventEmitter<any[]>();\n\n  toggleOption(option: Option) {\n    if (this.value.includes(option.value)) {\n      const index = this.value.indexOf(option.value);\n      const newValue = [...this.value];\n      newValue.splice(index, 1);\n      this.changed.next(newValue);\n    } else {\n      this.changed.next([...this.value, option.value]);\n    }\n  }\n}\n","<div\n  class=\"option\"\n  *ngFor=\"let option of options\"\n  [class.selected]=\"value.includes(option.value)\"\n  (click)=\"toggleOption(option)\"\n>\n  {{ option.label }}\n</div>\n","import { Component, Input, ChangeDetectionStrategy } from \"@angular/core\";\n\n@Component({\n  selector: \"app-progress-bar\",\n  templateUrl: \"./progress-bar.component.html\",\n  styleUrls: [\"./progress-bar.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProgressBarComponent {\n  @Input() progress: number;\n\n  @Input() nextProgress: number;\n\n  @Input() total: number;\n\n  get progressPercent() {\n    return (this.progress / this.total) * 100;\n  }\n\n  get nextProgressPercent() {\n    return (this.nextProgress / this.total) * 100;\n  }\n}\n","<ng-container *ngIf=\"total\">\n  <div\n    class=\"progress next\"\n    *ngIf=\"nextProgress > progress\"\n    [style.width.%]=\"nextProgressPercent\"\n  ></div>\n\n  <div class=\"progress\" [style.width.%]=\"progressPercent\"></div>\n\n  <div\n    class=\"progress negative\"\n    *ngIf=\"nextProgress < progress\"\n    [style.width.%]=\"progressPercent - nextProgressPercent\"\n    [style.left.%]=\"nextProgressPercent\"\n  ></div>\n\n  <ng-content></ng-content>\n</ng-container>\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\n\nimport { Option } from \"../option.interface\";\n\n@Component({\n  selector: \"app-radio\",\n  templateUrl: \"./radio.component.html\",\n  styleUrls: [\"./radio.component.scss\"],\n})\nexport class RadioComponent {\n  @Input() options: Option[];\n\n  @Input() value: any;\n\n  @Output() changed = new EventEmitter<any>();\n}\n","<div\n  class=\"option\"\n  *ngFor=\"let option of options\"\n  [class.selected]=\"option.value === value\"\n  (click)=\"changed.next(option.value)\"\n>\n  {{ option.label }}\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export * from \"./tab/tab.component\";\nexport * from \"./tabs.component\";\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from \"@angular/core\";\n\nimport { BehaviorSubject } from \"rxjs\";\nimport { distinctUntilChanged } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-tab\",\n  templateUrl: \"./tab.component.html\",\n  styleUrls: [\"./tab.component.scss\"],\n})\nexport class TabComponent implements OnDestroy {\n  @Input() tabTitle: string;\n\n  @Output() select = new EventEmitter<void>();\n\n  private _isVisible$ = new BehaviorSubject<boolean>(false);\n  isVisible$ = this._isVisible$.asObservable().pipe(distinctUntilChanged());\n\n  ngOnDestroy() {\n    this.hide();\n  }\n\n  hide() {\n    this._isVisible$.next(false);\n  }\n\n  show() {\n    this._isVisible$.next(true);\n    this.select.next();\n  }\n\n  get isVisible() {\n    return this._isVisible$.value;\n  }\n}\n","<div class=\"content\">\n  <ng-content *ngIf=\"isVisible\"></ng-content>\n</div>\n","import {\n  Component,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n} from \"@angular/core\";\n\nimport { TabComponent } from \"./tab/tab.component\";\n\n@Component({\n  selector: \"app-tabs\",\n  templateUrl: \"./tabs.component.html\",\n  styleUrls: [\"./tabs.component.scss\"],\n})\nexport class TabsComponent implements AfterContentInit {\n  @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\n\n  activeTab: TabComponent;\n\n  ngAfterContentInit() {\n    this.activateTab(this.tabs.first);\n  }\n\n  activateTab(tab: TabComponent) {\n    if (this.activeTab) {\n      this.activeTab.hide();\n    }\n    this.activeTab = tab;\n    this.activeTab.show();\n  }\n}\n","<div class=\"tabs\">\n  <div\n    class=\"tab\"\n    *ngFor=\"let tab of tabs\"\n    [class.active]=\"tab === activeTab\"\n    (click)=\"activateTab(tab)\"\n  >{{ tab.tabTitle }}</div>\n</div>\n\n<ng-content></ng-content>\n","import {\n  Component,\n  OnInit,\n  Input,\n  HostBinding,\n  HostListener,\n  Output,\n  EventEmitter,\n} from \"@angular/core\";\n\n@Component({\n  selector: \"app-toggle\",\n  templateUrl: \"./toggle.component.html\",\n  styleUrls: [\"./toggle.component.scss\"],\n})\nexport class ToggleComponent implements OnInit {\n  @HostBinding(\"class.enabled\")\n  @Input()\n  value: boolean;\n\n  @Output() changed = new EventEmitter<boolean>();\n\n  @HostListener(\"click\")\n  toggle() {\n    this.value = !this.value;\n    this.changed.next(this.value);\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<ng-content></ng-content>\n","import {\n  Directive,\n  Input,\n  TemplateRef,\n  HostListener,\n  ElementRef,\n  OnDestroy,\n} from \"@angular/core\";\nimport {\n  Overlay,\n  OverlayRef,\n  ConnectionPositionPair,\n} from \"@angular/cdk/overlay\";\nimport { ComponentPortal } from \"@angular/cdk/portal\";\n\nimport { TooltipComponent } from \"./tooltip/tooltip.component\";\n\n@Directive({\n  selector: \"[appTooltip]\",\n})\nexport class TooltipDirective implements OnDestroy {\n  overlayRef: OverlayRef | null = null;\n\n  @Input(\"appTooltip\") templateRef: TemplateRef<any>;\n\n  @Input(\"tooltipContext\") context: any;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private overlay: Overlay,\n  ) {}\n\n  ngOnDestroy() {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n    }\n  }\n\n  @HostListener(\"mouseenter\")\n  showTooltip() {\n    this.overlayRef = this.overlay.create({\n      positionStrategy: this.overlay\n        .position()\n        .flexibleConnectedTo(this.elementRef)\n        .withPositions(this.getPositions()),\n    });\n\n    const tooltipPortal = new ComponentPortal<TooltipComponent>(\n      TooltipComponent,\n    );\n    const componentRef = this.overlayRef.attach(tooltipPortal);\n    componentRef.instance.templateRef = this.templateRef;\n    componentRef.instance.context = this.context;\n  }\n\n  @HostListener(\"mouseleave\")\n  hideTooltip() {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = null;\n    }\n  }\n\n  private getPositions(): ConnectionPositionPair[] {\n    return [\n      {\n        originX: \"center\",\n        originY: \"top\",\n        overlayX: \"center\",\n        overlayY: \"bottom\",\n      },\n      {\n        originX: \"center\",\n        originY: \"bottom\",\n        overlayX: \"center\",\n        overlayY: \"top\",\n      },\n    ];\n  }\n}\n","import { Component, OnInit, TemplateRef } from \"@angular/core\";\n\n@Component({\n  selector: \"app-tooltip\",\n  templateUrl: \"./tooltip.component.html\",\n  styleUrls: [\"./tooltip.component.scss\"],\n})\nexport class TooltipComponent implements OnInit {\n  templateRef: TemplateRef<any>;\n\n  context: any;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<ng-container *ngTemplateOutlet=\"templateRef; context: context\"></ng-container>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}